built_resource_to_artifacts,"Callable[[dict],_]"
built_resource,dict
get_azure_download_url,"Callable[[_],str]"
set_repository_metadata,"Callable[[_, _, _, _, _],None]"
apply_storage_commands,"Callable[[dict, dict],None]"
storage_providers,dict
storage_commands,dict
__init__,"Callable[[_, AbstractStorageProvider],_]"
storage_provider,AbstractStorageProvider
__init__,"Callable[[_, str],_]"
path,str
upload,"Callable[[_, str, Union[bytes, None], Union[str, None], bool, Union[str, None]],_]"
destination_path,str
no_cache,bool
upload,"Callable[[_, str, Union[bytes, None], Union[str, None], bool, Union[str, None]],_]"
destination_path,str
no_cache,bool
upload,"Callable[[_, str, Union[bytes, None], Union[str, None], bool, Union[str, None]],_]"
destination_path,str
no_cache,bool
success,"Callable[[Config],_]"
config,Config
_get_cluster_package_list,"Callable[[str, str],str]"
serve_dir,str
package_list_base_dir,str
normalize_config_validation_exception,"Callable[[ValidationError],dict]"
error,ValidationError
__getitem__,"Callable[[_, str],_]"
key,str
__contains__,"Callable[[_, str],_]"
key,str
to_config,"Callable[[dict],_]"
config_dict,dict
__init__,"Callable[[_, dict],_]"
check_runner_response,dict
validate_response,"Callable[[_, dict],_]"
response,dict
is_error_response,"Callable[[dict],_]"
response,dict
_validate_check_runner_success_response,"Callable[[_, dict],_]"
response,dict
parse,"Callable[[str],_]"
id,str
load,"Callable[[_, str],_]"
id,str
load_packages,"Callable[[_, Iterable],_]"
ids,Iterable
__init__,"Callable[[_, bool, bool],_]"
manage_users,bool
add_users,bool
hash_str,"Callable[[str],_]"
s,str
hash_int,"Callable[[int],_]"
i,int
hash_dict,"Callable[[dict],_]"
d,dict
_get_package_list,"Callable[[str, str],List[str]]"
package_list_id,str
repository_url,str
__init__,"Callable[[_, str],_]"
msg,str
try_fetch_by_id,"Callable[[_, PackageId],_]"
pkg_id,PackageId
visit,"Callable[[tuple],_]"
pkg_tuple,tuple
build,"Callable[[PackageStore, str, _, _, _],_]"
package_store,PackageStore
name,str
prepend_command,"Callable[[list, _, _, _],_]"
self,list
prepare_status,"Callable[[_, str, list],_]"
name,str
nodes,list
compare_lists,"Callable[[str, str],_]"
first_json,str
second_json,str
parse_ip,"Callable[[str, int],_]"
ip,str
default_port,int
__init__,"Callable[[_, _, dict, int],_]"
tags,dict
default_port,int
__init__,"Callable[[_, list, _, _, _, _, _, _, _],_]"
targets,list
_run_chain_command,"Callable[[_, CommandChain, _, _],_]"
chain,CommandChain
run_commands_chain_async,"Callable[[_, list, _, _, _],_]"
chains,list
validate_downstream_entry,"Callable[[dict],None]"
entry,dict
stringify_configuration,"Callable[[dict],_]"
configuration,dict
user_arguments_to_source,"Callable[[_],gen.internals.Source]"
get_dcosconfig_source_target_and_templates,"Callable[[dict, List[str], List[gen.internals.Source]],_]"
user_arguments,dict
extra_sources,List[gen.internals.Source]
user_arguments_to_yaml,"Callable[[dict],_]"
user_arguments,dict
get_config_id,"Callable[[dict],_]"
argument_dict,dict
validate_arguments_strings,"Callable[[dict],_]"
arguments,dict
validate_one_of,"Callable[[str, _],None]"
val,str
function_id,"Callable[[Callable],_]"
function,Callable
value_id,"Callable[[Union[str, Callable, Late]],str]"
__init__,"Callable[[_, str, Union[str, Callable, Late], bool, List[Tuple[str, str]], bool],_]"
name,str
is_optional,bool
conditions,"List[Tuple[str, str]]"
is_user,bool
__init__,"Callable[[_, str, Dict[str, Any]],_]"
name,str
add_case,"Callable[[_, str, _],_]"
value,str
add_variable,"Callable[[_, str],_]"
variable,str
add_scope,"Callable[[_, Scope],_]"
scope,Scope
finalize,"Callable[[_, dict],_]"
arguments,dict
__init__,"Callable[[_, str, list],_]"
message,str
chain,list
finalize_value,"Callable[[_, str, Setter],_]"
value,str
setter,Setter
validate_single,"Callable[[_, str, str],_]"
name,str
value,str
yield_multi_argument_validate_errors,"Callable[[_, ArgumentDict],_]"
arguments,ArgumentDict
has_no_late_parameters,"Callable[[_],bool]"
__init__,"Callable[[_, str],_]"
corpus,str
__init__,"Callable[[_, str, dict],_]"
identifier,str
cases,dict
__init__,"Callable[[_, str, str, list],_]"
new_var,str
iterable,str
body,list
__init__,"Callable[[_, Tuple[str, Union[str, None]]],_]"
identifier_and_filter,"Tuple[str, Union[str, None]]"
__init__,"Callable[[_, list],_]"
ast,list
render,"Callable[[_, dict, dict],_]"
arguments,dict
filters,dict
check_duplicates,"Callable[[list],_]"
items,list
validate_true_false,"Callable[[_],None]"
validate_ipv4_addresses,"Callable[[list],_]"
ips,list
validate_ipv6_addresses,"Callable[[list],_]"
ip6s,list
validate_ip_list,"Callable[[str],_]"
json_str,str
validate_ip_port_list,"Callable[[str],_]"
json_str,str
file_mode,"Callable[[str],str]"
filename,str
assert_package_contents,"Callable[[dict, str],None]"
config,dict
package_contents_dir,str
assert_do_gen_package,"Callable[[dict],None]"
config,dict
supported_ssl_ciphers,"Callable[[_, Dict[str, str], str],List[str]]"
config_path,str
_as_artifact_and_pkg,"Callable[[_, _, Tuple],_]"
bundle,Tuple
make_bash,"Callable[[_],None]"
zk_connect,"Callable[[Union[str, None], Union[str, None]],KazooClient]"
_zk_lock,"Callable[[KazooClient, str, str, int],Generator]"
zk,KazooClient
lock_path,str
contender_id,str
timeout,int
_init_cockroachdb_cluster,"Callable[[str],None]"
ip,str
_wait_for_pidfile,"Callable[[int],bool]"
pid,int
run_as_dcos_cockroach,"Callable[[],Any]"
_get_registered_nodes,"Callable[[KazooClient, str],List[str]]"
zk,KazooClient
zk_path,str
_register_cluster_membership,"Callable[[KazooClient, str, str],List[str]]"
zk,KazooClient
zk_path,str
ip,str
_dump_nodes_to_file,"Callable[[List[str], str],None]"
file_path,str
main,"Callable[[],None]"
set_cluster_version,"Callable[[str, str],None]"
my_internal_ip,str
version,str
set_num_replicas,"Callable[[str, int],None]"
my_internal_ip,str
num_replicas,int
get_expected_master_node_count,"Callable[[],int]"
main,"Callable[[],None]"
validate_json_entry,"Callable[[dict],_]"
entry,dict
check_response_ok,"Callable[[requests.models.Response, dict],_]"
response,requests.models.Response
headers,dict
validate_journald_cursor,"Callable[[str, _],_]"
c,str
_tests_from_pattern,"Callable[[str],Set[str]]"
ci_pattern,str
test_test_groups,"Callable[[],None]"
patterns_from_group,"Callable[[str],List[str]]"
group_name,str
list_integration_test_patterns,"Callable[[str],None]"
group_name,str
test_vip,"Callable[[_, marathon.Container, marathon.Network, marathon.Network, bool],_]"
ipv6,bool
deploy_test_app_and_check,"Callable[[_, dict, str],_]"
app,dict
test_uuid,str
deploy_test_app_and_check_windows,"Callable[[_, dict, str],_]"
app,dict
test_uuid,str
_read_from_zip,"Callable[[zipfile.ZipFile, str, _],_]"
item,str
_get_dcos_diagnostics_health,"Callable[[zipfile.ZipFile, str],_]"
item,str
check_tags,"Callable[[dict, set],_]"
tags,dict
expected_tag_names,set
assert_app_metric_value_for_task,"Callable[[_, str, str, str, _],_]"
node,str
task_name,str
metric_name,str
get_app_metric_for_task,"Callable[[_, str, str, str],_]"
node,str
task_name,str
metric_name,str
get_app_metrics_for_task,"Callable[[_, str, str],_]"
node,str
task_name,str
get_container_ids,"Callable[[_, str],_]"
node,str
get_container_metrics,"Callable[[_, str, str],_]"
node,str
container_id,str
get_app_metrics,"Callable[[_, str, str],_]"
node,str
container_id,str
marathon_test_app_linux,"Callable[[int, int, marathon.Container, marathon.Network, marathon.Healthcheck, str, str, str, str],_]"
host_port,int
container_port,int
vip,str
host_constraint,str
network_name,str
app_name_fmt,str
marathon_test_app_windows,"Callable[[str, int, str],_]"
host_constraint,str
host_port,int
network_name,str
test_systemd_units_are_healthy,"Callable[[_],None]"
_get_datafile_name,"Callable[[_, datetime],_]"
timestamp,datetime
add_data,"Callable[[_, datetime, _],_]"
timestamp,datetime
x,"Callable[[int],_]"
y,int
munge,"Callable[[AnyStr, AnyStr, _, Union[str, dict]],AnyStr]"
input,AnyStr
sep,AnyStr
add,"Callable[[int, int],int]"
a,int
b,int
add,"Callable[[int, int],int]"
a,int
b,int
add,"Callable[[int, int, int],int]"
a,int
b,int
c,int
add,"Callable[[int],_]"
a,int
foo,"Callable[[int],int]"
x,int
CONST,int
__init__,"Callable[[_, typing.Sequence[typing.Union[Section, Link]], str, str, str, str],_]"
content,"typing.Sequence[typing.Union[Section, Link]]"
url,str
title,str
description,str
version,str
__init__,"Callable[[_, str, typing.Sequence[typing.Union[Section, Link]], str, str],_]"
name,str
content,"typing.Sequence[typing.Union[Section, Link]]"
title,str
description,str
__init__,"Callable[[_, str, str, typing.Callable, str, str, Response, str, str, typing.Sequence[Field]],_]"
url,str
method,str
name,str
encoding,str
response,Response
title,str
description,str
fields,typing.Sequence[Field]
__init__,"Callable[[_, str, str, str, str, bool, Validator, typing.Any],_]"
name,str
location,str
title,str
description,str
required,bool
schema,Validator
__init__,"Callable[[_, str, int, Validator],_]"
encoding,str
status_code,int
schema,Validator
numeric_type,type
lookup_operation,"Callable[[_, str],_]"
operation_id,str
request,"Callable[[_, str],_]"
operation_id,str
__init__,"Callable[[_, _, int, int, _],_]"
start_index,int
end_index,int
__init__,"Callable[[_, Callable[[],None], Callable[[],None]],None]"
setup,"Callable[[],None]"
command,"Callable[[],None]"
print_offset,"Callable[[str, int],None]"
text,str
indent_length,int
delete_folder,"Callable[[str],None]"
folder_path,str
execute,"Callable[[List[str]],None]"
stdout_bytes,bytes
stderr_bytes,bytes
trial,"Callable[[int, Command],List[float]]"
num_trials,int
command,Command
report,"Callable[[str, List[float]],None]"
name,str
main,"Callable[[],None]"
__init__,"Callable[[_, str, JsonDict, JsonDict, int, int],None]"
filename,str
data_json,JsonDict
meta_json,JsonDict
data_size,int
meta_size,int
load_json,"Callable[[str, str],CacheData]"
data_path,str
meta_path,str
get_files,"Callable[[str],Iterable[CacheData]]"
root,str
pluck,"Callable[[str, Iterable[JsonDict]],Iterable[JsonDict]]"
name,str
report_counter,"Callable[[Counter, Union[int, None]],None]"
counter,Counter
report_most_common,"Callable[[List[JsonDict], Union[int, None]],None]"
compress,"Callable[[JsonDict],JsonDict]"
chunk,JsonDict
helper,"Callable[[Any],Any]"
chunk,Any
decompress,"Callable[[JsonDict],JsonDict]"
chunk,JsonDict
helper,"Callable[[Any],Any]"
chunk,Any
main,"Callable[[],None]"
__init__,"Callable[[_, str, str],None]"
header_type,str
args,str
is_header,"Callable[[str],bool]"
line,str
current_chunk,Chunk
write_out,"Callable[[str, List[str]],None]"
filename,str
write_tree,"Callable[[str, Iterator[Chunk]],None]"
root,str
help,"Callable[[],None]"
main,"Callable[[],None]"
print_offset,"Callable[[str, int],None]"
text,str
indent_length,int
delete_folder,"Callable[[str],None]"
folder_path,str
execute,"Callable[[List[str]],None]"
stdout_bytes,bytes
stderr_bytes,bytes
test,"Callable[[Command, Command, Command],float]"
setup,Command
command,Command
teardown,Command
make_touch_wrappers,"Callable[[str],Tuple[Command, Command]]"
filename,str
setup,"Callable[[],None]"
teardown,"Callable[[],None]"
make_change_wrappers,"Callable[[str],Tuple[Command, Command]]"
filename,str
setup,"Callable[[],None]"
teardown,"Callable[[],None]"
main,"Callable[[],None]"
plain_coroutine,"Callable[[],int]"
decorated_coroutine,"Callable[[],int]"
__iter__,"Callable[[_],It]"
__next__,"Callable[[_],str]"
other_iterator,"Callable[[],It]"
other_coroutine,"Callable[[],Aw]"
plain_host_coroutine,"Callable[[_],None]"
decorated_host_coroutine,"Callable[[_],None]"
prelude,"Callable[[int, str],None]"
limit,int
bound,str
expand_template,"Callable[[str, str, int, int],None]"
template,str
arg_template,str
lower,int
limit,int
print_offset,"Callable[[str, int],None]"
text,str
indent_length,int
delete_folder,"Callable[[str],None]"
folder_path,str
execute,"Callable[[List[str], bool],Tuple[str, str, int]]"
fail_on_error,bool
stdout_bytes,bytes
stderr_bytes,bytes
ensure_environment_is_ready,"Callable[[str, str, str],None]"
mypy_path,str
temp_repo_path,str
mypy_cache_path,str
initialize_repo,"Callable[[str, str, str],None]"
repo_url,str
temp_repo_path,str
branch,str
get_commits,"Callable[[str, str],List[Tuple[str, str]]]"
repo_folder_path,str
commit_range,str
get_commits_starting_at,"Callable[[str, str],List[Tuple[str, str]]]"
repo_folder_path,str
start_commit,str
get_nth_commit,"Callable[[str, int],Tuple[str, str]]"
repo_folder_path,str
n,int
run_mypy,"Callable[[Union[str, None], str, Union[str, None]],Tuple[float, str, Dict[str, Any]]]"
mypy_cache_path,str
incremental,bool
daemon,bool
verbose,bool
filter_daemon_stats,"Callable[[str],Tuple[str, Dict[str, Any]]]"
output,str
start_daemon,"Callable[[str],None]"
mypy_cache_path,str
stop_daemon,"Callable[[],None]"
load_cache,"Callable[[str],JsonDict]"
incremental_cache_path,str
save_cache,"Callable[[JsonDict, str],None]"
cache,JsonDict
incremental_cache_path,str
set_expected,"Callable[[List[Tuple[str, str]], JsonDict, str, Union[str, None], str, Union[str, None]],None]"
commits,"List[Tuple[str, str]]"
cache,JsonDict
temp_repo_path,str
mypy_cache_path,str
test_incremental,"Callable[[List[Tuple[str, str]], JsonDict, str, Union[str, None], str],None]"
commits,"List[Tuple[str, str]]"
cache,JsonDict
temp_repo_path,str
mypy_cache_path,str
daemon,bool
exit_on_error,bool
expected_runtime,float
expected_output,str
cleanup,"Callable[[str, str],None]"
temp_repo_path,str
mypy_cache_path,str
test_repo,"Callable[[str, str, Union[str, None], str, str, str, str, str, str, Namespace],None]"
target_repo_url,str
temp_repo_path,str
mypy_path,str
incremental_cache_path,str
mypy_cache_path,str
range_type,str
range_start,str
branch,str
params,Namespace
main,"Callable[[],None]"
help_factory,Any
__init__,"Callable[[_, str, bool, bool],None]"
version,str
force,bool
no_upload,bool
build_and_upload,"Callable[[_],None]"
prompt,"Callable[[_],None]"
verify_version,"Callable[[_],None]"
run_sanity_checks,"Callable[[_],None]"
git_clone_repo,"Callable[[_],None]"
git_check_out_tag,"Callable[[_],None]"
make_virtualenv,"Callable[[_],None]"
install_dependencies,"Callable[[_],None]"
make_wheel,"Callable[[_],None]"
make_sdist,"Callable[[_],None]"
upload_wheel,"Callable[[_],None]"
upload_sdist,"Callable[[_],None]"
run,"Callable[[_, str],None]"
cmd,str
run_in_virtualenv,"Callable[[_, str],None]"
cmd,str
heading,"Callable[[_, str],None]"
heading,str
parse_args,"Callable[[],Any]"
apply_all,"Callable[[Any, str, str, str, Tuple[str], bool, bool],None]"
func,Any
directory,str
extension,str
to_extension,str
recursive,bool
debug,bool
confirm,"Callable[[bool],bool]"
resp,bool
main,"Callable[[str, str, str, str, Tuple[str], bool],None]"
action,str
directory,str
extension,str
to_extension,str
not_recursive,bool
update_line,"Callable[[str, str, int],str]"
line,str
s,str
pos,int
run_mypy,"Callable[[List[str], str, str],str]"
filename,str
tmp_name,str
get_revealed_type,"Callable[[str, str, int],Union[str, None]]"
line,str
relevant_file,str
relevant_line,int
process_output,"Callable[[str, str, int],Tuple[Union[str, None], bool]]"
output,str
filename,str
start_line,int
test_stub,"Callable[[str],_]"
name,str
dump_module,"Callable[[str],Dict[str, Any]]"
name,str
_str_to_int,"Callable[[CheckerPluginInterface, Type],Type]"
api,CheckerPluginInterface
typ,Type
my_hook,"Callable[[MethodSigContext],CallableType]"
ctx,MethodSigContext
my_hook,"Callable[[MethodSigContext],CallableType]"
ctx,MethodSigContext
get_attribute_hook,"Callable[[_, str],Union[Callable[[AttributeContext],Type], None]]"
fullname,str
signal_call_callback,"Callable[[AttributeContext],Type]"
ctx,AttributeContext
get_type_analyze_hook,"Callable[[_, str],Union[Callable[[AnalyzeTypeContext],Type], None]]"
fullname,str
signal_type_analyze_callback,"Callable[[AnalyzeTypeContext],Type]"
ctx,AnalyzeTypeContext
get_base_class_hook,"Callable[[_, str],_]"
fullname,str
unescape,"Callable[[str],str]"
url,str
fix_url,"Callable[[str],str]"
url,str
__init__,"Callable[[_, int],None]"
level,int
_log,"Callable[[_, int, Sequence[Any]],None]"
n,int
log,"Callable[[_, int],None]"
n,int
args,Any
__call__,"Callable[[_, int],None]"
n,int
args,Any
__init__,"Callable[[_, Logger, int, int],None]"
log,Logger
max_pool,int
max_tasks,int
self.connections,"Dict[KeyTuple, List[Connection]]"
close,"Callable[[_],None]"
get_connection,"Callable[[_, str, int, bool],Generator[Any, None, Connection]]"
host,str
port,int
ssl,bool
recycle_connection,"Callable[[_, Connection],None]"
conn,Connection
__init__,"Callable[[_, Logger, ConnectionPool, str, int, bool],None]"
log,Logger
pool,ConnectionPool
host,str
port,int
ssl,bool
self.key,KeyTuple
stale,"Callable[[_],bool]"
close,"Callable[[_, bool],None]"
recycle,bool
__init__,"Callable[[_, Logger, str, ConnectionPool],None]"
log,Logger
url,str
pool,ConnectionPool
self.headers,"List[Tuple[str, str]]"
self.conn,Connection
close,"Callable[[_, bool],None]"
recycle,bool
putline,"Callable[[_, str],None]"
line,str
__init__,"Callable[[_, Logger, asyncio.StreamReader],None]"
log,Logger
self.http_version,str
self.status,int
self.reason,str
self.headers,"List[Tuple[str, str]]"
get_redirect_url,"Callable[[_, str],str]"
default,str
get_header,"Callable[[_, str, str],str]"
key,str
default,str
__init__,"Callable[[_, Logger, str, Crawler, int, int],None]"
log,Logger
url,str
crawler,Crawler
max_redirect,int
max_tries,int
self.request,Request
self.response,Response
self.body,bytes
self.next_url,str
self.ctype,str
self.encoding,str
report,"Callable[[_, Stats, IO[str]],None]"
stats,Stats
__init__,"Callable[[_],None]"
add,"Callable[[_, str, int],None]"
key,str
count,int
report,"Callable[[_, IO[str]],None]"
__init__,"Callable[[_, Logger, Set[str], str, bool, int, int, int, int],None]"
log,Logger
exclude,str
strict,bool
max_redirect,int
max_tries,int
max_tasks,int
max_pool,int
close,"Callable[[_],None]"
host_okay,"Callable[[_, str],bool]"
host,str
_host_okay_strictish,"Callable[[_, str],bool]"
host,str
_host_okay_lenient,"Callable[[_, str],bool]"
host,str
add_url,"Callable[[_, str, int],bool]"
url,str
max_redirect,int
fetch,"Callable[[_, Fetcher],Generator[Any, None, None]]"
fetcher,Fetcher
report,"Callable[[_, IO[str]],None]"
show,"List[Tuple[str, Fetcher]]"
main,"Callable[[],None]"
unescape,"Callable[[str],str]"
url,str
fix_url,"Callable[[str],str]"
url,str
__init__,"Callable[[_, int],None]"
level,int
_log,"Callable[[_, int, Sequence[Any]],None]"
n,int
log,"Callable[[_, int],None]"
n,int
args,Any
__call__,"Callable[[_, int],None]"
n,int
args,Any
__init__,"Callable[[_, Logger, int, int],None]"
log,Logger
max_pool,int
max_tasks,int
self.connections,"Dict[KeyTuple, List[Connection]]"
close,"Callable[[_],None]"
get_connection,"Callable[[_, str, int, bool],Connection]"
host,str
port,int
ssl,bool
recycle_connection,"Callable[[_, Connection],None]"
conn,Connection
__init__,"Callable[[_, Logger, ConnectionPool, str, int, bool],None]"
log,Logger
pool,ConnectionPool
host,str
port,int
ssl,bool
self.key,KeyTuple
stale,"Callable[[_],bool]"
connect,"Callable[[_],None]"
close,"Callable[[_, bool],None]"
recycle,bool
__init__,"Callable[[_, Logger, str, ConnectionPool],None]"
log,Logger
url,str
pool,ConnectionPool
self.headers,"List[Tuple[str, str]]"
self.conn,Connection
connect,"Callable[[_],None]"
close,"Callable[[_, bool],None]"
recycle,bool
putline,"Callable[[_, str],None]"
line,str
send_request,"Callable[[_],None]"
get_response,"Callable[[_],Response]"
__init__,"Callable[[_, Logger, asyncio.StreamReader],None]"
log,Logger
self.http_version,str
self.status,int
self.reason,str
self.headers,"List[Tuple[str, str]]"
getline,"Callable[[_],str]"
read_headers,"Callable[[_],None]"
get_redirect_url,"Callable[[_, str],str]"
default,str
get_header,"Callable[[_, str, str],str]"
key,str
default,str
read,"Callable[[_],bytes]"
__init__,"Callable[[_, Logger, str, Crawler, int, int],None]"
log,Logger
url,str
crawler,Crawler
max_redirect,int
max_tries,int
self.request,Request
self.response,Response
self.body,bytes
self.next_url,str
self.ctype,str
self.encoding,str
fetch,"Callable[[_],None]"
report,"Callable[[_, Stats, IO[str]],None]"
stats,Stats
__init__,"Callable[[_],None]"
add,"Callable[[_, str, int],None]"
key,str
count,int
report,"Callable[[_, IO[str]],None]"
__init__,"Callable[[_, Logger, Set[str], str, bool, int, int, int, int],None]"
log,Logger
exclude,str
strict,bool
max_redirect,int
max_tries,int
max_tasks,int
max_pool,int
close,"Callable[[_],None]"
host_okay,"Callable[[_, str],bool]"
host,str
_host_okay_strictish,"Callable[[_, str],bool]"
host,str
_host_okay_lenient,"Callable[[_, str],bool]"
host,str
add_url,"Callable[[_, str, int],bool]"
url,str
max_redirect,int
crawl,"Callable[[_],None]"
fetch,"Callable[[_, Fetcher],None]"
fetcher,Fetcher
report,"Callable[[_, IO[str]],None]"
show,"List[Tuple[str, Fetcher]]"
main,"Callable[[],None]"
greet,"Callable[[str],None]"
name,str
__init__,"Callable[[_, int],None]"
initial_balance,int
deposit,"Callable[[_, int],None]"
amount,int
withdraw,"Callable[[_, int],None]"
amount,int
overdrawn,"Callable[[_],bool]"
__init__,"Callable[[_, int, str, Any],None]"
returncode,int
cmd,str
output,Any
__str__,"Callable[[_],str]"
_PIPE_BUF,int
_FD_CLOEXEC,int
_set_cloexec,"Callable[[int, bool],None]"
fd,int
cloexec,bool
_cleanup,"Callable[[],None]"
_eintr_retry_call,"Callable[[Any],Any]"
func,Any
args,Any
call,"Callable[[],int]"
popenargs,Any
kwargs,Any
check_call,"Callable[[],int]"
popenargs,Any
kwargs,Any
check_output,"Callable[[],bytes]"
popenargs,Any
kwargs,Any
list2cmdline,"Callable[[Sequence[str]],str]"
getstatusoutput,"Callable[[str],Tuple[int, str]]"
cmd,str
getoutput,"Callable[[str],str]"
cmd,str
__init__,"Callable[[_, Sequence[Any], int, str, Any, Any, Any, Callable[[],Any], Any, int, str, Mapping[str, str], int, STARTUPINFO, int, bool, bool, Any],None]"
bufsize,int
executable,str
stdin,Any
stdout,Any
stderr,Any
preexec_fn,"Callable[[],Any]"
close_fds,Any
shell,int
cwd,str
universal_newlines,int
startupinfo,STARTUPINFO
creationflags,int
restore_signals,bool
start_new_session,bool
pass_fds,Any
self.pid,int
self.returncode,int
_translate_newlines,"Callable[[_, bytes, str],str]"
data,bytes
encoding,str
__enter__,"Callable[[_],Popen]"
__exit__,"Callable[[_, type, BaseException, TracebackType],bool]"
type,type
value,BaseException
traceback,TracebackType
__del__,"Callable[[_, int, List[Popen]],None]"
_maxsize,int
communicate,"Callable[[_, Any],Tuple[Any, Any]]"
input,Any
poll,"Callable[[_],int]"
_get_handles,"Callable[[_, Any, Any, Any],Tuple[Any, Any, Any, Any, Any, Any]]"
stdin,Any
stdout,Any
stderr,Any
p2cread,Any
p2cwrite,Any
c2pread,Any
c2pwrite,Any
errread,Any
errwrite,Any
_make_inheritable,"Callable[[_, _subprocess.Handle],int]"
_find_w9xpopen,"Callable[[_],str]"
_execute_child,"Callable[[_, Sequence[str], str, Callable[[],Any], Any, Any, str, Mapping[str, str], int, STARTUPINFO, int, int, Any, Any, Any, Any, Any, Any, bool, bool],None]"
executable,str
preexec_fn,"Callable[[],Any]"
close_fds,Any
pass_fds,Any
cwd,str
universal_newlines,int
startupinfo,STARTUPINFO
creationflags,int
shell,int
p2cread,Any
p2cwrite,Any
c2pread,Any
c2pwrite,Any
errread,Any
errwrite,Any
restore_signals,bool
start_new_session,bool
_internal_poll,"Callable[[_, int],int]"
_deadstate,int
_internal_poll_win,"Callable[[_, int, Callable[[Handle, int],int], int, Callable[[Handle],int]],int]"
_deadstate,int
_WaitForSingleObject,"Callable[[Handle, int],int]"
_WAIT_OBJECT_0,int
_GetExitCodeProcess,"Callable[[Handle],int]"
wait,"Callable[[_],int]"
_readerthread,"Callable[[_, IO[AnyStr], List[AnyStr]],None]"
_communicate,"Callable[[_, Any],Tuple[Any, Any]]"
input,Any
send_signal,"Callable[[_, int],None]"
sig,int
terminate,"Callable[[_],None]"
kill,"Callable[[_],None]"
_get_handles,"Callable[[_, Any, Any, Any],Tuple[Any, Any, Any, Any, Any, Any]]"
stdin,Any
stdout,Any
stderr,Any
_close_fds,"Callable[[_, Set[int]],None]"
_execute_child,"Callable[[_, Sequence[str], str, Callable[[],Any], Any, Any, str, Mapping[str, str], int, STARTUPINFO, int, int, Any, Any, Any, Any, Any, Any, bool, bool],None]"
executable,str
preexec_fn,"Callable[[],Any]"
close_fds,Any
pass_fds,Any
cwd,str
universal_newlines,int
startupinfo,STARTUPINFO
creationflags,int
shell,int
p2cread,Any
p2cwrite,Any
c2pread,Any
c2pwrite,Any
errread,Any
errwrite,Any
restore_signals,bool
start_new_session,bool
executable_list,tuple
_dup2,"Callable[[int, int],None]"
a,int
b,int
_handle_exitstatus,"Callable[[_, int, Callable[[int],bool], Callable[[int],int], Callable[[int],bool], Callable[[int],int]],None]"
sts,int
_WIFSIGNALED,"Callable[[int],bool]"
_WTERMSIG,"Callable[[int],int]"
_WIFEXITED,"Callable[[int],bool]"
_WEXITSTATUS,"Callable[[int],int]"
_internal_poll,"Callable[[_, int],int]"
_deadstate,int
_internal_poll_posix,"Callable[[_, int, Callable[[int, int],Tuple[int, int]], int, Any],int]"
_deadstate,int
_waitpid,"Callable[[int, int],Tuple[int, int]]"
_WNOHANG,int
_os_error,Any
wait,"Callable[[_],int]"
_communicate,"Callable[[_, Any],Tuple[Any, Any]]"
input,Any
_communicate_with_poll,"Callable[[_, Any],Tuple[List[bytes], List[bytes]]]"
input,Any
fd2output,"Dict[int, List[bytes]]"
register_and_append,"Callable[[IO[Any], int],None]"
eventmask,int
close_unregister_and_remove,"Callable[[int],None]"
fd,int
_communicate_with_select,"Callable[[_, Any],Tuple[List[bytes], List[bytes]]]"
input,Any
read_set,List[IO[Any]]
write_set,List[IO[Any]]
send_signal,"Callable[[_, int],None]"
sig,int
terminate,"Callable[[_],None]"
kill,"Callable[[_],None]"
_demo_posix,"Callable[[],None]"
_demo_windows,"Callable[[],None]"
_set_cloexec,"Callable[[int],None]"
fd,int
_set_cloexec,"Callable[[int],None]"
fd,int
__stat,"Callable[[str],object]"
fn,str
_exists,"Callable[[str],bool]"
fn,str
rng,"Callable[[_],_Random]"
__next__,"Callable[[_],str]"
_get_default_tempdir,"Callable[[],str]"
_name_sequence,_RandomNameSequence
_get_candidate_names,"Callable[[],_RandomNameSequence]"
_mkstemp_inner,"Callable[[str, str, str, int],_Tuple[int, str]]"
dir,str
pre,str
suf,str
flags,int
gettempprefix,"Callable[[],str]"
tempdir,str
gettempdir,"Callable[[],str]"
mkstemp,"Callable[[str, str, str, bool],_Tuple[int, str]]"
suffix,str
prefix,str
dir,str
text,bool
mkdtemp,"Callable[[str, str, str],str]"
suffix,str
prefix,str
dir,str
mktemp,"Callable[[str, str, str],str]"
suffix,str
prefix,str
dir,str
__init__,"Callable[[_, _IO[_Any], str, bool],None]"
name,str
delete,bool
__getattr__,"Callable[[_, str],_Any]"
name,str
__enter__,"Callable[[_],_TemporaryFileWrapper]"
close,"Callable[[_],None]"
__del__,"Callable[[_],None]"
__exit__,"Callable[[_, _Type[BaseException], BaseException, _Optional[_TracebackType]],bool]"
value,BaseException
__exit__,"Callable[[_, _Type[BaseException], BaseException, _Optional[_TracebackType]],bool]"
value,BaseException
NamedTemporaryFile,"Callable[[str, int, str, str, str, str, str, bool],_IO[_Any]]"
mode,str
buffering,int
encoding,str
newline,str
suffix,str
prefix,str
dir,str
delete,bool
_TemporaryFile,"Callable[[str, int, str, str, str, str, str, bool],_IO[_Any]]"
mode,str
buffering,int
encoding,str
newline,str
suffix,str
prefix,str
dir,str
delete,bool
_file,_Any
__init__,"Callable[[_, int, str, int, str, str, str, str, str],None]"
max_size,int
mode,str
buffering,int
encoding,str
newline,str
suffix,str
prefix,str
dir,str
_check,"Callable[[_, _IO[_Any]],None]"
rollover,"Callable[[_],None]"
__enter__,"Callable[[_],SpooledTemporaryFile]"
__exit__,"Callable[[_, type, BaseException, _TracebackType],bool]"
exc,type
value,BaseException
tb,_TracebackType
close,"Callable[[_],None]"
closed,"Callable[[_],bool]"
encoding,"Callable[[_],str]"
fileno,"Callable[[_],int]"
flush,"Callable[[_],None]"
isatty,"Callable[[_],bool]"
mode,"Callable[[_],str]"
name,"Callable[[_],str]"
newlines,"Callable[[_],_Any]"
read,"Callable[[_, int],_Any]"
n,int
readline,"Callable[[_, int],_Any]"
limit,int
seek,"Callable[[_, int, int],None]"
offset,int
whence,int
softspace,"Callable[[_],bool]"
tell,"Callable[[_],int]"
truncate,"Callable[[_],None]"
write,"Callable[[_, _Any],int]"
s,_Any
writelines,"Callable[[_, _Iterable[_Any]],None]"
__init__,"Callable[[_, str, str, str],None]"
suffix,str
prefix,str
dir,str
self.name,str
__repr__,"Callable[[_],str]"
__enter__,"Callable[[_],str]"
cleanup,"Callable[[_, bool],None]"
_warn,bool
__exit__,"Callable[[_, type, BaseException, _TracebackType],bool]"
exc,type
value,BaseException
tb,_TracebackType
__del__,"Callable[[_],None]"
_rmtree,"Callable[[_, str],None]"
path,str
fnmatch,"Callable[[AnyStr, AnyStr],bool]"
name,AnyStr
pat,AnyStr
_compile_pattern,"Callable[[AnyStr, bool],Callable[[AnyStr],Match[AnyStr]]]"
pat,AnyStr
is_bytes,bool
filter,"Callable[[Iterable[AnyStr], AnyStr],List[AnyStr]]"
pat,AnyStr
fnmatchcase,"Callable[[AnyStr, AnyStr],bool]"
name,AnyStr
pat,AnyStr
translate,"Callable[[str],str]"
pat,str
__init__,"Callable[[_, str, str],None]"
msg,str
opt,str
__str__,"Callable[[_],str]"
getopt,"Callable[[List[str], str, Iterable[str]],Tuple[List[Tuple[str, str]], List[str]]]"
shortopts,str
opts,"List[Tuple[str, str]]"
gnu_getopt,"Callable[[List[str], str, Iterable[str]],Tuple[List[Tuple[str, str]], List[str]]]"
shortopts,str
opts,"List[Tuple[str, str]]"
do_longs,"Callable[[List[Tuple[str, str]], str, List[str], List[str]],Tuple[List[Tuple[str, str]], List[str]]]"
opts,"List[Tuple[str, str]]"
opt,str
optarg,str
long_has_args,"Callable[[str, List[str]],Tuple[bool, str]]"
opt,str
do_shorts,"Callable[[List[Tuple[str, str]], str, str, List[str]],Tuple[List[Tuple[str, str]], List[str]]]"
opts,"List[Tuple[str, str]]"
optstring,str
shortopts,str
short_has_arg,"Callable[[str, str],bool]"
opt,str
shortopts,str
glob,"Callable[[AnyStr],List[AnyStr]]"
pathname,AnyStr
iglob,"Callable[[AnyStr],Iterator[AnyStr]]"
pathname,AnyStr
glob_in_dir,Any
glob1,"Callable[[AnyStr, AnyStr],List[AnyStr]]"
dirname,AnyStr
pattern,AnyStr
glob0,"Callable[[AnyStr, AnyStr],List[AnyStr]]"
dirname,AnyStr
basename,AnyStr
has_magic,"Callable[[AnyStr],bool]"
s,AnyStr
_translate,"Callable[[bytes, Dict[AnyStr, bytes]],bytes]"
s,bytes
b64encode,"Callable[[bytes, bytes],bytes]"
s,bytes
altchars,bytes
b64decode,"Callable[[bytes, bytes, bool],bytes]"
s,bytes
altchars,bytes
validate,bool
standard_b64encode,"Callable[[bytes],bytes]"
s,bytes
standard_b64decode,"Callable[[bytes],bytes]"
s,bytes
urlsafe_b64encode,"Callable[[bytes],bytes]"
s,bytes
urlsafe_b64decode,"Callable[[bytes],bytes]"
s,bytes
b32encode,"Callable[[bytes],bytes]"
s,bytes
c1,int
c2,int
c3,int
b32decode,"Callable[[bytes, bool, bytes],bytes]"
s,bytes
casefold,bool
map01,bytes
b16encode,"Callable[[bytes],bytes]"
s,bytes
b16decode,"Callable[[bytes, bool],bytes]"
s,bytes
casefold,bool
encode,"Callable[[IO[bytes], IO[bytes]],None]"
decode,"Callable[[IO[bytes], IO[bytes]],None]"
encodebytes,"Callable[[bytes],bytes]"
s,bytes
encodestring,"Callable[[bytes],bytes]"
s,bytes
decodebytes,"Callable[[bytes],bytes]"
s,bytes
decodestring,"Callable[[bytes],bytes]"
s,bytes
main,"Callable[[],None]"
test,"Callable[[],None]"
_WindowsError,type
copyfileobj,"Callable[[IO[AnyStr], IO[AnyStr], int],None]"
length,int
_samefile,"Callable[[str, str],bool]"
src,str
dst,str
copyfile,"Callable[[str, str],None]"
src,str
dst,str
copymode,"Callable[[str, str],None]"
src,str
dst,str
copystat,"Callable[[str, str],None]"
src,str
dst,str
copy,"Callable[[str, str],None]"
src,str
dst,str
copy2,"Callable[[str, str],None]"
src,str
dst,str
ignore_patterns,"Callable[[],Callable[[str, List[str]],Iterable[str]]]"
patterns,str
_ignore_patterns,"Callable[[str, List[str]],Iterable[str]]"
path,str
copytree,"Callable[[str, str, bool, Callable[[str, List[str]],Iterable[str]], Callable[[str, str],None], bool],None]"
src,str
dst,str
symlinks,bool
ignore,"Callable[[str, List[str]],Iterable[str]]"
copy_function,"Callable[[str, str],None]"
ignore_dangling_symlinks,bool
errors,"List[Tuple[str, str, str]]"
rmtree,"Callable[[str, bool, Callable[[Any, str, Tuple[type, BaseException, TracebackType]],None]],None]"
path,str
ignore_errors,bool
onerror,"Callable[[Any, str, Tuple[type, BaseException, TracebackType]],None]"
_onerror,"Callable[[Any, str, Tuple[type, BaseException, TracebackType]],None]"
x,Any
y,str
__onerror,"Callable[[Any, str, Tuple[type, BaseException, TracebackType]],None]"
x,Any
y,str
_basename,"Callable[[str],str]"
path,str
move,"Callable[[str, str],None]"
src,str
dst,str
_destinsrc,"Callable[[str, str],bool]"
src,str
dst,str
_get_gid,"Callable[[str],int]"
name,str
_get_uid,"Callable[[str],int]"
name,str
_make_tarball,"Callable[[str, str, str, bool, bool, str, str, Any],str]"
base_name,str
base_dir,str
compress,str
verbose,bool
dry_run,bool
owner,str
group,str
logger,Any
_call_external_zip,"Callable[[str, str, bool, bool],None]"
base_dir,str
zip_filename,str
verbose,bool
dry_run,bool
_make_zipfile,"Callable[[str, str, bool, bool, Any],str]"
base_name,str
base_dir,str
verbose,bool
dry_run,bool
logger,Any
_ARCHIVE_FORMATS,"Dict[str, Tuple[Any, Sequence[Tuple[str, str]], str]]"
get_archive_formats,"Callable[[],List[Tuple[str, str]]]"
register_archive_format,"Callable[[str, Any, Sequence[Tuple[str, Any]], str],None]"
name,str
function,Any
extra_args,"Sequence[Tuple[str, Any]]"
description,str
unregister_archive_format,"Callable[[str],None]"
name,str
make_archive,"Callable[[str, str, str, str, bool, bool, str, str, Any],str]"
base_name,str
format,str
root_dir,str
base_dir,str
verbose,bool
dry_run,bool
owner,str
group,str
logger,Any
get_unpack_formats,"Callable[[],List[Tuple[str, List[str], str]]]"
_check_unpack_options,"Callable[[List[str], Any, Sequence[Tuple[str, Any]]],None]"
function,Any
extra_args,"Sequence[Tuple[str, Any]]"
register_unpack_format,"Callable[[str, List[str], Any, Sequence[Tuple[str, Any]], str],None]"
name,str
function,Any
extra_args,"Sequence[Tuple[str, Any]]"
description,str
unregister_unpack_format,"Callable[[str],None]"
name,str
_ensure_directory,"Callable[[str],None]"
path,str
_unpack_zipfile,"Callable[[str, str],None]"
filename,str
extract_dir,str
_unpack_tarfile,"Callable[[str, str],None]"
filename,str
extract_dir,str
_UNPACK_FORMATS,"Dict[str, Tuple[List[str], Any, Sequence[Tuple[str, Any]], str]]"
_find_unpack_format,"Callable[[str],str]"
filename,str
unpack_archive,"Callable[[str, str, str],None]"
filename,str
extract_dir,str
format,str
altsep,str
_get_sep,"Callable[[AnyStr],AnyStr]"
path,AnyStr
normcase,"Callable[[AnyStr],AnyStr]"
s,AnyStr
isabs,"Callable[[AnyStr],bool]"
s,AnyStr
join,"Callable[[AnyStr],AnyStr]"
a,AnyStr
p,AnyStr
split,"Callable[[AnyStr],Tuple[AnyStr, AnyStr]]"
p,AnyStr
splitext,"Callable[[AnyStr],Tuple[AnyStr, AnyStr]]"
p,AnyStr
splitdrive,"Callable[[AnyStr],Tuple[AnyStr, AnyStr]]"
p,AnyStr
basename,"Callable[[AnyStr],AnyStr]"
p,AnyStr
dirname,"Callable[[AnyStr],AnyStr]"
p,AnyStr
islink,"Callable[[AnyStr],bool]"
path,AnyStr
lexists,"Callable[[AnyStr],bool]"
path,AnyStr
samefile,"Callable[[AnyStr, AnyStr],bool]"
f1,AnyStr
f2,AnyStr
sameopenfile,"Callable[[int, int],bool]"
fp1,int
fp2,int
samestat,"Callable[[os.stat_result, os.stat_result],bool]"
ismount,"Callable[[AnyStr],bool]"
path,AnyStr
expanduser,"Callable[[AnyStr],AnyStr]"
path,AnyStr
expandvars,"Callable[[AnyStr],AnyStr]"
path,AnyStr
normpath,"Callable[[AnyStr],AnyStr]"
path,AnyStr
initial_slashes,int
abspath,"Callable[[AnyStr],AnyStr]"
path,AnyStr
realpath,"Callable[[AnyStr],AnyStr]"
filename,AnyStr
_resolve_link,"Callable[[AnyStr],AnyStr]"
path,AnyStr
relpath,"Callable[[AnyStr, AnyStr],AnyStr]"
path,AnyStr
start,AnyStr
RECIP_BPF,float
__init__,"Callable[[_, object],None]"
x,object
seed,"Callable[[_, Any, int],None]"
a,Any
version,int
getstate,"Callable[[_],tuple]"
setstate,"Callable[[_, tuple],None]"
state,tuple
__getstate__,"Callable[[_],object]"
__setstate__,"Callable[[_, Any],None]"
state,Any
__reduce__,"Callable[[_],tuple]"
randrange,"Callable[[_, SupportsInt, SupportsInt, int, Callable[[SupportsInt],int]],int]"
start,SupportsInt
stop,SupportsInt
step,int
int,"Callable[[SupportsInt],int]"
randint,"Callable[[_, int, int],int]"
a,int
b,int
_randbelow,"Callable[[_, int, Callable[[float],int], int, Callable[[object],type], type, type],int]"
n,int
int,"Callable[[float],int]"
maxsize,int
type,"Callable[[object],type]"
Method,type
BuiltinMethod,type
choice,"Callable[[_, Sequence[T]],T]"
shuffle,"Callable[[_, List[T], Callable[[],float], Callable[[float],int]],None]"
random,"Callable[[],float]"
int,"Callable[[float],int]"
sample,"Callable[[_, Union[_Set[T], _Sequence[T]], int],List[T]]"
population,"Union[_Set[T], _Sequence[T]]"
k,int
uniform,"Callable[[_, float, float],float]"
a,float
b,float
triangular,"Callable[[_, float, float, float],float]"
low,float
high,float
mode,float
normalvariate,"Callable[[_, float, float],float]"
mu,float
sigma,float
lognormvariate,"Callable[[_, float, float],float]"
mu,float
sigma,float
expovariate,"Callable[[_, float],float]"
lambd,float
vonmisesvariate,"Callable[[_, float, float],float]"
mu,float
kappa,float
gammavariate,"Callable[[_, float, float],float]"
alpha,float
beta,float
gauss,"Callable[[_, float, float],float]"
mu,float
sigma,float
betavariate,"Callable[[_, float, float],float]"
alpha,float
beta,float
paretovariate,"Callable[[_, float],float]"
alpha,float
weibullvariate,"Callable[[_, float, float],float]"
alpha,float
beta,float
random,"Callable[[_],float]"
getrandbits,"Callable[[_, int],int]"
k,int
seed,"Callable[[_, object, int],None]"
a,object
version,int
_notimplemented,"Callable[[_],Any]"
args,Any
kwds,Any
_test_generator,"Callable[[int, Any, tuple],None]"
n,int
func,Any
args,tuple
x,float
_test,"Callable[[int],None]"
N,int
pprint,"Callable[[object, TextIO, int, int, int],None]"
object,object
stream,TextIO
indent,int
width,int
depth,int
pformat,"Callable[[object, int, int, int],str]"
object,object
indent,int
width,int
depth,int
saferepr,"Callable[[object],str]"
object,object
isreadable,"Callable[[object],bool]"
object,object
isrecursive,"Callable[[object],bool]"
object,object
__init__,"Callable[[_, Any],None]"
obj,Any
__lt__,"Callable[[_, Any],Any]"
other,Any
rv,Any
__init__,"Callable[[_, int, int, int, TextIO],None]"
indent,int
width,int
depth,int
stream,TextIO
pprint,"Callable[[_, object],None]"
object,object
pformat,"Callable[[_, object],str]"
object,object
isrecursive,"Callable[[_, object],int]"
object,object
isreadable,"Callable[[_, object],int]"
object,object
_format,"Callable[[_, object, TextIO, int, int, Dict[int, int], int],None]"
object,object
stream,TextIO
indent,int
allowance,int
level,int
_repr,"Callable[[_, object, Dict[int, int], int],str]"
object,object
level,int
format,"Callable[[_, object, Dict[int, int], int, int],Tuple[str, int, int]]"
object,object
maxlevels,int
level,int
_safe_repr,"Callable[[object, Dict[int, int], int, int],Tuple[str, bool, bool]]"
object,object
maxlevels,int
level,int
_recursion,"Callable[[object],str]"
object,object
_perfcheck,"Callable[[object],None]"
object,object
exists,"Callable[[AnyStr_],bool]"
path,AnyStr_
isfile,"Callable[[AnyStr_],bool]"
path,AnyStr_
isdir,"Callable[[AnyStr_],bool]"
s,AnyStr_
getsize,"Callable[[AnyStr_],int]"
filename,AnyStr_
getmtime,"Callable[[AnyStr_],float]"
filename,AnyStr_
getatime,"Callable[[AnyStr_],float]"
filename,AnyStr_
getctime,"Callable[[AnyStr_],float]"
filename,AnyStr_
commonprefix,"Callable[[List_[Any_]],Any_]"
_splitext,"Callable[[AnyStr_, AnyStr_, AnyStr_, AnyStr_],Tuple_[AnyStr_, AnyStr_]]"
p,AnyStr_
sep,AnyStr_
altsep,AnyStr_
extsep,AnyStr_
__init__,"Callable[[_, int, str, str, bool, bool, bool, bool, bool, bool],None]"
width,int
initial_indent,str
subsequent_indent,str
expand_tabs,bool
replace_whitespace,bool
fix_sentence_endings,bool
break_long_words,bool
drop_whitespace,bool
break_on_hyphens,bool
_munge_whitespace,"Callable[[_, str],str]"
text,str
_split,"Callable[[_, str],List[str]]"
text,str
_fix_sentence_endings,"Callable[[_, List[str]],None]"
_handle_long_word,"Callable[[_, List[str], List[str], int, int],None]"
cur_len,int
width,int
wrap,"Callable[[_, str],List[str]]"
text,str
fill,"Callable[[_, str],str]"
text,str
wrap,"Callable[[str, int],List[str]]"
text,str
width,int
kwargs,Any
fill,"Callable[[str, int],str]"
text,str
width,int
kwargs,Any
dedent,"Callable[[str],str]"
text,str
margin,str
test_encodebytes,"Callable[[_],None]"
test_decodebytes,"Callable[[_],None]"
test_encode,"Callable[[_],None]"
test_decode,"Callable[[_],None]"
test_b64encode,"Callable[[_],None]"
test_b64decode,"Callable[[_],None]"
test_b64decode_padding_error,"Callable[[_],None]"
test_b64decode_invalid_chars,"Callable[[_],None]"
test_b32encode,"Callable[[_],None]"
test_b32decode,"Callable[[_],None]"
test_b32decode_casefold,"Callable[[_],None]"
test_b32decode_error,"Callable[[_],None]"
test_b16encode,"Callable[[_],None]"
test_b16decode,"Callable[[_],None]"
test_ErrorHeritage,"Callable[[_],None]"
get_output,"Callable[[_],Any]"
args_tuple,str
options,Any
test_encode_decode,"Callable[[_],None]"
test_encode_file,"Callable[[_],None]"
test_decode,"Callable[[_],None]"
test_main,"Callable[[],None]"
use_resources,Any
match_tests,Any
_original_stdout,Any
TESTFN_UNENCODABLE,Any
_can_symlink,Any
__repr__,"Callable[[_],str]"
__repr__,"Callable[[_],str]"
__repr__,"Callable[[_],str]"
__repr__,"Callable[[_],str]"
setUp,"Callable[[_],None]"
test_basic,"Callable[[_],None]"
test_knotted,"Callable[[_],None]"
test_unreadable,"Callable[[_],None]"
test_same_as_repr,"Callable[[_],None]"
test_basic_line_wrap,"Callable[[_],None]"
test_nested_indentations,"Callable[[_],None]"
test_sorted_dict,"Callable[[_],None]"
test_ordered_dict,"Callable[[_],None]"
test_subclassing,"Callable[[_],None]"
test_set_reprs,"Callable[[_],None]"
test_depth,"Callable[[_],None]"
test_sort_unorderable_values,"Callable[[_],None]"
clean,"Callable[[str],str]"
format,"Callable[[_, object, Dict[int, Any], int, int],Tuple[str, int, int]]"
object,object
maxlevels,int
level,int
test_main,"Callable[[],None]"
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
failOnException,"Callable[[_, str, tuple],None]"
what,str
ei,tuple
nameCheck,"Callable[[_, str, str, str, str],None]"
name,str
dir,str
pre,str
suf,str
test_exports,"Callable[[_],None]"
setUp,"Callable[[_],None]"
test_get_six_char_str,"Callable[[_],None]"
test_many,"Callable[[_],None]"
supports_iter,"Callable[[_],None]"
test_process_awareness,"Callable[[_],None]"
pid,int
test_nonempty_list,"Callable[[_],None]"
test_wanted_dirs,"Callable[[_],None]"
test_retval,"Callable[[_],None]"
test_same_thing,"Callable[[_],None]"
__init__,"Callable[[_, str, str, str, int],None]"
dir,str
pre,str
suf,str
bin,int
write,"Callable[[_, bytes],None]"
str,bytes
__del__,"Callable[[_],None]"
do_create,"Callable[[_, str, str, str, int],mkstemped]"
dir,str
pre,str
suf,str
bin,int
test_basic,"Callable[[_],None]"
test_basic_many,"Callable[[_],None]"
test_choose_directory,"Callable[[_],None]"
test_file_mode,"Callable[[_],None]"
test_noinherit,"Callable[[_],None]"
me,str
test_textmode,"Callable[[_],None]"
test_sane_template,"Callable[[_],None]"
test_usable_template,"Callable[[_],None]"
test_directory_exists,"Callable[[_],None]"
test_directory_writable,"Callable[[_],None]"
test_same_thing,"Callable[[_],None]"
do_create,"Callable[[_, str, str, str],None]"
dir,str
pre,str
suf,str
test_basic,"Callable[[_],None]"
test_choose_directory,"Callable[[_],None]"
do_create,"Callable[[_, str, str, str],str]"
dir,str
pre,str
suf,str
test_basic,"Callable[[_],None]"
test_basic_many,"Callable[[_],None]"
test_choose_directory,"Callable[[_],None]"
test_mode,"Callable[[_],None]"
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
_unlink,"Callable[[_, str],None]"
path,str
__init__,"Callable[[_, str, str, str],None]"
dir,str
pre,str
suf,str
__del__,"Callable[[_],None]"
do_create,"Callable[[_, str, str],mktemped]"
pre,str
suf,str
test_basic,"Callable[[_],None]"
test_many,"Callable[[_],None]"
do_create,"Callable[[_, str, str, str, bool],IO[Any]]"
dir,str
pre,str
suf,str
delete,bool
test_basic,"Callable[[_],None]"
test_creates_named,"Callable[[_],None]"
test_del_on_close,"Callable[[_],None]"
test_dis_del_on_close,"Callable[[_],None]"
tmp,str
test_multiple_close,"Callable[[_],None]"
test_context_manager,"Callable[[_],None]"
do_create,"Callable[[_, int, str, str, str],tempfile.SpooledTemporaryFile]"
max_size,int
dir,str
pre,str
suf,str
test_basic,"Callable[[_],None]"
test_del_on_close,"Callable[[_],None]"
test_rewrite_small,"Callable[[_],None]"
test_write_sequential,"Callable[[_],None]"
test_writelines,"Callable[[_],None]"
test_writelines_sequential,"Callable[[_],None]"
test_sparse,"Callable[[_],None]"
test_fileno,"Callable[[_],None]"
test_multiple_close_before_rollover,"Callable[[_],None]"
test_multiple_close_after_rollover,"Callable[[_],None]"
test_bound_methods,"Callable[[_],None]"
test_text_mode,"Callable[[_],None]"
test_text_newline_and_encoding,"Callable[[_],None]"
test_context_manager_before_rollover,"Callable[[_],None]"
test_context_manager_during_rollover,"Callable[[_],None]"
test_context_manager_after_rollover,"Callable[[_],None]"
test_basic,"Callable[[_],None]"
test_has_no_name,"Callable[[_],None]"
test_multiple_close,"Callable[[_],None]"
test_mode_and_encoding,"Callable[[_],None]"
roundtrip,"Callable[[AnyStr],None]"
input,AnyStr
args,Any
kwargs,Any
__init__,"Callable[[_],None]"
modules,Any
__enter__,"Callable[[_],None]"
__exit__,"Callable[[_],None]"
exc_info,Any
do_create,"Callable[[_, str, str, str, int],tempfile.TemporaryDirectory]"
dir,str
pre,str
suf,str
recurse,int
test_mkdtemp_failure,"Callable[[_],None]"
test_explicit_cleanup,"Callable[[_],None]"
test_cleanup_with_symlink_to_a_directory,"Callable[[_],None]"
test_del_on_collection,"Callable[[_],None]"
test_del_on_shutdown,"Callable[[_],None]"
test_warnings_on_cleanup,"Callable[[_],None]"
test_multiple_close,"Callable[[_],None]"
test_context_manager,"Callable[[_],None]"
test_main,"Callable[[],None]"
skip_if_ABSTFN_contains_backslash,"Callable[[Callable[[T],None]],Callable[[T],None]]"
test,"Callable[[T],None]"
safe_rmdir,"Callable[[str],None]"
dirname,str
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
test_join,"Callable[[_],None]"
test_split,"Callable[[_],None]"
splitextTest,"Callable[[_, str, str, str],None]"
path,str
filename,str
ext,str
test_splitext,"Callable[[_],None]"
test_isabs,"Callable[[_],None]"
test_basename,"Callable[[_],None]"
test_dirname,"Callable[[_],None]"
test_islink,"Callable[[_],None]"
_create_file,"Callable[[str],None]"
filename,str
test_samefile,"Callable[[_],None]"
test_samefile_on_links,"Callable[[_],None]"
test_samestat,"Callable[[_],None]"
test_samestat_on_links,"Callable[[_],None]"
test_ismount,"Callable[[_],None]"
test_ismount_non_existent,"Callable[[_],None]"
test_ismount_symlinks,"Callable[[_],None]"
test_ismount_different_device,"Callable[[_],None]"
test_expanduser,"Callable[[_],None]"
test_normpath,"Callable[[_],None]"
test_realpath_basic,"Callable[[_],None]"
test_realpath_relative,"Callable[[_],None]"
test_realpath_symlink_loops,"Callable[[_],None]"
test_realpath_resolve_parents,"Callable[[_],None]"
test_realpath_resolve_before_normalizing,"Callable[[_],None]"
test_realpath_resolve_first,"Callable[[_],None]"
test_relpath,"Callable[[_],None]"
test_relpath_bytes,"Callable[[_],None]"
test_sameopenfile,"Callable[[_],None]"
test_main,"Callable[[],None]"
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
assertError,"Callable[[_],None]"
args,Any
kwargs,Any
test_short_has_arg,"Callable[[_],None]"
test_long_has_args,"Callable[[_],None]"
test_do_shorts,"Callable[[_],None]"
test_do_longs,"Callable[[_],None]"
test_getopt,"Callable[[_],None]"
test_gnu_getopt,"Callable[[_],None]"
test_libref_examples,"Callable[[_],None]"
test_issue4629,"Callable[[_],None]"
test_main,"Callable[[],None]"
_fake_rename,"Callable[[],None]"
args,Any
kwargs,Any
mock_rename,"Callable[[Any],Any]"
func,Any
wrap,"Callable[[],Any]"
args,Any
kwargs,Any
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
write_file,"Callable[[_, Union[str, List[str], tuple], str],None]"
path,"Union[str, List[str], tuple]"
content,str
mkdtemp,"Callable[[_],str]"
test_rmtree_errors,"Callable[[_],None]"
test_on_error,"Callable[[_],None]"
check_args_to_onerror,"Callable[[_, Callable[[str],Any], str, Tuple[type, BaseException, TracebackType]],None]"
func,"Callable[[str],Any]"
arg,str
test_rmtree_dont_delete_file,"Callable[[_],None]"
_write_data,"Callable[[_, str, str],None]"
path,str
data,str
test_copytree_simple,"Callable[[_],None]"
read_data,"Callable[[str],str]"
path,str
test_copytree_with_exclude,"Callable[[_],None]"
read_data,"Callable[[str],str]"
path,str
_filter,"Callable[[str, Sequence[str]],List[str]]"
src,str
test_dont_copy_file_onto_link_to_itself,"Callable[[_],None]"
test_dont_copy_file_onto_symlink_to_itself,"Callable[[_],None]"
test_rmtree_on_symlink,"Callable[[_],None]"
test_copyfile_named_pipe,"Callable[[_],None]"
test_copytree_named_pipe,"Callable[[_],None]"
test_copytree_special_func,"Callable[[_],None]"
copied,"List[Tuple[str, str]]"
_copy,"Callable[[str, str],None]"
src,str
dst,str
test_copytree_dangling_symlinks,"Callable[[_],None]"
_copy_file,"Callable[[_, Callable[[str, str],None]],Tuple[str, str]]"
method,"Callable[[str, str],None]"
test_copy,"Callable[[_],None]"
test_copy2,"Callable[[_],None]"
test_make_tarball,"Callable[[_],None]"
_tarinfo,"Callable[[_, str],tuple]"
path,str
test_tarfile_vs_tar,"Callable[[_],None]"
test_make_zipfile,"Callable[[_],None]"
test_make_archive,"Callable[[_],None]"
test_make_archive_owner_group,"Callable[[_],None]"
test_tarfile_root_owner,"Callable[[_],None]"
test_make_archive_cwd,"Callable[[_],None]"
_breaks,"Callable[[],None]"
args,Any
kw,Any
test_register_archive_format,"Callable[[_],None]"
_compare_dirs,"Callable[[_, str, str],List[str]]"
dir1,str
dir2,str
test_unpack_archive,"Callable[[_],None]"
test_unpack_registery,"Callable[[_],None]"
_boo,"Callable[[str, str, int],None]"
filename,str
extract_dir,str
extra,int
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
_check_move_file,"Callable[[_, str, str, str],None]"
src,str
dst,str
real_dst,str
_check_move_dir,"Callable[[_, str, str, str],None]"
src,str
dst,str
real_dst,str
test_move_file,"Callable[[_],None]"
test_move_file_to_dir,"Callable[[_],None]"
test_move_file_other_fs,"Callable[[_],None]"
test_move_file_to_dir_other_fs,"Callable[[_],None]"
test_move_dir,"Callable[[_],None]"
test_move_dir_other_fs,"Callable[[_],None]"
test_move_dir_to_dir,"Callable[[_],None]"
test_move_dir_to_dir_other_fs,"Callable[[_],None]"
test_existing_file_inside_dest_dir,"Callable[[_],None]"
test_dont_move_dir_in_itself,"Callable[[_],None]"
test_destinsrc_false_negative,"Callable[[_],None]"
test_destinsrc_false_positive,"Callable[[_],None]"
_exited_with,tuple
__init__,"Callable[[_, bool, bool],None]"
raise_in_exit,bool
suppress_at_exit,bool
read,"Callable[[_],str]"
args,Any
__enter__,"Callable[[_],None]"
__exit__,"Callable[[_, type, BaseException, TracebackType],bool]"
exc_type,type
exc_val,BaseException
exc_tb,TracebackType
tearDown,"Callable[[_],None]"
_set_shutil_open,"Callable[[_, Any],None]"
func,Any
test_w_source_open_fails,"Callable[[_],None]"
_open,"Callable[[str, str],BinaryIO]"
filename,str
mode,str
test_w_dest_open_fails,"Callable[[_],None]"
_open,"Callable[[str, str],TestCopyFile.Faux]"
filename,str
mode,str
test_w_dest_close_fails,"Callable[[_],None]"
_open,"Callable[[str, str],TestCopyFile.Faux]"
filename,str
mode,str
test_w_source_close_fails,"Callable[[_],None]"
_open,"Callable[[str, str],TestCopyFile.Faux]"
filename,str
mode,str
test_move_dir_caseinsensitive,"Callable[[_],None]"
test_main,"Callable[[],None]"
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
assertStderrEqual,"Callable[[_, bytes, bytes, object],None]"
stderr,bytes
expected,bytes
msg,object
test_call_seq,"Callable[[_],None]"
test_check_call_zero,"Callable[[_],None]"
test_check_call_nonzero,"Callable[[_],None]"
test_check_output,"Callable[[_],None]"
test_check_output_nonzero,"Callable[[_],None]"
test_check_output_stderr,"Callable[[_],None]"
test_check_output_stdout_arg,"Callable[[_],None]"
test_call_kwargs,"Callable[[_],None]"
test_invalid_args,"Callable[[_],None]"
test_stdin_none,"Callable[[_],None]"
test_stdout_none,"Callable[[_],None]"
test_stderr_none,"Callable[[_],None]"
test_executable_with_cwd,"Callable[[_],None]"
test_executable_without_cwd,"Callable[[_],None]"
test_stdin_pipe,"Callable[[_],None]"
test_stdin_filedes,"Callable[[_],None]"
test_stdin_fileobj,"Callable[[_],None]"
test_stdout_pipe,"Callable[[_],None]"
test_stdout_filedes,"Callable[[_],None]"
test_stdout_fileobj,"Callable[[_],None]"
test_stderr_pipe,"Callable[[_],None]"
test_stderr_filedes,"Callable[[_],None]"
test_stderr_fileobj,"Callable[[_],None]"
test_stdout_stderr_pipe,"Callable[[_],None]"
test_stdout_stderr_file,"Callable[[_],None]"
test_stdout_filedes_of_stdout,"Callable[[_],None]"
test_cwd,"Callable[[_],None]"
test_env,"Callable[[_],None]"
test_empty_env,"Callable[[_],None]"
test_communicate_stdin,"Callable[[_],None]"
test_communicate_stdout,"Callable[[_],None]"
test_communicate_stderr,"Callable[[_],None]"
test_communicate,"Callable[[_],None]"
test_communicate_pipe_fd_leak,"Callable[[_],None]"
test_communicate_returns,"Callable[[_],None]"
test_communicate_pipe_buf,"Callable[[_],None]"
test_writes_before_communicate,"Callable[[_],None]"
test_universal_newlines,"Callable[[_],None]"
test_universal_newlines_communicate,"Callable[[_],None]"
test_universal_newlines_communicate_stdin,"Callable[[_],None]"
test_no_leaking,"Callable[[_],None]"
test_list2cmdline,"Callable[[_],None]"
test_poll,"Callable[[_],None]"
test_wait,"Callable[[_],None]"
test_invalid_bufsize,"Callable[[_],None]"
test_bufsize_is_none,"Callable[[_],None]"
test_leaking_fds_on_error,"Callable[[_],None]"
test_issue8780,"Callable[[_],None]"
test_handles_closed_on_exception,"Callable[[_],None]"
test_communicate_epipe,"Callable[[_],None]"
test_communicate_epipe_only_stdin,"Callable[[_],None]"
test_communicate_eintr,"Callable[[_],None]"
__enter__,"Callable[[_],None]"
__exit__,"Callable[[_],None]"
args,Any
test_exceptions,"Callable[[_],None]"
test_restore_signals,"Callable[[_],None]"
test_start_new_session,"Callable[[_],None]"
test_run_abort,"Callable[[_],None]"
test_preexec,"Callable[[_],None]"
test_preexec_exception,"Callable[[_],None]"
test_preexec_gc_module_failure,"Callable[[_],None]"
test_args_string,"Callable[[_],None]"
test_invalid_args,"Callable[[_],None]"
test_shell_sequence,"Callable[[_],None]"
test_shell_string,"Callable[[_],None]"
test_call_string,"Callable[[_],None]"
test_specific_shell,"Callable[[_],None]"
_kill_process,"Callable[[_, str],subprocess.Popen]"
method,str
args,Any
test_send_signal,"Callable[[_],None]"
test_kill,"Callable[[_],None]"
test_terminate,"Callable[[_],None]"
check_close_std_fds,"Callable[[_, Iterable[int]],None]"
test_close_fd_0,"Callable[[_],None]"
test_close_fd_1,"Callable[[_],None]"
test_close_fd_2,"Callable[[_],None]"
test_close_fds_0_1,"Callable[[_],None]"
test_close_fds_0_2,"Callable[[_],None]"
test_close_fds_1_2,"Callable[[_],None]"
test_close_fds_0_1_2,"Callable[[_],None]"
test_remapping_std_fds,"Callable[[_],None]"
check_swap_fds,"Callable[[_, int, int, int],None]"
stdin_no,int
stdout_no,int
stderr_no,int
test_swap_fds,"Callable[[_],None]"
test_surrogates_error_message,"Callable[[_],None]"
prepare,"Callable[[],None]"
test_undecodable_env,"Callable[[_],None]"
test_bytes_program,"Callable[[_],None]"
test_pipe_cloexec,"Callable[[_],None]"
test_pipe_cloexec_real_tools,"Callable[[_],None]"
kill_p1,"Callable[[],None]"
kill_p2,"Callable[[],None]"
test_close_fds,"Callable[[_],None]"
test_pass_fds,"Callable[[_],None]"
test_stdout_stdin_are_single_inout_fd,"Callable[[_],None]"
test_stdout_stderr_are_single_inout_fd,"Callable[[_],None]"
test_stderr_stdin_are_single_inout_fd,"Callable[[_],None]"
test_wait_when_sigchild_ignored,"Callable[[_],None]"
test_select_unbuffered,"Callable[[_],None]"
test_zombie_fast_process_del,"Callable[[_],None]"
test_leak_fast_process_del_killed,"Callable[[_],None]"
test_startupinfo,"Callable[[_],None]"
test_creationflags,"Callable[[_],None]"
test_invalid_args,"Callable[[_],None]"
test_close_fds,"Callable[[_],None]"
test_shell_sequence,"Callable[[_],None]"
test_shell_string,"Callable[[_],None]"
test_call_string,"Callable[[_],None]"
_kill_process,"Callable[[_, str],None]"
method,str
args,Any
test_send_signal,"Callable[[_],None]"
test_kill,"Callable[[_],None]"
test_terminate,"Callable[[_],None]"
test_getoutput,"Callable[[_],None]"
dir,str
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
test_eintr_retry_call,"Callable[[_],None]"
fake_os_func,"Callable[[],tuple]"
args,Any
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
with_spaces,"Callable[[_],None]"
args,Any
kwargs,Any
test_shell_string_with_spaces,"Callable[[_],None]"
test_shell_sequence_with_spaces,"Callable[[_],None]"
test_noshell_string_with_spaces,"Callable[[_],None]"
test_noshell_sequence_with_spaces,"Callable[[_],None]"
test_pipe,"Callable[[_],None]"
test_returncode,"Callable[[_],None]"
test_communicate_stdin,"Callable[[_],None]"
test_invalid_args,"Callable[[_],None]"
empty_set,Any
left,Any
right,Any
left,Any
safe_rmdir,"Callable[[str],None]"
dirname,str
pathmodule,Any
test_no_argument,"Callable[[_],None]"
test_commonprefix,"Callable[[_],None]"
test_getsize,"Callable[[_],None]"
test_time,"Callable[[_],None]"
test_exists,"Callable[[_],None]"
test_isdir,"Callable[[_],None]"
test_isfile,"Callable[[_],None]"
pathmodule,Any
test_normcase,"Callable[[_],None]"
test_splitdrive,"Callable[[_],None]"
test_expandvars,"Callable[[_],None]"
test_abspath,"Callable[[_],None]"
test_realpath,"Callable[[_],None]"
test_normpath_issue5827,"Callable[[_],None]"
test_abspath_issue3426,"Callable[[_],None]"
test_nonascii_abspath,"Callable[[_],None]"
test_main,"Callable[[],None]"
norm,"Callable[[_, str],str]"
first,str
parts,str
mktemp,"Callable[[_],None]"
parts,str
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
parts,str
assertSequencesEqual_noorder,"Callable[[_, Iterable[T], Iterable[T]],None]"
test_glob_literal,"Callable[[_],None]"
test_glob_one_directory,"Callable[[_],None]"
test_glob_nested_directory,"Callable[[_],None]"
test_glob_directory_names,"Callable[[_],None]"
test_glob_directory_with_trailing_slash,"Callable[[_],None]"
test_glob_broken_symlinks,"Callable[[_],None]"
test_main,"Callable[[],None]"
wrapper,TextWrapper
show,"Callable[[_, Sequence[str]],str]"
check,"Callable[[_, Sequence[str], Sequence[str]],None]"
check_wrap,"Callable[[_, str, int, Sequence[str]],None]"
text,str
width,int
kwargs,Any
check_split,"Callable[[_, str, Sequence[str]],None]"
text,str
setUp,"Callable[[_],None]"
test_simple,"Callable[[_],None]"
test_whitespace,"Callable[[_],None]"
test_fix_sentence_endings,"Callable[[_],None]"
test_wrap_short,"Callable[[_],None]"
test_wrap_short_1line,"Callable[[_],None]"
test_hyphenated,"Callable[[_],None]"
test_hyphenated_numbers,"Callable[[_],None]"
test_em_dash,"Callable[[_],None]"
test_unix_options,"Callable[[_],None]"
test_funky_hyphens,"Callable[[_],None]"
test_punct_hyphens,"Callable[[_],None]"
test_funky_parens,"Callable[[_],None]"
test_initial_whitespace,"Callable[[_],None]"
test_no_drop_whitespace,"Callable[[_],None]"
test_split,"Callable[[_],None]"
test_break_on_hyphens,"Callable[[_],None]"
test_bad_width,"Callable[[_],None]"
test_no_split_at_umlaut,"Callable[[_],None]"
test_umlaut_followed_by_dash,"Callable[[_],None]"
setUp,"Callable[[_],None]"
test_break_long,"Callable[[_],None]"
test_nobreak_long,"Callable[[_],None]"
setUp,"Callable[[_],None]"
test_fill,"Callable[[_],None]"
test_initial_indent,"Callable[[_],None]"
test_subsequent_indent,"Callable[[_],None]"
assertUnchanged,"Callable[[_, str],None]"
text,str
test_dedent_nomargin,"Callable[[_],None]"
test_dedent_even,"Callable[[_],None]"
test_dedent_uneven,"Callable[[_],None]"
test_dedent_preserve_internal_tabs,"Callable[[_],None]"
test_dedent_preserve_margin_tabs,"Callable[[_],None]"
test_main,"Callable[[],None]"
gen,RT
randomlist,"Callable[[_, int],List[float]]"
n,int
test_autoseed,"Callable[[_],None]"
test_saverestore,"Callable[[_],None]"
test_seedargs,"Callable[[_],None]"
test_choice,"Callable[[_],None]"
test_sample,"Callable[[_],None]"
test_sample_distribution,"Callable[[_],None]"
factorial,"Callable[[int],int]"
n,int
test_sample_inputs,"Callable[[_],None]"
test_sample_on_dicts,"Callable[[_],None]"
test_gauss,"Callable[[_],None]"
test_pickling,"Callable[[_],None]"
test_bug_1727780,"Callable[[_],None]"
test_bug_9025,"Callable[[_],None]"
test_autoseed,"Callable[[_],None]"
test_saverestore,"Callable[[_],None]"
test_seedargs,"Callable[[_],None]"
test_gauss,"Callable[[_],None]"
test_pickling,"Callable[[_],None]"
test_53_bits_per_float,"Callable[[_],None]"
span,int
test_bigrand,"Callable[[_],None]"
span,int
test_bigrand_ranges,"Callable[[_],None]"
test_rangelimits,"Callable[[_],None]"
test_genrandbits,"Callable[[_],None]"
test_randbelow_logic,"Callable[[_, Callable[[float, float],float], Callable[[float],int]],None]"
_log,"Callable[[float, float],float]"
int,"Callable[[float],int]"
test_guaranteed_stable,"Callable[[_],None]"
test_setstate_first_arg,"Callable[[_],None]"
test_setstate_middle_arg,"Callable[[_],None]"
test_referenceImplementation,"Callable[[_],None]"
test_strong_reference_implementation,"Callable[[_],None]"
test_long_seed,"Callable[[_],None]"
test_53_bits_per_float,"Callable[[_],None]"
span,int
test_bigrand,"Callable[[_],None]"
span,int
test_bigrand_ranges,"Callable[[_],None]"
test_rangelimits,"Callable[[_],None]"
test_genrandbits,"Callable[[_],None]"
test_randbelow_logic,"Callable[[_, Callable[[int, float],float], Callable[[float],int]],None]"
_log,"Callable[[int, float],float]"
int,"Callable[[float],int]"
test_randrange_bug_1590891,"Callable[[_],None]"
gamma,"Callable[[float, float],float]"
z,float
sqrt2pi,float
test_zeroinputs,"Callable[[_],None]"
patch,"Callable[[],None]"
test_avg_std,"Callable[[_],None]"
variate,Any
testMagicConstants,"Callable[[_],None]"
test__all__,"Callable[[_],None]"
test_random_subclass_with_kwargs,"Callable[[_],None]"
__init__,"Callable[[_, object],None]"
newarg,object
test_main,"Callable[[bool],None]"
verbose,bool
check_match,"Callable[[_, AnyStr, AnyStr, int, Any],None]"
filename,AnyStr
pattern,AnyStr
should_match,int
fn,Any
test_fnmatch,"Callable[[_],None]"
test_mix_bytes_str,"Callable[[_],None]"
test_fnmatchcase,"Callable[[_],None]"
test_bytes,"Callable[[_],None]"
test_translate,"Callable[[_],None]"
test_filter,"Callable[[_],None]"
test_main,"Callable[[],None]"
bf,"Callable[[bool],bool]"
a,bool
af,"Callable[[str],str]"
a,str
__init__,"Callable[[_, Dict[str, MypyFile], Errors, SemanticAnalyzerPass2],None]"
errors,Errors
sem,SemanticAnalyzerPass2
visit_file,"Callable[[_, MypyFile, str, Options, List[Tuple[int, Callable[[],None]]]],None]"
file_node,MypyFile
fnam,str
options,Options
patches,"List[Tuple[int, Callable[[],None]]]"
update_imported_vars,"Callable[[_],None]"
refresh_partial,"Callable[[_, Union[MypyFile, FuncDef, OverloadedFuncDef], List[Tuple[int, Callable[[],None]]]],None]"
patches,"List[Tuple[int, Callable[[],None]]]"
refresh_top_level,"Callable[[_, MypyFile],None]"
file_node,MypyFile
accept,"Callable[[_, Node],None]"
node,Node
visit_block,"Callable[[_, Block],None]"
b,Block
visit_func_def,"Callable[[_, FuncDef],None]"
fdef,FuncDef
visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
fdef,OverloadedFuncDef
visit_class_def,"Callable[[_, ClassDef],None]"
tdef,ClassDef
visit_decorator,"Callable[[_, Decorator],None]"
dec,Decorator
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
visit_for_stmt,"Callable[[_, ForStmt],None]"
s,ForStmt
visit_with_stmt,"Callable[[_, WithStmt],None]"
s,WithStmt
visit_cast_expr,"Callable[[_, CastExpr],None]"
e,CastExpr
visit_reveal_expr,"Callable[[_, RevealExpr],None]"
e,RevealExpr
visit_type_application,"Callable[[_, TypeApplication],None]"
e,TypeApplication
perform_transform,"Callable[[_, Node, Callable[[Type],Type]],None]"
node,Node
transform,"Callable[[Type],Type]"
transform_types_in_lvalue,"Callable[[_, Lvalue, Callable[[Type],Type]],None]"
lvalue,Lvalue
transform,"Callable[[Type],Type]"
analyze,"Callable[[_, Union[Type, None], Node, bool],None]"
node,Node
warn,bool
analyze_types,"Callable[[_, List[Type], Node],None]"
node,Node
analyze_symbol_table,"Callable[[_, SymbolTable],None]"
names,SymbolTable
make_scoped_patch,"Callable[[_, Callable[[],None]],Callable[[],None]]"
fn,"Callable[[],None]"
patch,"Callable[[],None]"
generate_type_patches,"Callable[[_, Node, Dict[str, bool], bool],None]"
node,Node
warn,bool
patch,"Callable[[],None]"
patch2,"Callable[[],None]"
analyze_info,"Callable[[_, TypeInfo],None]"
info,TypeInfo
make_type_analyzer,"Callable[[_, Dict[str, bool]],TypeAnalyserPass3]"
check_for_omitted_generics,"Callable[[_, Type],None]"
typ,Type
lookup_qualified,"Callable[[_, str, Context, bool],Union[SymbolTableNode, None]]"
name,str
ctx,Context
suppress_errors,bool
lookup_fully_qualified,"Callable[[_, str],SymbolTableNode]"
fullname,str
fail,"Callable[[_, str, Context, bool],None]"
msg,str
ctx,Context
serious,bool
blocker,bool
fail_blocker,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
note,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
builtin_type,"Callable[[_, str, Union[List[Type], None]],Instance]"
name,str
args,"Union[List[Type], None]"
is_identity_signature,"Callable[[Type],bool]"
sig,Type
calculate_return_type,"Callable[[Expression],Union[Type, None]]"
expr,Expression
find_fixed_callable_return,"Callable[[Expression],Union[CallableType, None]]"
expr,Expression
__init__,"Callable[[_, Callable[[str, Context],None], Union[Node, SymbolTableNode], bool],None]"
fail,"Callable[[str, Context],None]"
warn,bool
check_recursion,"Callable[[_, Type],bool]"
t,Type
visit_forwardref_type,"Callable[[_, ForwardRef],Type]"
t,ForwardRef
visit_instance,"Callable[[_, Instance, bool],Type]"
t,Instance
from_fallback,bool
visit_type_var,"Callable[[_, TypeVarType],Type]"
t,TypeVarType
visit_callable_type,"Callable[[_, CallableType],Type]"
t,CallableType
visit_overloaded,"Callable[[_, Overloaded],Type]"
t,Overloaded
visit_tuple_type,"Callable[[_, TupleType],Type]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],Type]"
t,TypedDictType
visit_union_type,"Callable[[_, UnionType],Type]"
t,UnionType
visit_type_type,"Callable[[_, TypeType],Type]"
t,TypeType
__init__,"Callable[[_, Callable[[str, Context],None]],None]"
fail,"Callable[[str, Context],None]"
visit_instance,"Callable[[_, Instance],Type]"
t,Instance
check_type_var_values,"Callable[[_, TypeInfo, List[Type], str, List[Type], int, Context],None]"
type,TypeInfo
arg_name,str
arg_number,int
context,Context
__init__,"Callable[[_, str],None]"
prog,str
main,"Callable[[List[str]],None]"
action,"Callable[[argparse.ArgumentParser],Callable[[ActionFunction],ActionFunction]]"
register,"Callable[[ActionFunction],ActionFunction]"
func,ActionFunction
do_start,"Callable[[argparse.Namespace],None]"
do_restart,"Callable[[argparse.Namespace],None]"
restart_server,"Callable[[argparse.Namespace, bool],None]"
allow_sources,bool
start_server,"Callable[[argparse.Namespace, bool],None]"
allow_sources,bool
wait_for_server,"Callable[[float],None]"
timeout,float
do_run,"Callable[[argparse.Namespace],None]"
do_status,"Callable[[argparse.Namespace],None]"
do_stop,"Callable[[argparse.Namespace],None]"
do_kill,"Callable[[argparse.Namespace],None]"
do_check,"Callable[[argparse.Namespace],None]"
do_recheck,"Callable[[argparse.Namespace],None]"
check_output,"Callable[[Dict[str, Any], bool, Union[str, None]],None]"
verbose,bool
show_stats,"Callable[[Mapping[str, object]],None]"
do_hang,"Callable[[argparse.Namespace],None]"
do_daemon,"Callable[[argparse.Namespace],None]"
do_help,"Callable[[argparse.Namespace],None]"
request,"Callable[[str],Dict[str, Any]]"
command,str
kwds,object
is_running,"Callable[[],bool]"
__init__,"Callable[[_],None]"
set_package_root,"Callable[[_, List[str]],None]"
flush,"Callable[[_],None]"
self.stat_cache,"Dict[str, os.stat_result]"
self.listdir_cache,"Dict[str, List[str]]"
stat,"Callable[[_, str],os.stat_result]"
path,str
init_under_package_root,"Callable[[_, str],bool]"
path,str
_fake_init,"Callable[[_, str],os.stat_result]"
path,str
listdir,"Callable[[_, str],List[str]]"
path,str
isfile,"Callable[[_, str],bool]"
path,str
isfile_case,"Callable[[_, str],bool]"
path,str
isdir,"Callable[[_, str],bool]"
path,str
exists,"Callable[[_, str],bool]"
path,str
read,"Callable[[_, str],bytes]"
path,str
md5,"Callable[[_, str],str]"
path,str
samefile,"Callable[[_, str, str],bool]"
f1,str
f2,str
copy_os_error,"Callable[[OSError],OSError]"
e,OSError
visit_int_expr,"Callable[[_, mypy.nodes.IntExpr],T]"
o,mypy.nodes.IntExpr
visit_str_expr,"Callable[[_, mypy.nodes.StrExpr],T]"
o,mypy.nodes.StrExpr
visit_bytes_expr,"Callable[[_, mypy.nodes.BytesExpr],T]"
o,mypy.nodes.BytesExpr
visit_unicode_expr,"Callable[[_, mypy.nodes.UnicodeExpr],T]"
o,mypy.nodes.UnicodeExpr
visit_float_expr,"Callable[[_, mypy.nodes.FloatExpr],T]"
o,mypy.nodes.FloatExpr
visit_complex_expr,"Callable[[_, mypy.nodes.ComplexExpr],T]"
o,mypy.nodes.ComplexExpr
visit_ellipsis,"Callable[[_, mypy.nodes.EllipsisExpr],T]"
o,mypy.nodes.EllipsisExpr
visit_star_expr,"Callable[[_, mypy.nodes.StarExpr],T]"
o,mypy.nodes.StarExpr
visit_name_expr,"Callable[[_, mypy.nodes.NameExpr],T]"
o,mypy.nodes.NameExpr
visit_member_expr,"Callable[[_, mypy.nodes.MemberExpr],T]"
o,mypy.nodes.MemberExpr
visit_yield_from_expr,"Callable[[_, mypy.nodes.YieldFromExpr],T]"
o,mypy.nodes.YieldFromExpr
visit_yield_expr,"Callable[[_, mypy.nodes.YieldExpr],T]"
o,mypy.nodes.YieldExpr
visit_call_expr,"Callable[[_, mypy.nodes.CallExpr],T]"
o,mypy.nodes.CallExpr
visit_op_expr,"Callable[[_, mypy.nodes.OpExpr],T]"
o,mypy.nodes.OpExpr
visit_comparison_expr,"Callable[[_, mypy.nodes.ComparisonExpr],T]"
o,mypy.nodes.ComparisonExpr
visit_cast_expr,"Callable[[_, mypy.nodes.CastExpr],T]"
o,mypy.nodes.CastExpr
visit_reveal_expr,"Callable[[_, mypy.nodes.RevealExpr],T]"
o,mypy.nodes.RevealExpr
visit_super_expr,"Callable[[_, mypy.nodes.SuperExpr],T]"
o,mypy.nodes.SuperExpr
visit_unary_expr,"Callable[[_, mypy.nodes.UnaryExpr],T]"
o,mypy.nodes.UnaryExpr
visit_list_expr,"Callable[[_, mypy.nodes.ListExpr],T]"
o,mypy.nodes.ListExpr
visit_dict_expr,"Callable[[_, mypy.nodes.DictExpr],T]"
o,mypy.nodes.DictExpr
visit_tuple_expr,"Callable[[_, mypy.nodes.TupleExpr],T]"
o,mypy.nodes.TupleExpr
visit_set_expr,"Callable[[_, mypy.nodes.SetExpr],T]"
o,mypy.nodes.SetExpr
visit_index_expr,"Callable[[_, mypy.nodes.IndexExpr],T]"
o,mypy.nodes.IndexExpr
visit_type_application,"Callable[[_, mypy.nodes.TypeApplication],T]"
o,mypy.nodes.TypeApplication
visit_lambda_expr,"Callable[[_, mypy.nodes.LambdaExpr],T]"
o,mypy.nodes.LambdaExpr
visit_list_comprehension,"Callable[[_, mypy.nodes.ListComprehension],T]"
o,mypy.nodes.ListComprehension
visit_set_comprehension,"Callable[[_, mypy.nodes.SetComprehension],T]"
o,mypy.nodes.SetComprehension
visit_dictionary_comprehension,"Callable[[_, mypy.nodes.DictionaryComprehension],T]"
o,mypy.nodes.DictionaryComprehension
visit_generator_expr,"Callable[[_, mypy.nodes.GeneratorExpr],T]"
o,mypy.nodes.GeneratorExpr
visit_slice_expr,"Callable[[_, mypy.nodes.SliceExpr],T]"
o,mypy.nodes.SliceExpr
visit_conditional_expr,"Callable[[_, mypy.nodes.ConditionalExpr],T]"
o,mypy.nodes.ConditionalExpr
visit_backquote_expr,"Callable[[_, mypy.nodes.BackquoteExpr],T]"
o,mypy.nodes.BackquoteExpr
visit_type_var_expr,"Callable[[_, mypy.nodes.TypeVarExpr],T]"
o,mypy.nodes.TypeVarExpr
visit_type_alias_expr,"Callable[[_, mypy.nodes.TypeAliasExpr],T]"
o,mypy.nodes.TypeAliasExpr
visit_namedtuple_expr,"Callable[[_, mypy.nodes.NamedTupleExpr],T]"
o,mypy.nodes.NamedTupleExpr
visit_enum_call_expr,"Callable[[_, mypy.nodes.EnumCallExpr],T]"
o,mypy.nodes.EnumCallExpr
visit_typeddict_expr,"Callable[[_, mypy.nodes.TypedDictExpr],T]"
o,mypy.nodes.TypedDictExpr
visit_newtype_expr,"Callable[[_, mypy.nodes.NewTypeExpr],T]"
o,mypy.nodes.NewTypeExpr
visit__promote_expr,"Callable[[_, mypy.nodes.PromoteExpr],T]"
o,mypy.nodes.PromoteExpr
visit_await_expr,"Callable[[_, mypy.nodes.AwaitExpr],T]"
o,mypy.nodes.AwaitExpr
visit_temp_node,"Callable[[_, mypy.nodes.TempNode],T]"
o,mypy.nodes.TempNode
visit_assignment_stmt,"Callable[[_, mypy.nodes.AssignmentStmt],T]"
o,mypy.nodes.AssignmentStmt
visit_for_stmt,"Callable[[_, mypy.nodes.ForStmt],T]"
o,mypy.nodes.ForStmt
visit_with_stmt,"Callable[[_, mypy.nodes.WithStmt],T]"
o,mypy.nodes.WithStmt
visit_del_stmt,"Callable[[_, mypy.nodes.DelStmt],T]"
o,mypy.nodes.DelStmt
visit_func_def,"Callable[[_, mypy.nodes.FuncDef],T]"
o,mypy.nodes.FuncDef
visit_overloaded_func_def,"Callable[[_, mypy.nodes.OverloadedFuncDef],T]"
o,mypy.nodes.OverloadedFuncDef
visit_class_def,"Callable[[_, mypy.nodes.ClassDef],T]"
o,mypy.nodes.ClassDef
visit_global_decl,"Callable[[_, mypy.nodes.GlobalDecl],T]"
o,mypy.nodes.GlobalDecl
visit_nonlocal_decl,"Callable[[_, mypy.nodes.NonlocalDecl],T]"
o,mypy.nodes.NonlocalDecl
visit_decorator,"Callable[[_, mypy.nodes.Decorator],T]"
o,mypy.nodes.Decorator
visit_var,"Callable[[_, mypy.nodes.Var],T]"
o,mypy.nodes.Var
visit_import,"Callable[[_, mypy.nodes.Import],T]"
o,mypy.nodes.Import
visit_import_from,"Callable[[_, mypy.nodes.ImportFrom],T]"
o,mypy.nodes.ImportFrom
visit_import_all,"Callable[[_, mypy.nodes.ImportAll],T]"
o,mypy.nodes.ImportAll
visit_block,"Callable[[_, mypy.nodes.Block],T]"
o,mypy.nodes.Block
visit_expression_stmt,"Callable[[_, mypy.nodes.ExpressionStmt],T]"
o,mypy.nodes.ExpressionStmt
visit_operator_assignment_stmt,"Callable[[_, mypy.nodes.OperatorAssignmentStmt],T]"
o,mypy.nodes.OperatorAssignmentStmt
visit_while_stmt,"Callable[[_, mypy.nodes.WhileStmt],T]"
o,mypy.nodes.WhileStmt
visit_return_stmt,"Callable[[_, mypy.nodes.ReturnStmt],T]"
o,mypy.nodes.ReturnStmt
visit_assert_stmt,"Callable[[_, mypy.nodes.AssertStmt],T]"
o,mypy.nodes.AssertStmt
visit_if_stmt,"Callable[[_, mypy.nodes.IfStmt],T]"
o,mypy.nodes.IfStmt
visit_break_stmt,"Callable[[_, mypy.nodes.BreakStmt],T]"
o,mypy.nodes.BreakStmt
visit_continue_stmt,"Callable[[_, mypy.nodes.ContinueStmt],T]"
o,mypy.nodes.ContinueStmt
visit_pass_stmt,"Callable[[_, mypy.nodes.PassStmt],T]"
o,mypy.nodes.PassStmt
visit_raise_stmt,"Callable[[_, mypy.nodes.RaiseStmt],T]"
o,mypy.nodes.RaiseStmt
visit_try_stmt,"Callable[[_, mypy.nodes.TryStmt],T]"
o,mypy.nodes.TryStmt
visit_print_stmt,"Callable[[_, mypy.nodes.PrintStmt],T]"
o,mypy.nodes.PrintStmt
visit_exec_stmt,"Callable[[_, mypy.nodes.ExecStmt],T]"
o,mypy.nodes.ExecStmt
visit_mypy_file,"Callable[[_, mypy.nodes.MypyFile],T]"
o,mypy.nodes.MypyFile
visit_import,"Callable[[_, mypy.nodes.Import],T]"
o,mypy.nodes.Import
visit_import_from,"Callable[[_, mypy.nodes.ImportFrom],T]"
o,mypy.nodes.ImportFrom
visit_import_all,"Callable[[_, mypy.nodes.ImportAll],T]"
o,mypy.nodes.ImportAll
visit_func_def,"Callable[[_, mypy.nodes.FuncDef],T]"
o,mypy.nodes.FuncDef
visit_overloaded_func_def,"Callable[[_, mypy.nodes.OverloadedFuncDef],T]"
o,mypy.nodes.OverloadedFuncDef
visit_class_def,"Callable[[_, mypy.nodes.ClassDef],T]"
o,mypy.nodes.ClassDef
visit_global_decl,"Callable[[_, mypy.nodes.GlobalDecl],T]"
o,mypy.nodes.GlobalDecl
visit_nonlocal_decl,"Callable[[_, mypy.nodes.NonlocalDecl],T]"
o,mypy.nodes.NonlocalDecl
visit_decorator,"Callable[[_, mypy.nodes.Decorator],T]"
o,mypy.nodes.Decorator
visit_var,"Callable[[_, mypy.nodes.Var],T]"
o,mypy.nodes.Var
visit_type_alias,"Callable[[_, mypy.nodes.TypeAlias],T]"
o,mypy.nodes.TypeAlias
visit_block,"Callable[[_, mypy.nodes.Block],T]"
o,mypy.nodes.Block
visit_expression_stmt,"Callable[[_, mypy.nodes.ExpressionStmt],T]"
o,mypy.nodes.ExpressionStmt
visit_assignment_stmt,"Callable[[_, mypy.nodes.AssignmentStmt],T]"
o,mypy.nodes.AssignmentStmt
visit_operator_assignment_stmt,"Callable[[_, mypy.nodes.OperatorAssignmentStmt],T]"
o,mypy.nodes.OperatorAssignmentStmt
visit_while_stmt,"Callable[[_, mypy.nodes.WhileStmt],T]"
o,mypy.nodes.WhileStmt
visit_for_stmt,"Callable[[_, mypy.nodes.ForStmt],T]"
o,mypy.nodes.ForStmt
visit_return_stmt,"Callable[[_, mypy.nodes.ReturnStmt],T]"
o,mypy.nodes.ReturnStmt
visit_assert_stmt,"Callable[[_, mypy.nodes.AssertStmt],T]"
o,mypy.nodes.AssertStmt
visit_del_stmt,"Callable[[_, mypy.nodes.DelStmt],T]"
o,mypy.nodes.DelStmt
visit_if_stmt,"Callable[[_, mypy.nodes.IfStmt],T]"
o,mypy.nodes.IfStmt
visit_break_stmt,"Callable[[_, mypy.nodes.BreakStmt],T]"
o,mypy.nodes.BreakStmt
visit_continue_stmt,"Callable[[_, mypy.nodes.ContinueStmt],T]"
o,mypy.nodes.ContinueStmt
visit_pass_stmt,"Callable[[_, mypy.nodes.PassStmt],T]"
o,mypy.nodes.PassStmt
visit_raise_stmt,"Callable[[_, mypy.nodes.RaiseStmt],T]"
o,mypy.nodes.RaiseStmt
visit_try_stmt,"Callable[[_, mypy.nodes.TryStmt],T]"
o,mypy.nodes.TryStmt
visit_with_stmt,"Callable[[_, mypy.nodes.WithStmt],T]"
o,mypy.nodes.WithStmt
visit_print_stmt,"Callable[[_, mypy.nodes.PrintStmt],T]"
o,mypy.nodes.PrintStmt
visit_exec_stmt,"Callable[[_, mypy.nodes.ExecStmt],T]"
o,mypy.nodes.ExecStmt
visit_int_expr,"Callable[[_, mypy.nodes.IntExpr],T]"
o,mypy.nodes.IntExpr
visit_str_expr,"Callable[[_, mypy.nodes.StrExpr],T]"
o,mypy.nodes.StrExpr
visit_bytes_expr,"Callable[[_, mypy.nodes.BytesExpr],T]"
o,mypy.nodes.BytesExpr
visit_unicode_expr,"Callable[[_, mypy.nodes.UnicodeExpr],T]"
o,mypy.nodes.UnicodeExpr
visit_float_expr,"Callable[[_, mypy.nodes.FloatExpr],T]"
o,mypy.nodes.FloatExpr
visit_complex_expr,"Callable[[_, mypy.nodes.ComplexExpr],T]"
o,mypy.nodes.ComplexExpr
visit_ellipsis,"Callable[[_, mypy.nodes.EllipsisExpr],T]"
o,mypy.nodes.EllipsisExpr
visit_star_expr,"Callable[[_, mypy.nodes.StarExpr],T]"
o,mypy.nodes.StarExpr
visit_name_expr,"Callable[[_, mypy.nodes.NameExpr],T]"
o,mypy.nodes.NameExpr
visit_member_expr,"Callable[[_, mypy.nodes.MemberExpr],T]"
o,mypy.nodes.MemberExpr
visit_yield_from_expr,"Callable[[_, mypy.nodes.YieldFromExpr],T]"
o,mypy.nodes.YieldFromExpr
visit_yield_expr,"Callable[[_, mypy.nodes.YieldExpr],T]"
o,mypy.nodes.YieldExpr
visit_call_expr,"Callable[[_, mypy.nodes.CallExpr],T]"
o,mypy.nodes.CallExpr
visit_op_expr,"Callable[[_, mypy.nodes.OpExpr],T]"
o,mypy.nodes.OpExpr
visit_comparison_expr,"Callable[[_, mypy.nodes.ComparisonExpr],T]"
o,mypy.nodes.ComparisonExpr
visit_cast_expr,"Callable[[_, mypy.nodes.CastExpr],T]"
o,mypy.nodes.CastExpr
visit_reveal_expr,"Callable[[_, mypy.nodes.RevealExpr],T]"
o,mypy.nodes.RevealExpr
visit_super_expr,"Callable[[_, mypy.nodes.SuperExpr],T]"
o,mypy.nodes.SuperExpr
visit_unary_expr,"Callable[[_, mypy.nodes.UnaryExpr],T]"
o,mypy.nodes.UnaryExpr
visit_list_expr,"Callable[[_, mypy.nodes.ListExpr],T]"
o,mypy.nodes.ListExpr
visit_dict_expr,"Callable[[_, mypy.nodes.DictExpr],T]"
o,mypy.nodes.DictExpr
visit_tuple_expr,"Callable[[_, mypy.nodes.TupleExpr],T]"
o,mypy.nodes.TupleExpr
visit_set_expr,"Callable[[_, mypy.nodes.SetExpr],T]"
o,mypy.nodes.SetExpr
visit_index_expr,"Callable[[_, mypy.nodes.IndexExpr],T]"
o,mypy.nodes.IndexExpr
visit_type_application,"Callable[[_, mypy.nodes.TypeApplication],T]"
o,mypy.nodes.TypeApplication
visit_lambda_expr,"Callable[[_, mypy.nodes.LambdaExpr],T]"
o,mypy.nodes.LambdaExpr
visit_list_comprehension,"Callable[[_, mypy.nodes.ListComprehension],T]"
o,mypy.nodes.ListComprehension
visit_set_comprehension,"Callable[[_, mypy.nodes.SetComprehension],T]"
o,mypy.nodes.SetComprehension
visit_dictionary_comprehension,"Callable[[_, mypy.nodes.DictionaryComprehension],T]"
o,mypy.nodes.DictionaryComprehension
visit_generator_expr,"Callable[[_, mypy.nodes.GeneratorExpr],T]"
o,mypy.nodes.GeneratorExpr
visit_slice_expr,"Callable[[_, mypy.nodes.SliceExpr],T]"
o,mypy.nodes.SliceExpr
visit_conditional_expr,"Callable[[_, mypy.nodes.ConditionalExpr],T]"
o,mypy.nodes.ConditionalExpr
visit_backquote_expr,"Callable[[_, mypy.nodes.BackquoteExpr],T]"
o,mypy.nodes.BackquoteExpr
visit_type_var_expr,"Callable[[_, mypy.nodes.TypeVarExpr],T]"
o,mypy.nodes.TypeVarExpr
visit_type_alias_expr,"Callable[[_, mypy.nodes.TypeAliasExpr],T]"
o,mypy.nodes.TypeAliasExpr
visit_namedtuple_expr,"Callable[[_, mypy.nodes.NamedTupleExpr],T]"
o,mypy.nodes.NamedTupleExpr
visit_enum_call_expr,"Callable[[_, mypy.nodes.EnumCallExpr],T]"
o,mypy.nodes.EnumCallExpr
visit_typeddict_expr,"Callable[[_, mypy.nodes.TypedDictExpr],T]"
o,mypy.nodes.TypedDictExpr
visit_newtype_expr,"Callable[[_, mypy.nodes.NewTypeExpr],T]"
o,mypy.nodes.NewTypeExpr
visit__promote_expr,"Callable[[_, mypy.nodes.PromoteExpr],T]"
o,mypy.nodes.PromoteExpr
visit_await_expr,"Callable[[_, mypy.nodes.AwaitExpr],T]"
o,mypy.nodes.AwaitExpr
visit_temp_node,"Callable[[_, mypy.nodes.TempNode],T]"
o,mypy.nodes.TempNode
is_git_repo,"Callable[[str],bool]"
dir,str
have_git,"Callable[[],bool]"
get_submodules,"Callable[[str],Iterator[str]]"
dir,str
git_revision,"Callable[[str],bytes]"
dir,str
submodule_revision,"Callable[[str, str],bytes]"
dir,str
submodule,str
is_dirty,"Callable[[str],bool]"
dir,str
has_extra_files,"Callable[[str],bool]"
dir,str
warn_no_git_executable,"Callable[[],None]"
warn_dirty,"Callable[[str],None]"
dir,str
warn_extra_files,"Callable[[str],None]"
dir,str
chdir_prefix,"Callable[[str],str]"
dir,str
error_submodule_not_initialized,"Callable[[str, str],None]"
name,str
dir,str
error_submodule_not_updated,"Callable[[str, str],None]"
name,str
dir,str
verify_git_integrity_or_abort,"Callable[[str],None]"
datadir,str
TPDICT_CLASS_ERROR,Final
__init__,"Callable[[_, Options, SemanticAnalyzerInterface, MessageBuilder],None]"
options,Options
api,SemanticAnalyzerInterface
msg,MessageBuilder
analyze_typeddict_classdef,"Callable[[_, ClassDef],bool]"
defn,ClassDef
check_typeddict_classdef,"Callable[[_, ClassDef, Union[List[str], None]],Tuple[List[str], List[Type], Set[str]]]"
defn,ClassDef
oldfields,"Union[List[str], None]"
process_typeddict_definition,"Callable[[_, AssignmentStmt, bool],None]"
s,AssignmentStmt
is_func_scope,bool
check_typeddict,"Callable[[_, Expression, Union[str, None], bool],Union[TypeInfo, None]]"
node,Expression
is_func_scope,bool
parse_typeddict_args,"Callable[[_, CallExpr],Tuple[List[str], List[Type], bool, bool]]"
call,CallExpr
parse_typeddict_fields_with_types,"Callable[[_, List[Tuple[Union[Expression, None], Expression]], Context],Tuple[List[str], List[Type], bool]]"
dict_items,"List[Tuple[Union[Expression, None], Expression]]"
context,Context
fail_typeddict_arg,"Callable[[_, str, Context],Tuple[List[str], List[Type], bool, bool]]"
message,str
context,Context
build_typeddict_typeinfo,"Callable[[_, str, List[str], List[Type], Set[str]],TypeInfo]"
name,str
is_typeddict,"Callable[[_, Expression],bool]"
expr,Expression
fail,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
generate_stub_for_module,"Callable[[str, str, bool, bool, Dict[str, str], Dict[str, str], Tuple[int, int], bool, List[str], str, bool],None]"
module,str
output_dir,str
quiet,bool
add_header,bool
no_import,bool
interpreter,str
include_private,bool
find_module_path_and_all,"Callable[[str, Tuple[int, int], bool, List[str], str],Union[Tuple[str, Union[List[str], None]], None]]"
module,str
no_import,bool
interpreter,str
load_python_module_info,"Callable[[str, str],Tuple[str, Union[List[str], None]]]"
module,str
interpreter,str
generate_stub,"Callable[[str, str, Union[List[str], None], Union[str, None], bool, Union[str, None], Tuple[int, int], bool],None]"
path,str
output_dir,str
_all_,"Union[List[str], None]"
add_header,bool
include_private,bool
EMPTY,Final
FUNC,Final
CLASS,Final
EMPTY_CLASS,Final
VAR,Final
NOT_IN_ALL,Final
__init__,"Callable[[_, StubGenerator],None]"
stubgen,StubGenerator
visit_unbound_type,"Callable[[_, UnboundType],str]"
t,UnboundType
visit_none_type,"Callable[[_, NoneTyp],str]"
t,NoneTyp
visit_type_list,"Callable[[_, TypeList],str]"
t,TypeList
__init__,"Callable[[_, StubGenerator],None]"
stubgen,StubGenerator
visit_call_expr,"Callable[[_, CallExpr],str]"
node,CallExpr
visit_name_expr,"Callable[[_, NameExpr],str]"
node,NameExpr
visit_str_expr,"Callable[[_, StrExpr],str]"
node,StrExpr
visit_index_expr,"Callable[[_, IndexExpr],str]"
node,IndexExpr
visit_tuple_expr,"Callable[[_, TupleExpr],str]"
node,TupleExpr
visit_list_expr,"Callable[[_, ListExpr],str]"
node,ListExpr
visit_ellipsis,"Callable[[_, EllipsisExpr],str]"
node,EllipsisExpr
__init__,"Callable[[_],None]"
self.module_for,"Dict[str, Union[str, None]]"
add_import_from,"Callable[[_, str, List[Tuple[str, Union[str, None]]]],None]"
module,str
names,"List[Tuple[str, Union[str, None]]]"
add_import,"Callable[[_, str, Union[str, None]],None]"
module,str
require_name,"Callable[[_, str],None]"
name,str
reexport,"Callable[[_, str],None]"
name,str
module_map,"Mapping[str, List[str]]"
__init__,"Callable[[_, Union[List[str], None], Tuple[int, int], bool],None]"
_all_,"Union[List[str], None]"
include_private,bool
self._vars,List[List[str]]
visit_mypy_file,"Callable[[_, MypyFile],None]"
o,MypyFile
visit_func_def,"Callable[[_, FuncDef],None]"
o,FuncDef
visit_decorator,"Callable[[_, Decorator],None]"
o,Decorator
visit_class_def,"Callable[[_, ClassDef],None]"
o,ClassDef
get_base_types,"Callable[[_, ClassDef],List[str]]"
cdef,ClassDef
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
o,AssignmentStmt
annotations,"Iterable[Union[Type, None]]"
is_namedtuple,"Callable[[_, Expression],bool]"
expr,Expression
process_namedtuple,"Callable[[_, NameExpr, CallExpr],None]"
lvalue,NameExpr
rvalue,CallExpr
is_type_expression,"Callable[[_, Expression, bool],bool]"
expr,Expression
top_level,bool
process_typealias,"Callable[[_, NameExpr, Expression],None]"
lvalue,NameExpr
rvalue,Expression
visit_if_stmt,"Callable[[_, IfStmt],None]"
o,IfStmt
visit_import_all,"Callable[[_, ImportAll],None]"
o,ImportAll
visit_import_from,"Callable[[_, ImportFrom],None]"
o,ImportFrom
visit_import,"Callable[[_, Import],None]"
o,Import
get_init,"Callable[[_, str, Expression, Union[Type, None]],Union[str, None]]"
lvalue,str
rvalue,Expression
add,"Callable[[_, str],None]"
string,str
add_typing_import,"Callable[[_, str],None]"
name,str
add_import_line,"Callable[[_, str],None]"
line,str
add_coroutine_decorator,"Callable[[_, FuncDef, str, str],None]"
func,FuncDef
name,str
require_name,str
output,"Callable[[_],str]"
is_not_in_all,"Callable[[_, str],bool]"
name,str
is_private_name,"Callable[[_, str],bool]"
name,str
get_str_type_of_node,"Callable[[_, Expression, bool],str]"
rvalue,Expression
can_infer_optional,bool
print_annotation,"Callable[[_, Type],str]"
t,Type
is_top_level,"Callable[[_],bool]"
record_name,"Callable[[_, str],None]"
name,str
is_recorded_name,"Callable[[_, str],bool]"
name,str
__init__,"Callable[[_],None]"
self.results,"List[Tuple[str, Expression]]"
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
o,AssignmentStmt
find_self_initializers,"Callable[[FuncBase],List[Tuple[str, Expression]]]"
fdef,FuncBase
__init__,"Callable[[_],None]"
visit_return_stmt,"Callable[[_, ReturnStmt],None]"
o,ReturnStmt
has_return_statement,"Callable[[FuncBase],bool]"
fdef,FuncBase
get_qualified_name,"Callable[[Expression],str]"
o,Expression
main,"Callable[[],None]"
sigs,Any
class_sigs,Any
all_sigs,Any
all_class_sigs,Any
parse_options,"Callable[[List[str]],Options]"
default_python2_interpreter,"Callable[[],str]"
usage,"Callable[[bool],None]"
exit_nonzero,bool
_run,"Callable[[Callable[[],None]],Tuple[str, str, int]]"
f,"Callable[[],None]"
__init__,"Callable[[_],None]"
self.cache,"Dict[types.Type, Set[str]]"
find_modules,"Callable[[_, Iterable[types.Type]],Set[str]]"
typs,Iterable[types.Type]
_visit,"Callable[[_, Union[types.Type, Iterable[types.Type]]],Set[str]]"
typ_or_typs,"Union[types.Type, Iterable[types.Type]]"
find_occurrences,"Union[Tuple[str, str], None]"
strict_optional_set,"Callable[[bool],Iterator[None]]"
value,bool
NAMEDTUPLE_PROHIBITED_NAMES,Final
NAMEDTUP_CLASS_ERROR,Final
__init__,"Callable[[_, Options, SemanticAnalyzerInterface],None]"
options,Options
api,SemanticAnalyzerInterface
analyze_namedtuple_classdef,"Callable[[_, ClassDef],Union[TypeInfo, None]]"
defn,ClassDef
check_namedtuple_classdef,"Callable[[_, ClassDef],Tuple[List[str], List[Type], Dict[str, Expression]]]"
defn,ClassDef
process_namedtuple_definition,"Callable[[_, AssignmentStmt, bool],None]"
s,AssignmentStmt
is_func_scope,bool
check_namedtuple,"Callable[[_, Expression, Union[str, None], bool],Union[TypeInfo, None]]"
node,Expression
is_func_scope,bool
store_namedtuple_info,"Callable[[_, TypeInfo, str, CallExpr, bool],None]"
info,TypeInfo
name,str
call,CallExpr
is_typed,bool
parse_namedtuple_args,"Callable[[_, CallExpr, str],Tuple[List[str], List[Type], List[Expression], bool]]"
call,CallExpr
fullname,str
parse_namedtuple_fields_with_types,"Callable[[_, List[Expression], Context],Tuple[List[str], List[Type], List[Expression], bool]]"
context,Context
fail_namedtuple_arg,"Callable[[_, str, Context],Tuple[List[str], List[Type], List[Expression], bool]]"
message,str
context,Context
build_namedtuple_typeinfo,"Callable[[_, str, List[str], List[Type], Mapping[str, Expression]],TypeInfo]"
name,str
patch,"Callable[[],None]"
add_field,"Callable[[Var, bool, bool],None]"
var,Var
is_initialized_in_class,bool
is_property,bool
add_method,"Callable[[str, Type, List[Argument], Union[str, None], bool, bool],None]"
funcname,str
ret,Type
is_classmethod,bool
is_new,bool
make_init_arg,"Callable[[Var],Argument]"
var,Var
fail,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
__init__,"Callable[[_, FileSystemCache],None]"
fs,FileSystemCache
self._file_data,"Dict[str, Union[FileData, None]]"
set_file_data,"Callable[[_, str, FileData],None]"
path,str
data,FileData
add_watched_paths,"Callable[[_, Iterable[str]],None]"
remove_watched_paths,"Callable[[_, Iterable[str]],None]"
_update,"Callable[[_, str],None]"
path,str
__new__,"Callable[[_],mypy.plugin.Plugin]"
args,Any
kwargs,Any
__init__,"Callable[[_, Options],None]"
options,Options
get_type_analyze_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.AnalyzeTypeContext],Type], None]]"
fullname,str
get_function_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.FunctionContext],Type], None]]"
fullname,str
get_method_signature_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.MethodSigContext],CallableType], None]]"
fullname,str
get_method_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.MethodContext],Type], None]]"
fullname,str
get_attribute_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.AttributeContext],Type], None]]"
fullname,str
get_class_decorator_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.ClassDefContext],None], None]]"
fullname,str
get_metaclass_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.ClassDefContext],None], None]]"
fullname,str
get_base_class_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.ClassDefContext],None], None]]"
fullname,str
get_customize_class_mro_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.ClassDefContext],None], None]]"
fullname,str
get_dynamic_class_hook,"Callable[[_, str],Union[Callable[[mypy.plugin.DynamicClassDefContext],None], None]]"
fullname,str
expand_type,"Callable[[Type, Mapping[TypeVarId, Type]],Type]"
typ,Type
expand_type_by_instance,"Callable[[Type, Instance],Type]"
typ,Type
instance,Instance
freshen_function_type_vars,"Callable[[F],F]"
callee,F
__init__,"Callable[[_, Mapping[TypeVarId, Type]],None]"
visit_unbound_type,"Callable[[_, UnboundType],Type]"
t,UnboundType
visit_any,"Callable[[_, AnyType],Type]"
t,AnyType
visit_none_type,"Callable[[_, NoneTyp],Type]"
t,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],Type]"
t,UninhabitedType
visit_deleted_type,"Callable[[_, DeletedType],Type]"
t,DeletedType
visit_erased_type,"Callable[[_, ErasedType],Type]"
t,ErasedType
visit_instance,"Callable[[_, Instance],Type]"
t,Instance
visit_type_var,"Callable[[_, TypeVarType],Type]"
t,TypeVarType
visit_callable_type,"Callable[[_, CallableType],Type]"
t,CallableType
visit_overloaded,"Callable[[_, Overloaded],Type]"
t,Overloaded
visit_tuple_type,"Callable[[_, TupleType],Type]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],Type]"
t,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],Type]"
t,LiteralType
visit_union_type,"Callable[[_, UnionType],Type]"
t,UnionType
visit_partial_type,"Callable[[_, PartialType],Type]"
t,PartialType
visit_type_type,"Callable[[_, TypeType],Type]"
t,TypeType
MEM_PROFILE,Final
daemonize,"Callable[[Options, Union[int, None], Union[str, None]],int]"
options,Options
_daemonize_cb,"Callable[[Callable[[],None], Union[str, None]],int]"
func,"Callable[[],None]"
daemonize,"Callable[[Options, Union[int, None], Union[str, None]],int]"
options,Options
CONNECTION_NAME,Final
process_start_options,"Callable[[List[str], bool],Options]"
allow_sources,bool
__init__,"Callable[[_, Options, Union[int, None]],None]"
options,Options
serve,"Callable[[_],None]"
run_command,"Callable[[_, str, Mapping[str, object]],Dict[str, object]]"
command,str
cmd_run,"Callable[[_, str, Sequence[str]],Dict[str, object]]"
version,str
cmd_recheck,"Callable[[_, Union[List[str], None], Union[List[str], None]],Dict[str, object]]"
remove,"Union[List[str], None]"
update,"Union[List[str], None]"
fine_grained_increment,"Callable[[_, List[BuildSource], Union[List[str], None], Union[List[str], None]],Dict[str, Any]]"
remove,"Union[List[str], None]"
update,"Union[List[str], None]"
update_sources,"Callable[[_, List[BuildSource]],None]"
update_changed,"Callable[[_, List[BuildSource], List[str], List[str]],ChangesAndRemovals]"
find_changed,"Callable[[_, List[BuildSource]],ChangesAndRemovals]"
_find_changed,"Callable[[_, List[BuildSource], AbstractSet[str]],ChangesAndRemovals]"
MiB,Final
STATUS_FILE,Final
receive,"Callable[[IPCBase],Any]"
connection,IPCBase
type_constructors,Final
ARG_KINDS_BY_CONSTRUCTOR,Final
analyze_type_alias,"Callable[[Expression, SemanticAnalyzerCoreInterface, TypeVarScope, Plugin, Options, bool, bool, bool, bool],Union[Tuple[Type, Set[str]], None]]"
node,Expression
api,SemanticAnalyzerCoreInterface
tvar_scope,TypeVarScope
plugin,Plugin
options,Options
is_typeshed_stub,bool
allow_unnormalized,bool
in_dynamic_func,bool
global_scope,bool
no_subscript_builtin_alias,"Callable[[str, bool],str]"
name,str
propose_alt,bool
in_dynamic_func,bool
global_scope,bool
__init__,"Callable[[_, SemanticAnalyzerCoreInterface, Union[TypeVarScope, None], Plugin, Options, bool],None]"
api,SemanticAnalyzerCoreInterface
plugin,Plugin
options,Options
is_typeshed_stub,bool
defining_alias,bool
allow_tuple_literal,bool
allow_unnormalized,bool
allow_unbound_tvars,bool
third_pass,bool
visit_unbound_type,"Callable[[_, UnboundType],Type]"
t,UnboundType
visit_unbound_type_nonoptional,"Callable[[_, UnboundType],Type]"
t,UnboundType
info,TypeInfo
visit_any,"Callable[[_, AnyType],Type]"
t,AnyType
visit_none_type,"Callable[[_, NoneTyp],Type]"
t,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],Type]"
t,UninhabitedType
visit_deleted_type,"Callable[[_, DeletedType],Type]"
t,DeletedType
visit_type_list,"Callable[[_, TypeList],Type]"
t,TypeList
visit_callable_argument,"Callable[[_, CallableArgument],Type]"
t,CallableArgument
visit_instance,"Callable[[_, Instance],Type]"
t,Instance
visit_type_var,"Callable[[_, TypeVarType],Type]"
t,TypeVarType
visit_callable_type,"Callable[[_, CallableType, bool],Type]"
t,CallableType
nested,bool
visit_tuple_type,"Callable[[_, TupleType],Type]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],Type]"
t,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],Type]"
t,LiteralType
visit_star_type,"Callable[[_, StarType],Type]"
t,StarType
visit_union_type,"Callable[[_, UnionType],Type]"
t,UnionType
visit_partial_type,"Callable[[_, PartialType],Type]"
t,PartialType
visit_ellipsis_type,"Callable[[_, EllipsisType],Type]"
t,EllipsisType
visit_type_type,"Callable[[_, TypeType],Type]"
t,TypeType
visit_forwardref_type,"Callable[[_, ForwardRef],Type]"
t,ForwardRef
analyze_callable_type,"Callable[[_, UnboundType],Type]"
t,UnboundType
analyze_callable_args,"Callable[[_, TypeList],Union[Tuple[List[Type], List[int], List[Union[str, None]]], None]]"
arglist,TypeList
names,"List[Union[str, None]]"
analyze_type,"Callable[[_, Type],Type]"
t,Type
fail,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
infer_type_variables,"Callable[[_, CallableType],List[Tuple[str, TypeVarExpr]]]"
type,CallableType
bind_function_type_variables,"Callable[[_, CallableType, Context],List[TypeVarDef]]"
fun_type,CallableType
defn,Context
is_defined_type_var,"Callable[[_, str, Context],bool]"
tvar,str
context,Context
anal_array,"Callable[[_, List[Type], bool],List[Type]]"
nested,bool
anal_type,"Callable[[_, Type, bool],Type]"
t,Type
nested,bool
named_type,"Callable[[_, str, Union[List[Type], None], int, int],Instance]"
fully_qualified_name,str
args,"Union[List[Type], None]"
line,int
column,int
tuple_type,"Callable[[_, List[Type]],TupleType]"
__init__,"Callable[[_, SemanticAnalyzerCoreInterface, Plugin, Options, bool, Dict[str, bool], List[Tuple[int, Callable[[],None]]]],None]"
api,SemanticAnalyzerCoreInterface
plugin,Plugin
options,Options
is_typeshed_stub,bool
patches,"List[Tuple[int, Callable[[],None]]]"
visit_instance,"Callable[[_, Instance],None]"
t,Instance
visit_callable_type,"Callable[[_, CallableType],None]"
t,CallableType
visit_overloaded,"Callable[[_, Overloaded],None]"
t,Overloaded
visit_tuple_type,"Callable[[_, TupleType],None]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],None]"
t,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],None]"
t,LiteralType
visit_union_type,"Callable[[_, UnionType],None]"
t,UnionType
visit_star_type,"Callable[[_, StarType],None]"
t,StarType
visit_unbound_type,"Callable[[_, UnboundType],None]"
t,UnboundType
visit_any,"Callable[[_, AnyType],None]"
t,AnyType
visit_none_type,"Callable[[_, NoneTyp],None]"
t,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],None]"
t,UninhabitedType
visit_deleted_type,"Callable[[_, DeletedType],None]"
t,DeletedType
visit_type_list,"Callable[[_, TypeList],None]"
t,TypeList
visit_type_var,"Callable[[_, TypeVarType],None]"
t,TypeVarType
visit_partial_type,"Callable[[_, PartialType],None]"
t,PartialType
visit_type_type,"Callable[[_, TypeType],None]"
t,TypeType
visit_forwardref_type,"Callable[[_, ForwardRef],None]"
t,ForwardRef
anal_type,"Callable[[_, UnboundType],Type]"
tp,UnboundType
fix_instance,"Callable[[Instance, Callable[[str, Context],None]],None]"
t,Instance
fail,"Callable[[str, Context],None]"
expand_type_alias,"Callable[[Type, List[str], List[Type], Callable[[str, Context],None], bool, Context],Type]"
target,Type
fail,"Callable[[str, Context],None]"
no_args,bool
ctx,Context
replace_alias_tvars,"Callable[[Type, List[str], List[Type], int, int],Type]"
tp,Type
newline,int
newcolumn,int
set_any_tvars,"Callable[[Type, List[str], int, int, bool],Type]"
tp,Type
newline,int
newcolumn,int
implicit,bool
flatten_tvars,"Callable[[Iterable[List[T]]],List[T]]"
ll,Iterable[List[T]]
__init__,"Callable[[_, Callable[[str, Context],Union[SymbolTableNode, None]], TypeVarScope],None]"
lookup,"Callable[[str, Context],Union[SymbolTableNode, None]]"
scope,TypeVarScope
include_callables,bool
include_bound_tvars,bool
_seems_like_callable,"Callable[[_, UnboundType],bool]"
type,UnboundType
visit_unbound_type,"Callable[[_, UnboundType],TypeVarList]"
t,UnboundType
visit_callable_type,"Callable[[_, CallableType],TypeVarList]"
t,CallableType
check_for_explicit_any,"Callable[[Union[Type, None], Options, bool, MessageBuilder, Context],None]"
options,Options
is_typeshed_stub,bool
msg,MessageBuilder
context,Context
has_explicit_any,"Callable[[Type],bool]"
t,Type
__init__,"Callable[[_],None]"
visit_any,"Callable[[_, AnyType],bool]"
t,AnyType
visit_typeddict_type,"Callable[[_, TypedDictType],bool]"
t,TypedDictType
has_any_from_unimported_type,"Callable[[Type],bool]"
t,Type
__init__,"Callable[[_],None]"
visit_any,"Callable[[_, AnyType],bool]"
t,AnyType
visit_typeddict_type,"Callable[[_, TypedDictType],bool]"
t,TypedDictType
collect_any_types,"Callable[[Type],List[AnyType]]"
t,Type
__init__,"Callable[[_],None]"
visit_any,"Callable[[_, AnyType],List[AnyType]]"
t,AnyType
combine_lists_strategy,"Callable[[_, Iterable[List[AnyType]]],List[AnyType]]"
it,Iterable[List[AnyType]]
collect_all_inner_types,"Callable[[Type],List[Type]]"
t,Type
__init__,"Callable[[_],None]"
combine_lists_strategy,"Callable[[_, Iterable[List[Type]]],List[Type]]"
it,Iterable[List[Type]]
make_optional_type,"Callable[[Type],Type]"
t,Type
FORMAT_RE,Final
__init__,"Callable[[_, Union[str, None], str, str, str, str],None]"
flags,str
width,str
precision,str
type,str
has_key,"Callable[[_],bool]"
has_star,"Callable[[_],bool]"
chk,mypy.checker.TypeChecker
msg,MessageBuilder
exprchk,mypy.checkexpr.ExpressionChecker
__init__,"Callable[[_, mypy.checkexpr.ExpressionChecker, mypy.checker.TypeChecker, MessageBuilder],None]"
exprchk,mypy.checkexpr.ExpressionChecker
chk,mypy.checker.TypeChecker
msg,MessageBuilder
check_str_interpolation,"Callable[[_, FormatStringExpr, Expression],Type]"
expr,FormatStringExpr
replacements,Expression
parse_conversion_specifiers,"Callable[[_, str],List[ConversionSpecifier]]"
format,str
analyze_conversion_specifiers,"Callable[[_, List[ConversionSpecifier], Context],Union[bool, None]]"
context,Context
check_simple_str_interpolation,"Callable[[_, List[ConversionSpecifier], Expression, FormatStringExpr],None]"
replacements,Expression
expr,FormatStringExpr
check_mapping_str_interpolation,"Callable[[_, List[ConversionSpecifier], Expression, FormatStringExpr],None]"
replacements,Expression
expr,FormatStringExpr
build_replacement_checkers,"Callable[[_, List[ConversionSpecifier], Context, FormatStringExpr],Union[List[Checkers], None]]"
context,Context
expr,FormatStringExpr
replacement_checkers,"Callable[[_, ConversionSpecifier, Context, FormatStringExpr],Union[List[Checkers], None]]"
specifier,ConversionSpecifier
context,Context
expr,FormatStringExpr
checkers_for_star,"Callable[[_, Context],Checkers]"
context,Context
check_type,"Callable[[Type],None]"
type,Type
check_expr,"Callable[[Expression],None]"
expr,Expression
checkers_for_regular_type,"Callable[[_, str, Context, FormatStringExpr],Union[Checkers, None]]"
type,str
context,Context
expr,FormatStringExpr
check_type,"Callable[[Type],None]"
type,Type
check_expr,"Callable[[Expression],None]"
expr,Expression
checkers_for_c_type,"Callable[[_, str, Context, FormatStringExpr],Union[Checkers, None]]"
type,str
context,Context
expr,FormatStringExpr
check_type,"Callable[[Type],None]"
type,Type
check_expr,"Callable[[Expression],None]"
expr,Expression
conversion_type,"Callable[[_, str, Context, FormatStringExpr],Union[Type, None]]"
p,str
context,Context
expr,FormatStringExpr
named_type,"Callable[[_, str],Instance]"
name,str
accept,"Callable[[_, Expression, Union[Type, None]],Type]"
expr,Expression
MISSING_FALLBACK,Final
_dummy_fallback,Final
TYPE_COMMENT_SYNTAX_ERROR,Final
TYPE_COMMENT_AST_ERROR,Final
_overload,"Callable[[Any],Any]"
x,Any
parse,"Callable[[Union[str, bytes], str, Union[str, None], Union[Errors, None], Union[Options, None]],MypyFile]"
fnam,str
parse_type_comment,"Callable[[str, int, Union[Errors, None]],Union[Type, None]]"
type_comment,str
line,int
is_no_type_check_decorator,"Callable[[ast3.expr],bool]"
__init__,"Callable[[_, Options, bool, Errors],None]"
options,Options
is_stub,bool
errors,Errors
self.visitor_cache,"Dict[type, Callable[[Union[AST, None]],Any]]"
note,"Callable[[_, str, int, int],None]"
msg,str
line,int
column,int
fail,"Callable[[_, str, int, int],None]"
msg,str
line,int
column,int
visit,"Callable[[_, Union[AST, None]],Any]"
set_line,"Callable[[_, N, Union[ast3.expr, ast3.stmt]],N]"
node,N
n,"Union[ast3.expr, ast3.stmt]"
op_map,"Final[Dict[typing.Type[AST], str]]"
from_operator,"Callable[[_, ast3.operator],str]"
comp_op_map,"Final[Dict[typing.Type[AST], str]]"
from_comp_operator,"Callable[[_, ast3.cmpop],str]"
as_block,"Callable[[_, List[ast3.stmt], int],Union[Block, None]]"
stmts,List[ast3.stmt]
lineno,int
as_required_block,"Callable[[_, List[ast3.stmt], int],Block]"
stmts,List[ast3.stmt]
lineno,int
in_class,"Callable[[_],bool]"
translate_module_id,"Callable[[_, str],str]"
id,str
visit_Module,"Callable[[_, ast3.Module],MypyFile]"
do_func_def,"Callable[[_, Union[ast3.FunctionDef, ast3.AsyncFunctionDef], bool],Union[FuncDef, Decorator]]"
n,"Union[ast3.FunctionDef, ast3.AsyncFunctionDef]"
is_coroutine,bool
arg_names,"List[Union[str, None]]"
arg_types,"List[Union[Type, None]]"
set_type_optional,"Callable[[_, Union[Type, None], Union[Expression, None]],None]"
transform_args,"Callable[[_, ast3.arguments, int, bool],List[Argument]]"
line,int
no_type_check,bool
names,List[ast3.arg]
make_argument,"Callable[[_, ast3.arg, Union[ast3.expr, None], int, bool],Argument]"
default,"Union[ast3.expr, None]"
kind,int
no_type_check,bool
fail_arg,"Callable[[_, str, ast3.arg],None]"
msg,str
visit_ClassDef,"Callable[[_, ast3.ClassDef],ClassDef]"
visit_Return,"Callable[[_, ast3.Return],ReturnStmt]"
visit_Delete,"Callable[[_, ast3.Delete],DelStmt]"
visit_Assign,"Callable[[_, ast3.Assign],AssignmentStmt]"
visit_AnnAssign,"Callable[[_, ast3.AnnAssign],AssignmentStmt]"
rvalue,Expression
visit_AugAssign,"Callable[[_, ast3.AugAssign],OperatorAssignmentStmt]"
visit_For,"Callable[[_, ast3.For],ForStmt]"
visit_AsyncFor,"Callable[[_, ast3.AsyncFor],ForStmt]"
visit_While,"Callable[[_, ast3.While],WhileStmt]"
visit_If,"Callable[[_, ast3.If],IfStmt]"
visit_With,"Callable[[_, ast3.With],WithStmt]"
visit_AsyncWith,"Callable[[_, ast3.AsyncWith],WithStmt]"
visit_Raise,"Callable[[_, ast3.Raise],RaiseStmt]"
visit_Try,"Callable[[_, ast3.Try],TryStmt]"
visit_Assert,"Callable[[_, ast3.Assert],AssertStmt]"
visit_Import,"Callable[[_, ast3.Import],Import]"
names,"List[Tuple[str, Union[str, None]]]"
visit_ImportFrom,"Callable[[_, ast3.ImportFrom],ImportBase]"
i,ImportBase
visit_Global,"Callable[[_, ast3.Global],GlobalDecl]"
visit_Nonlocal,"Callable[[_, ast3.Nonlocal],NonlocalDecl]"
visit_Expr,"Callable[[_, ast3.Expr],ExpressionStmt]"
visit_Pass,"Callable[[_, ast3.Pass],PassStmt]"
visit_Break,"Callable[[_, ast3.Break],BreakStmt]"
visit_Continue,"Callable[[_, ast3.Continue],ContinueStmt]"
visit_BoolOp,"Callable[[_, ast3.BoolOp],OpExpr]"
group,"Callable[[_, str, List[Expression], ast3.expr],OpExpr]"
op,str
visit_BinOp,"Callable[[_, ast3.BinOp],OpExpr]"
visit_UnaryOp,"Callable[[_, ast3.UnaryOp],UnaryExpr]"
visit_Lambda,"Callable[[_, ast3.Lambda],LambdaExpr]"
visit_IfExp,"Callable[[_, ast3.IfExp],ConditionalExpr]"
visit_Dict,"Callable[[_, ast3.Dict],DictExpr]"
visit_Set,"Callable[[_, ast3.Set],SetExpr]"
visit_ListComp,"Callable[[_, ast3.ListComp],ListComprehension]"
visit_SetComp,"Callable[[_, ast3.SetComp],SetComprehension]"
visit_DictComp,"Callable[[_, ast3.DictComp],DictionaryComprehension]"
visit_GeneratorExp,"Callable[[_, ast3.GeneratorExp],GeneratorExpr]"
visit_Await,"Callable[[_, ast3.Await],AwaitExpr]"
visit_Yield,"Callable[[_, ast3.Yield],YieldExpr]"
visit_YieldFrom,"Callable[[_, ast3.YieldFrom],YieldFromExpr]"
visit_Compare,"Callable[[_, ast3.Compare],ComparisonExpr]"
visit_Call,"Callable[[_, Call],CallExpr]"
n,Call
visit_Str,"Callable[[_, Str],Union[UnicodeExpr, StrExpr]]"
n,Str
visit_JoinedStr,"Callable[[_, ast3.JoinedStr],Expression]"
visit_FormattedValue,"Callable[[_, ast3.FormattedValue],Expression]"
visit_NameConstant,"Callable[[_, NameConstant],NameExpr]"
n,NameConstant
visit_Ellipsis,"Callable[[_, ast3_Ellipsis],EllipsisExpr]"
n,ast3_Ellipsis
visit_Attribute,"Callable[[_, Attribute],Union[MemberExpr, SuperExpr]]"
n,Attribute
visit_Subscript,"Callable[[_, ast3.Subscript],IndexExpr]"
visit_Starred,"Callable[[_, Starred],StarExpr]"
n,Starred
visit_Name,"Callable[[_, Name],NameExpr]"
n,Name
visit_Tuple,"Callable[[_, ast3.Tuple],TupleExpr]"
visit_Slice,"Callable[[_, ast3.Slice],SliceExpr]"
visit_ExtSlice,"Callable[[_, ast3.ExtSlice],TupleExpr]"
visit_Index,"Callable[[_, Index],Node]"
n,Index
__init__,"Callable[[_, Union[Errors, None], int],None]"
line,int
visit,"Callable[[_, ast3.expr],Type]"
fail,"Callable[[_, str, int, int],None]"
msg,str
line,int
column,int
note,"Callable[[_, str, int, int],None]"
msg,str
line,int
column,int
translate_expr_list,"Callable[[_, Sequence[ast3.expr]],List[Type]]"
l,Sequence[ast3.expr]
visit_raw_str,"Callable[[_, str],Type]"
s,str
visit_Call,"Callable[[_, Call],Type]"
e,Call
typ,Type
translate_argument_list,"Callable[[_, Sequence[ast3.expr]],TypeList]"
l,Sequence[ast3.expr]
visit_Name,"Callable[[_, Name],Type]"
n,Name
visit_NameConstant,"Callable[[_, NameConstant],Type]"
n,NameConstant
visit_Str,"Callable[[_, Str],Type]"
n,Str
visit_Subscript,"Callable[[_, ast3.Subscript],Type]"
visit_Tuple,"Callable[[_, ast3.Tuple],Type]"
visit_Attribute,"Callable[[_, Attribute],Type]"
n,Attribute
visit_Ellipsis,"Callable[[_, ast3_Ellipsis],Type]"
n,ast3_Ellipsis
visit_List,"Callable[[_, ast3.List],Type]"
stringify_name,"Callable[[AST],Union[str, None]]"
n,AST
solve_constraints,"Callable[[List[TypeVarId], List[Constraint], bool],List[Union[Type, None]]]"
strict,bool
cmap,"Dict[TypeVarId, List[Constraint]]"
res,"List[Union[Type, None]]"
PRIORITY_FORWARD_REF,Final
PRIORITY_FALLBACKS,Final
PRIORITY_TYPEVAR_VALUES,Final
lookup_qualified,"Callable[[_, str, Context, bool],Union[SymbolTableNode, None]]"
name,str
ctx,Context
suppress_errors,bool
lookup_fully_qualified,"Callable[[_, str],SymbolTableNode]"
name,str
fail,"Callable[[_, str, Context, bool],None]"
msg,str
ctx,Context
serious,bool
blocker,bool
note,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
lookup,"Callable[[_, str, Context, bool],Union[SymbolTableNode, None]]"
name,str
ctx,Context
suppress_errors,bool
named_type,"Callable[[_, str, Union[List[Type], None]],Instance]"
qualified_name,str
args,"Union[List[Type], None]"
named_type_or_none,"Callable[[_, str, Union[List[Type], None]],Union[Instance, None]]"
qualified_name,str
args,"Union[List[Type], None]"
accept,"Callable[[_, Node],None]"
node,Node
anal_type,"Callable[[_, Type],Type]"
t,Type
allow_tuple_literal,bool
allow_unbound_tvars,bool
third_pass,bool
basic_new_typeinfo,"Callable[[_, str, Instance],TypeInfo]"
name,str
basetype_or_fallback,Instance
schedule_patch,"Callable[[_, int, Callable[[],None]],None]"
priority,int
fn,"Callable[[],None]"
add_symbol_table_node,"Callable[[_, str, SymbolTableNode],None]"
name,str
stnode,SymbolTableNode
parse_bool,"Callable[[_, Expression],Union[bool, None]]"
expr,Expression
qualified_name,"Callable[[_, str],str]"
n,str
is_typeshed_stub_file,"Callable[[_],bool]"
create_indirect_imported_name,"Callable[[MypyFile, str, int, str],Union[SymbolTableNode, None]]"
file_node,MypyFile
module,str
relative,int
imported_name,str
set_callable_name,"Callable[[Type, FuncDef],Type]"
sig,Type
fdef,FuncDef
join_simple,"Callable[[Union[Type, None], Type, Type],Type]"
s,Type
t,Type
join_types,"Callable[[Type, Type],Type]"
s,Type
t,Type
__init__,"Callable[[_, Type],None]"
s,Type
visit_unbound_type,"Callable[[_, UnboundType],Type]"
t,UnboundType
visit_union_type,"Callable[[_, UnionType],Type]"
t,UnionType
visit_any,"Callable[[_, AnyType],Type]"
t,AnyType
visit_none_type,"Callable[[_, NoneTyp],Type]"
t,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],Type]"
t,UninhabitedType
visit_deleted_type,"Callable[[_, DeletedType],Type]"
t,DeletedType
visit_erased_type,"Callable[[_, ErasedType],Type]"
t,ErasedType
visit_type_var,"Callable[[_, TypeVarType],Type]"
t,TypeVarType
visit_instance,"Callable[[_, Instance],Type]"
t,Instance
visit_callable_type,"Callable[[_, CallableType],Type]"
t,CallableType
visit_overloaded,"Callable[[_, Overloaded],Type]"
t,Overloaded
visit_tuple_type,"Callable[[_, TupleType],Type]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],Type]"
t,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],Type]"
t,LiteralType
visit_partial_type,"Callable[[_, PartialType],Type]"
t,PartialType
visit_type_type,"Callable[[_, TypeType],Type]"
t,TypeType
join,"Callable[[_, Type, Type],Type]"
s,Type
t,Type
default,"Callable[[_, Type],Type]"
typ,Type
join_instances,"Callable[[Instance, Instance],Type]"
t,Instance
s,Instance
join_instances_via_supertype,"Callable[[Instance, Instance],Type]"
t,Instance
s,Instance
is_better,"Callable[[Type, Type],bool]"
t,Type
s,Type
is_similar_callables,"Callable[[CallableType, CallableType],bool]"
t,CallableType
s,CallableType
join_similar_callables,"Callable[[CallableType, CallableType],CallableType]"
t,CallableType
s,CallableType
combine_similar_callables,"Callable[[CallableType, CallableType],CallableType]"
t,CallableType
s,CallableType
combine_arg_names,"Callable[[CallableType, CallableType],List[Union[str, None]]]"
t,CallableType
s,CallableType
object_from_instance,"Callable[[Instance],Instance]"
instance,Instance
join_type_list,"Callable[[List[Type]],Type]"
unpack_callback_protocol,"Callable[[Instance],Union[Type, None]]"
t,Instance
NO_RETURN_VALUE_EXPECTED,Final
MISSING_RETURN_STATEMENT,Final
INVALID_IMPLICIT_RETURN,Final
INCOMPATIBLE_RETURN_VALUE_TYPE,Final
RETURN_VALUE_EXPECTED,Final
NO_RETURN_EXPECTED,Final
INVALID_EXCEPTION,Final
INVALID_EXCEPTION_TYPE,Final
INVALID_RETURN_TYPE_FOR_GENERATOR,Final
INVALID_RETURN_TYPE_FOR_ASYNC_GENERATOR,Final
INVALID_GENERATOR_RETURN_ITEM_TYPE,Final
YIELD_VALUE_EXPECTED,Final
INCOMPATIBLE_TYPES,Final
INCOMPATIBLE_TYPES_IN_ASSIGNMENT,Final
INCOMPATIBLE_REDEFINITION,Final
INCOMPATIBLE_TYPES_IN_AWAIT,Final
INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AENTER,Final
INCOMPATIBLE_TYPES_IN_ASYNC_WITH_AEXIT,Final
INCOMPATIBLE_TYPES_IN_ASYNC_FOR,Final
INCOMPATIBLE_TYPES_IN_YIELD,Final
INCOMPATIBLE_TYPES_IN_YIELD_FROM,Final
INCOMPATIBLE_TYPES_IN_STR_INTERPOLATION,Final
MUST_HAVE_NONE_RETURN_TYPE,Final
INVALID_TUPLE_INDEX_TYPE,Final
TUPLE_INDEX_OUT_OF_RANGE,Final
INVALID_SLICE_INDEX,Final
CANNOT_INFER_LAMBDA_TYPE,Final
CANNOT_INFER_ITEM_TYPE,Final
CANNOT_ACCESS_INIT,Final
CANNOT_ASSIGN_TO_METHOD,Final
CANNOT_ASSIGN_TO_TYPE,Final
INCONSISTENT_ABSTRACT_OVERLOAD,Final
READ_ONLY_PROPERTY_OVERRIDES_READ_WRITE,Final
FORMAT_REQUIRES_MAPPING,Final
RETURN_TYPE_CANNOT_BE_CONTRAVARIANT,Final
FUNCTION_PARAMETER_CANNOT_BE_COVARIANT,Final
INCOMPATIBLE_IMPORT_OF,Final
FUNCTION_TYPE_EXPECTED,Final
ONLY_CLASS_APPLICATION,Final
RETURN_TYPE_EXPECTED,Final
ARGUMENT_TYPE_EXPECTED,Final
KEYWORD_ARGUMENT_REQUIRES_STR_KEY_TYPE,Final
ALL_MUST_BE_SEQ_STR,Final
INVALID_TYPEDDICT_ARGS,Final
TYPEDDICT_KEY_MUST_BE_STRING_LITERAL,Final
MALFORMED_ASSERT,Final
DUPLICATE_TYPE_SIGNATURES,Final
GENERIC_INSTANCE_VAR_CLASS_ACCESS,Final
CANNOT_ISINSTANCE_TYPEDDICT,Final
CANNOT_ISINSTANCE_NEWTYPE,Final
BARE_GENERIC,Final
IMPLICIT_GENERIC_ANY_BUILTIN,Final
INCOMPATIBLE_TYPEVAR_VALUE,Final
UNSUPPORTED_ARGUMENT_2_FOR_SUPER,Final
ARG_CONSTRUCTOR_NAMES,Final
errors,Errors
__init__,"Callable[[_, Errors, Dict[str, MypyFile]],None]"
errors,Errors
copy,"Callable[[_],MessageBuilder]"
clean_copy,"Callable[[_],MessageBuilder]"
add_errors,"Callable[[_, MessageBuilder],None]"
messages,MessageBuilder
disable_errors,"Callable[[_],None]"
enable_errors,"Callable[[_],None]"
is_errors,"Callable[[_],bool]"
report,"Callable[[_, str, Union[Context, None], str, Union[str, None], Union[Context, None], int],None]"
msg,str
severity,str
offset,int
fail,"Callable[[_, str, Union[Context, None], Union[str, None], Union[Context, None]],None]"
msg,str
note,"Callable[[_, str, Context, Union[str, None], Union[Context, None], int],None]"
msg,str
context,Context
offset,int
warn,"Callable[[_, str, Context, Union[str, None], Union[Context, None]],None]"
msg,str
context,Context
quote_type_string,"Callable[[_, str],str]"
type_string,str
format,"Callable[[_, Type, int],str]"
typ,Type
verbosity,int
format_bare,"Callable[[_, Type, int],str]"
typ,Type
verbosity,int
format_distinctly,"Callable[[_, Type, Type, bool],Tuple[str, str]]"
type1,Type
type2,Type
bare,bool
has_no_attr,"Callable[[_, Type, Type, str, Context],Type]"
original_type,Type
typ,Type
member,str
context,Context
unsupported_operand_types,"Callable[[_, str, Any, Any, Context],None]"
op,str
left_type,Any
right_type,Any
context,Context
unsupported_left_operand,"Callable[[_, str, Type, Context],None]"
op,str
typ,Type
context,Context
not_callable,"Callable[[_, Type, Context],Type]"
typ,Type
context,Context
untyped_function_call,"Callable[[_, CallableType, Context],Type]"
callee,CallableType
context,Context
incompatible_argument,"Callable[[_, int, int, CallableType, Type, int, Context],None]"
n,int
m,int
callee,CallableType
arg_type,Type
arg_kind,int
context,Context
invalid_index_type,"Callable[[_, Type, Type, str, Context],None]"
index_type,Type
expected_type,Type
base_str,str
context,Context
too_few_arguments,"Callable[[_, CallableType, Context, Union[Sequence[Union[str, None]], None]],None]"
callee,CallableType
context,Context
argument_names,"Union[Sequence[Union[str, None]], None]"
missing_named_argument,"Callable[[_, CallableType, Context, str],None]"
callee,CallableType
context,Context
name,str
too_many_arguments,"Callable[[_, CallableType, Context],None]"
callee,CallableType
context,Context
too_many_positional_arguments,"Callable[[_, CallableType, Context],None]"
callee,CallableType
context,Context
unexpected_keyword_argument,"Callable[[_, CallableType, str, Context],None]"
callee,CallableType
name,str
context,Context
duplicate_argument_value,"Callable[[_, CallableType, int, Context],None]"
callee,CallableType
index,int
context,Context
does_not_return_value,"Callable[[_, Union[Type, None], Context],None]"
context,Context
deleted_as_rvalue,"Callable[[_, DeletedType, Context],None]"
typ,DeletedType
context,Context
deleted_as_lvalue,"Callable[[_, DeletedType, Context],None]"
typ,DeletedType
context,Context
no_variant_matches_arguments,"Callable[[_, List[CallableType], Overloaded, List[Type], Context],None]"
overload,Overloaded
context,Context
wrong_number_values_to_unpack,"Callable[[_, int, int, Context],None]"
provided,int
expected,int
context,Context
type_not_iterable,"Callable[[_, Type, Context],None]"
type,Type
context,Context
incompatible_operator_assignment,"Callable[[_, str, Context],None]"
op,str
context,Context
overload_signature_incompatible_with_supertype,"Callable[[_, str, str, str, Overloaded, Context],None]"
name,str
name_in_super,str
supertype,str
overload,Overloaded
context,Context
signature_incompatible_with_supertype,"Callable[[_, str, str, str, Context],None]"
name,str
name_in_super,str
supertype,str
context,Context
argument_incompatible_with_supertype,"Callable[[_, int, str, str, str, Context],None]"
arg_num,int
name,str
name_in_supertype,str
supertype,str
context,Context
return_type_incompatible_with_supertype,"Callable[[_, str, str, str, Context],None]"
name,str
name_in_supertype,str
supertype,str
context,Context
override_target,"Callable[[_, str, str, str],str]"
name,str
name_in_super,str
supertype,str
incompatible_type_application,"Callable[[_, int, int, Context],None]"
expected_arg_count,int
actual_arg_count,int
context,Context
alias_invalid_in_runtime_context,"Callable[[_, Type, Context],None]"
item,Type
ctx,Context
could_not_infer_type_arguments,"Callable[[_, CallableType, int, Context],None]"
callee_type,CallableType
n,int
context,Context
invalid_var_arg,"Callable[[_, Type, Context],None]"
typ,Type
context,Context
invalid_keyword_var_arg,"Callable[[_, Type, bool, Context],None]"
typ,Type
is_mapping,bool
context,Context
undefined_in_superclass,"Callable[[_, str, Context],None]"
member,str
context,Context
first_argument_for_super_must_be_type,"Callable[[_, Type, Context],None]"
actual,Type
context,Context
too_few_string_formatting_arguments,"Callable[[_, Context],None]"
context,Context
too_many_string_formatting_arguments,"Callable[[_, Context],None]"
context,Context
unsupported_placeholder,"Callable[[_, str, Context],None]"
placeholder,str
context,Context
string_interpolation_with_star_and_key,"Callable[[_, Context],None]"
context,Context
requires_int_or_char,"Callable[[_, Context],None]"
context,Context
key_not_in_mapping,"Callable[[_, str, Context],None]"
key,str
context,Context
string_interpolation_mixing_key_and_non_keys,"Callable[[_, Context],None]"
context,Context
cannot_determine_type,"Callable[[_, str, Context],None]"
name,str
context,Context
cannot_determine_type_in_base,"Callable[[_, str, str, Context],None]"
name,str
base,str
context,Context
no_formal_self,"Callable[[_, str, CallableType, Context],None]"
name,str
item,CallableType
context,Context
incompatible_self_argument,"Callable[[_, str, Type, CallableType, bool, Context],None]"
name,str
arg,Type
sig,CallableType
is_classmethod,bool
context,Context
incompatible_conditional_function_def,"Callable[[_, FuncDef],None]"
defn,FuncDef
cannot_instantiate_abstract_class,"Callable[[_, str, List[str], Context],None]"
class_name,str
context,Context
base_class_definitions_incompatible,"Callable[[_, str, TypeInfo, TypeInfo, Context],None]"
name,str
base1,TypeInfo
base2,TypeInfo
context,Context
cant_assign_to_method,"Callable[[_, Context],None]"
context,Context
cant_assign_to_classvar,"Callable[[_, str, Context],None]"
name,str
context,Context
final_cant_override_writable,"Callable[[_, str, Context],None]"
name,str
ctx,Context
cant_override_final,"Callable[[_, str, str, Context],None]"
name,str
base_name,str
ctx,Context
cant_assign_to_final,"Callable[[_, str, bool, Context],None]"
name,str
attr_assign,bool
ctx,Context
protocol_members_cant_be_final,"Callable[[_, Context],None]"
ctx,Context
final_without_value,"Callable[[_, Context],None]"
ctx,Context
read_only_property,"Callable[[_, str, TypeInfo, Context],None]"
name,str
type,TypeInfo
context,Context
incompatible_typevar_value,"Callable[[_, CallableType, Type, str, Context],None]"
callee,CallableType
typ,Type
typevar_name,str
context,Context
overload_inconsistently_applies_decorator,"Callable[[_, str, Context],None]"
decorator,str
context,Context
overloaded_signatures_overlap,"Callable[[_, int, int, Context],None]"
index1,int
index2,int
context,Context
overloaded_signatures_partial_overlap,"Callable[[_, int, int, Context],None]"
index1,int
index2,int
context,Context
overloaded_signature_will_never_match,"Callable[[_, int, int, Context],None]"
index1,int
index2,int
context,Context
overloaded_signatures_typevar_specific,"Callable[[_, int, Context],None]"
index,int
context,Context
overloaded_signatures_arg_specific,"Callable[[_, int, Context],None]"
index,int
context,Context
overloaded_signatures_ret_specific,"Callable[[_, int, Context],None]"
index,int
context,Context
warn_both_operands_are_from_unions,"Callable[[_, Context],None]"
context,Context
warn_operand_was_from_union,"Callable[[_, str, Type, Context],None]"
side,str
original,Type
context,Context
operator_method_signatures_overlap,"Callable[[_, TypeInfo, str, Type, str, Context],None]"
reverse_class,TypeInfo
reverse_method,str
forward_class,Type
forward_method,str
context,Context
forward_operator_not_callable,"Callable[[_, str, Context],None]"
forward_method,str
context,Context
signatures_incompatible,"Callable[[_, str, str, Context],None]"
method,str
other_method,str
context,Context
yield_from_invalid_operand_type,"Callable[[_, Type, Context],Type]"
expr,Type
context,Context
invalid_signature,"Callable[[_, Type, Context],None]"
func_type,Type
context,Context
invalid_signature_for_special_method,"Callable[[_, Type, Context, str],None]"
func_type,Type
context,Context
method_name,str
reveal_type,"Callable[[_, Type, Context],None]"
typ,Type
context,Context
reveal_locals,"Callable[[_, Dict[str, Union[Type, None]], Context],None]"
type_map,"Dict[str, Union[Type, None]]"
context,Context
unsupported_type_type,"Callable[[_, Type, Context],None]"
item,Type
context,Context
redundant_cast,"Callable[[_, Type, Context],None]"
typ,Type
context,Context
unimported_type_becomes_any,"Callable[[_, str, Type, Context],None]"
prefix,str
typ,Type
ctx,Context
need_annotation_for_var,"Callable[[_, SymbolNode, Context],None]"
node,SymbolNode
context,Context
explicit_any,"Callable[[_, Context],None]"
ctx,Context
unexpected_typeddict_keys,"Callable[[_, TypedDictType, List[str], List[str], Context],None]"
typ,TypedDictType
context,Context
typeddict_key_must_be_string_literal,"Callable[[_, TypedDictType, Context],None]"
typ,TypedDictType
context,Context
typeddict_key_not_found,"Callable[[_, TypedDictType, str, Context],None]"
typ,TypedDictType
item_name,str
context,Context
type_arguments_not_allowed,"Callable[[_, Context],None]"
context,Context
disallowed_any_type,"Callable[[_, Type, Context],None]"
typ,Type
context,Context
incorrectly_returning_any,"Callable[[_, Type, Context],None]"
typ,Type
context,Context
untyped_decorated_function,"Callable[[_, Type, Context],None]"
typ,Type
context,Context
typed_function_untyped_decorator,"Callable[[_, str, Context],None]"
func_name,str
context,Context
bad_proto_variance,"Callable[[_, int, str, int, Context],None]"
actual,int
tvar_name,str
expected,int
context,Context
concrete_only_assign,"Callable[[_, Type, Context],None]"
typ,Type
context,Context
concrete_only_call,"Callable[[_, Type, Context],None]"
typ,Type
context,Context
report_non_method_protocol,"Callable[[_, TypeInfo, List[str], Context],None]"
tp,TypeInfo
context,Context
note_call,"Callable[[_, Type, Type, Context],None]"
subtype,Type
call,Type
context,Context
report_protocol_problems,"Callable[[_, Union[Instance, TupleType, TypedDictType], Instance, Context],None]"
supertype,Instance
context,Context
exclusions,"Dict[type, List[str]]"
pretty_overload,"Callable[[_, Overloaded, Context, int, int],None]"
tp,Overloaded
context,Context
offset,int
max_items,int
pretty_overload_matches,"Callable[[_, List[CallableType], Overloaded, Context, int, int],None]"
func,Overloaded
context,Context
offset,int
max_items,int
print_more,"Callable[[_, Sequence[Any], Context, int, int],None]"
context,Context
offset,int
max_items,int
pretty_callable,"Callable[[_, CallableType],str]"
tp,CallableType
variance_string,"Callable[[int],str]"
variance,int
get_missing_protocol_members,"Callable[[Instance, Instance],List[str]]"
left,Instance
right,Instance
get_conflict_protocol_types,"Callable[[Instance, Instance],List[Tuple[str, Type, Type]]]"
left,Instance
right,Instance
conflicts,"List[Tuple[str, Type, Type]]"
get_bad_protocol_flags,"Callable[[Instance, Instance],List[Tuple[str, Set[int], Set[int]]]]"
left,Instance
right,Instance
all_flags,"List[Tuple[str, Set[int], Set[int]]]"
capitalize,"Callable[[str],str]"
s,str
extract_type,"Callable[[str],str]"
name,str
strip_quotes,"Callable[[str],str]"
s,str
plural_s,"Callable[[Union[int, Sequence[Any]]],str]"
s,"Union[int, Sequence[Any]]"
format_string_list,"Callable[[Iterable[str]],str]"
format_item_name_list,"Callable[[Iterable[str]],str]"
callable_name,"Callable[[FunctionLike],Union[str, None]]"
type,FunctionLike
for_function,"Callable[[CallableType],str]"
callee,CallableType
find_defining_module,"Callable[[Dict[str, MypyFile], CallableType],Union[MypyFile, None]]"
typ,CallableType
temp_message_builder,"Callable[[],MessageBuilder]"
COMMON_MISTAKES,"Final[Dict[str, Sequence[str]]]"
best_matches,"Callable[[str, Iterable[str]],List[str]]"
current,str
pretty_or,"Callable[[List[str]],str]"
append_invariance_notes,"Callable[[List[str], Instance, Instance],List[str]]"
arg_type,Instance
expected_type,Instance
make_inferred_type_note,"Callable[[Context, Type, Type, str],str]"
context,Context
subtype,Type
supertype,Type
supertype_str,str
format_key_list,"Callable[[List[str]],str]"
short,bool
fill_typevars,"Callable[[TypeInfo],Union[Instance, TupleType]]"
typ,TypeInfo
has_no_typevars,"Callable[[Type],bool]"
typ,Type
proto_deps,"ClassVar[Union[Dict[str, Set[str]], None]]"
_attempted_protocols,"Final[Dict[str, Set[str]]]"
_checked_against_members,"Final[Dict[str, Set[str]]]"
_rechecked_types,Final[Set[TypeInfo]]
reset_all_subtype_caches,"Callable[[],None]"
reset_subtype_caches_for,"Callable[[TypeInfo],None]"
info,TypeInfo
reset_all_subtype_caches_for,"Callable[[TypeInfo],None]"
info,TypeInfo
is_cached_subtype_check,"Callable[[SubtypeKind, Instance, Instance],bool]"
kind,SubtypeKind
left,Instance
right,Instance
record_subtype_cache_entry,"Callable[[SubtypeKind, Instance, Instance],None]"
kind,SubtypeKind
left,Instance
right,Instance
reset_protocol_deps,"Callable[[],None]"
record_protocol_subtype_check,"Callable[[TypeInfo, TypeInfo],None]"
left_type,TypeInfo
right_type,TypeInfo
_snapshot_protocol_deps,"Callable[[],Dict[str, Set[str]]]"
deps,"Dict[str, Set[str]]"
update_protocol_deps,"Callable[[Union[Dict[str, Set[str]], None]],None]"
second_map,"Union[Dict[str, Set[str]], None]"
add_all_protocol_deps,"Callable[[Dict[str, Set[str]]],None]"
deps,"Dict[str, Set[str]]"
reset_global_state,"Callable[[],None]"
__enter__,"Callable[[_],GcLogger]"
gc_callback,"Callable[[_, str, Mapping[str, int]],None]"
phase,str
__exit__,"Callable[[_],None]"
args,object
__init__,"Callable[[_, Options, SemanticAnalyzerInterface],None]"
options,Options
api,SemanticAnalyzerInterface
process_enum_call,"Callable[[_, AssignmentStmt, bool],None]"
s,AssignmentStmt
is_func_scope,bool
check_enum_call,"Callable[[_, Expression, str, bool],Union[TypeInfo, None]]"
node,Expression
var_name,str
is_func_scope,bool
build_enum_call_typeinfo,"Callable[[_, str, List[str], str],TypeInfo]"
name,str
fullname,str
parse_enum_call_args,"Callable[[_, CallExpr, str],Tuple[List[str], List[Union[Expression, None]], bool]]"
call,CallExpr
class_name,str
values,"List[Union[Expression, None]]"
fail_enum_call_arg,"Callable[[_, str, Context],Tuple[List[str], List[Union[Expression, None]], bool]]"
message,str
context,Context
fail,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
self.options_on_return,List[List[Frame]]
self.declarations,"Dict[Key, Union[Type, None]]"
self.dependencies,"Dict[Key, Set[Key]]"
_add_dependencies,"Callable[[_, Key, Union[Key, None]],None]"
key,Key
push_frame,"Callable[[_],Frame]"
_put,"Callable[[_, Key, Type, int],None]"
key,Key
type,Type
index,int
_get,"Callable[[_, Key, int],Union[Type, None]]"
key,Key
index,int
put,"Callable[[_, Expression, Type],None]"
expr,Expression
typ,Type
unreachable,"Callable[[_],None]"
get,"Callable[[_, Expression],Union[Type, None]]"
expr,Expression
is_unreachable,"Callable[[_],bool]"
cleanse,"Callable[[_, Expression],None]"
expr,Expression
_cleanse_key,"Callable[[_, Key],None]"
key,Key
update_from_options,"Callable[[_, List[Frame]],bool]"
pop_frame,"Callable[[_, bool, int],Frame]"
can_skip,bool
fall_through,int
assign_type,"Callable[[_, Expression, Type, Union[Type, None], bool],None]"
expr,Expression
type,Type
restrict_any,bool
invalidate_dependencies,"Callable[[_, BindableExpression],None]"
expr,BindableExpression
most_recent_enclosing_type,"Callable[[_, BindableExpression, Type],Union[Type, None]]"
expr,BindableExpression
type,Type
allow_jump,"Callable[[_, int],None]"
index,int
handle_break,"Callable[[_],None]"
handle_continue,"Callable[[_],None]"
can_skip,bool
fall_through,int
break_frame,int
continue_frame,int
try_frame,bool
get_declaration,"Callable[[BindableExpression],Union[Type, None]]"
expr,BindableExpression
console_entry,"Callable[[],None]"
parse_signature,"Callable[[str],Union[Tuple[str, List[str], List[str]], None]]"
sig,str
build_signature,"Callable[[Sequence[str], Sequence[str]],str]"
parse_all_signatures,"Callable[[Sequence[str]],Tuple[List[Sig], List[Sig]]]"
sig_map,"MutableMapping[str, List[str]]"
is_c_module,"Callable[[ModuleType],bool]"
module,ModuleType
write_header,"Callable[[IO[str], Union[str, None], Tuple[int, int]],None]"
infer_sig_from_docstring,"Callable[[str, str],Union[Tuple[str, str], None]]"
docstr,str
name,str
infer_prop_type_from_docstring,"Callable[[str],Union[str, None]]"
docstr,str
fixup_module,"Callable[[MypyFile, Dict[str, MypyFile], bool],None]"
tree,MypyFile
quick_and_dirty,bool
__init__,"Callable[[_, Dict[str, MypyFile], bool],None]"
quick_and_dirty,bool
visit_type_info,"Callable[[_, TypeInfo],None]"
info,TypeInfo
visit_symbol_table,"Callable[[_, SymbolTable],None]"
symtab,SymbolTable
visit_func_def,"Callable[[_, FuncDef],None]"
func,FuncDef
visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
o,OverloadedFuncDef
visit_decorator,"Callable[[_, Decorator],None]"
d,Decorator
visit_class_def,"Callable[[_, ClassDef],None]"
c,ClassDef
visit_type_var_expr,"Callable[[_, TypeVarExpr],None]"
tv,TypeVarExpr
visit_var,"Callable[[_, Var],None]"
v,Var
visit_type_alias,"Callable[[_, TypeAlias],None]"
a,TypeAlias
__init__,"Callable[[_, Dict[str, MypyFile], bool],None]"
quick_and_dirty,bool
visit_instance,"Callable[[_, Instance],None]"
inst,Instance
visit_any,"Callable[[_, Any],None]"
o,Any
visit_callable_type,"Callable[[_, CallableType],None]"
ct,CallableType
visit_overloaded,"Callable[[_, Overloaded],None]"
t,Overloaded
visit_deleted_type,"Callable[[_, Any],None]"
o,Any
visit_none_type,"Callable[[_, Any],None]"
o,Any
visit_uninhabited_type,"Callable[[_, Any],None]"
o,Any
visit_partial_type,"Callable[[_, Any],None]"
o,Any
visit_tuple_type,"Callable[[_, TupleType],None]"
tt,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],None]"
tdt,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],None]"
lt,LiteralType
visit_type_var,"Callable[[_, TypeVarType],None]"
tvt,TypeVarType
visit_unbound_type,"Callable[[_, UnboundType],None]"
o,UnboundType
visit_union_type,"Callable[[_, UnionType],None]"
ut,UnionType
visit_void,"Callable[[_, Any],None]"
o,Any
visit_type_type,"Callable[[_, TypeType],None]"
t,TypeType
lookup_qualified_typeinfo,"Callable[[Dict[str, MypyFile], str, bool],TypeInfo]"
name,str
quick_and_dirty,bool
lookup_qualified,"Callable[[Dict[str, MypyFile], str, bool],Union[SymbolNode, None]]"
name,str
quick_and_dirty,bool
lookup_qualified_stnode,"Callable[[Dict[str, MypyFile], str, bool],Union[SymbolTableNode, None]]"
name,str
quick_and_dirty,bool
stale_info,"Callable[[Dict[str, MypyFile]],TypeInfo]"
options,Options
fail,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
named_type,"Callable[[_, str, List[Type]],Instance]"
name,str
analyze_type,"Callable[[_, Type],Type]"
typ,Type
analyze_callable_args,"Callable[[_, TypeList],Union[Tuple[List[Type], List[int], List[Union[str, None]]], None]]"
arglist,TypeList
msg,MessageBuilder
options,Options
named_generic_type,"Callable[[_, str, List[Type]],Instance]"
name,str
options,Options
cur_mod_id,str
msg,MessageBuilder
named_type,"Callable[[_, str, Union[List[Type], None]],Instance]"
qualified_name,str
args,"Union[List[Type], None]"
parse_bool,"Callable[[_, Expression],Union[bool, None]]"
expr,Expression
fail,"Callable[[_, str, Context, bool],None]"
msg,str
ctx,Context
serious,bool
blocker,bool
anal_type,"Callable[[_, Type],Type]"
t,Type
allow_tuple_literal,bool
allow_unbound_tvars,bool
third_pass,bool
class_type,"Callable[[_, Type],Type]"
self_type,Type
builtin_type,"Callable[[_, str],Instance]"
fully_qualified_name,str
lookup_fully_qualified,"Callable[[_, str],SymbolTableNode]"
name,str
lookup_fully_qualified_or_none,"Callable[[_, str],Union[SymbolTableNode, None]]"
name,str
lookup_qualified,"Callable[[_, str, Context, bool],Union[SymbolTableNode, None]]"
name,str
ctx,Context
suppress_errors,bool
add_plugin_dependency,"Callable[[_, str, Union[str, None]],None]"
trigger,str
add_symbol_table_node,"Callable[[_, str, SymbolTableNode],None]"
name,str
stnode,SymbolTableNode
qualified_name,"Callable[[_, str],str]"
n,str
__init__,"Callable[[_, Options],None]"
options,Options
get_type_analyze_hook,"Callable[[_, str],Union[Callable[[AnalyzeTypeContext],Type], None]]"
fullname,str
get_function_hook,"Callable[[_, str],Union[Callable[[FunctionContext],Type], None]]"
fullname,str
get_method_signature_hook,"Callable[[_, str],Union[Callable[[MethodSigContext],CallableType], None]]"
fullname,str
get_method_hook,"Callable[[_, str],Union[Callable[[MethodContext],Type], None]]"
fullname,str
get_attribute_hook,"Callable[[_, str],Union[Callable[[AttributeContext],Type], None]]"
fullname,str
get_class_decorator_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_metaclass_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_base_class_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_customize_class_mro_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_dynamic_class_hook,"Callable[[_, str],Union[Callable[[DynamicClassDefContext],None], None]]"
fullname,str
__init__,"Callable[[_, mypy.interpreted_plugin.InterpretedPlugin],None]"
plugin,mypy.interpreted_plugin.InterpretedPlugin
get_type_analyze_hook,"Callable[[_, str],Union[Callable[[AnalyzeTypeContext],Type], None]]"
fullname,str
get_function_hook,"Callable[[_, str],Union[Callable[[FunctionContext],Type], None]]"
fullname,str
get_method_signature_hook,"Callable[[_, str],Union[Callable[[MethodSigContext],CallableType], None]]"
fullname,str
get_method_hook,"Callable[[_, str],Union[Callable[[MethodContext],Type], None]]"
fullname,str
get_attribute_hook,"Callable[[_, str],Union[Callable[[AttributeContext],Type], None]]"
fullname,str
get_class_decorator_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_metaclass_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_base_class_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_customize_class_mro_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_dynamic_class_hook,"Callable[[_, str],Union[Callable[[DynamicClassDefContext],None], None]]"
fullname,str
__init__,"Callable[[_, Options, List[Plugin]],None]"
options,Options
get_type_analyze_hook,"Callable[[_, str],Union[Callable[[AnalyzeTypeContext],Type], None]]"
fullname,str
get_function_hook,"Callable[[_, str],Union[Callable[[FunctionContext],Type], None]]"
fullname,str
get_method_signature_hook,"Callable[[_, str],Union[Callable[[MethodSigContext],CallableType], None]]"
fullname,str
get_method_hook,"Callable[[_, str],Union[Callable[[MethodContext],Type], None]]"
fullname,str
get_attribute_hook,"Callable[[_, str],Union[Callable[[AttributeContext],Type], None]]"
fullname,str
get_class_decorator_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_metaclass_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_base_class_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_customize_class_mro_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
get_dynamic_class_hook,"Callable[[_, str],Union[Callable[[DynamicClassDefContext],None], None]]"
fullname,str
_find_hook,"Callable[[_, Callable[[Plugin],T]],Union[T, None]]"
lookup,"Callable[[Plugin],T]"
get_function_hook,"Callable[[_, str],Union[Callable[[FunctionContext],Type], None]]"
fullname,str
get_method_signature_hook,"Callable[[_, str],Union[Callable[[MethodSigContext],CallableType], None]]"
fullname,str
get_method_hook,"Callable[[_, str],Union[Callable[[MethodContext],Type], None]]"
fullname,str
get_attribute_hook,"Callable[[_, str],Union[Callable[[AttributeContext],Type], None]]"
fullname,str
get_class_decorator_hook,"Callable[[_, str],Union[Callable[[ClassDefContext],None], None]]"
fullname,str
open_callback,"Callable[[FunctionContext],Type]"
ctx,FunctionContext
contextmanager_callback,"Callable[[FunctionContext],Type]"
ctx,FunctionContext
typed_dict_get_signature_callback,"Callable[[MethodSigContext],CallableType]"
ctx,MethodSigContext
typed_dict_get_callback,"Callable[[MethodContext],Type]"
ctx,MethodContext
int_pow_callback,"Callable[[MethodContext],Type]"
ctx,MethodContext
__init__,"Callable[[_],None]"
current_module_id,"Callable[[_],str]"
current_target,"Callable[[_],str]"
current_full_target,"Callable[[_],str]"
enter_file,"Callable[[_, str],None]"
prefix,str
enter_function,"Callable[[_, FuncBase],None]"
fdef,FuncBase
enter_class,"Callable[[_, TypeInfo],None]"
info,TypeInfo
leave,"Callable[[_],None]"
save,"Callable[[_],SavedScope]"
function_scope,"Callable[[_, FuncBase],Iterator[None]]"
fdef,FuncBase
class_scope,"Callable[[_, TypeInfo],Iterator[None]]"
info,TypeInfo
saved_scope,"Callable[[_, SavedScope],Iterator[None]]"
saved,SavedScope
DisconnectNamedPipe,"Callable[[_IPCHandle],int]"
FlushFileBuffers,"Callable[[_IPCHandle],int]"
connection,_IPCHandle
__init__,"Callable[[_, str],None]"
name,str
read,"Callable[[_],bytes]"
write,"Callable[[_, bytes],None]"
data,bytes
close,"Callable[[_],None]"
__init__,"Callable[[_, str, Union[int, None]],None]"
name,str
__enter__,"Callable[[_],IPCClient]"
__exit__,"Callable[[_, Union[Type[BaseException], None], Union[BaseException, None], Union[TracebackType, None]],bool]"
exc_ty,"Union[Type[BaseException], None]"
__init__,"Callable[[_, str, Union[int, None]],None]"
name,str
__enter__,"Callable[[_],IPCServer]"
__exit__,"Callable[[_, Union[Type[BaseException], None], Union[BaseException, None], Union[TracebackType, None]],bool]"
exc_ty,"Union[Type[BaseException], None]"
cleanup,"Callable[[_],None]"
connection_name,"Callable[[_],str]"
MAX_UNIONS,Final
extract_refexpr_names,"Callable[[RefExpr],Set[str]]"
expr,RefExpr
chk,mypy.checker.TypeChecker
msg,MessageBuilder
type_context,"List[Union[Type, None]]"
strfrm_checker,StringFormatterChecker
plugin,Plugin
__init__,"Callable[[_, mypy.checker.TypeChecker, MessageBuilder, Plugin],None]"
chk,mypy.checker.TypeChecker
msg,MessageBuilder
plugin,Plugin
visit_name_expr,"Callable[[_, NameExpr],Type]"
e,NameExpr
analyze_ref_expr,"Callable[[_, RefExpr, bool],Type]"
e,RefExpr
lvalue,bool
analyze_var_ref,"Callable[[_, Var, Context],Type]"
var,Var
context,Context
visit_call_expr,"Callable[[_, CallExpr, bool],Type]"
e,CallExpr
allow_none_return,bool
visit_call_expr_inner,"Callable[[_, CallExpr, bool],Type]"
e,CallExpr
allow_none_return,bool
method_fullname,"Callable[[_, Type, str],Union[str, None]]"
object_type,Type
method_name,str
always_returns_none,"Callable[[_, Expression],bool]"
node,Expression
defn_returns_none,"Callable[[_, Union[SymbolNode, None]],bool]"
check_runtime_protocol_test,"Callable[[_, CallExpr],None]"
e,CallExpr
check_protocol_issubclass,"Callable[[_, CallExpr],None]"
e,CallExpr
check_typeddict_call,"Callable[[_, TypedDictType, List[int], Sequence[Union[str, None]], List[Expression], Context],Type]"
callee,TypedDictType
arg_names,"Sequence[Union[str, None]]"
context,Context
check_typeddict_call_with_dict,"Callable[[_, TypedDictType, DictExpr, Context],Type]"
callee,TypedDictType
kwargs,DictExpr
context,Context
check_typeddict_call_with_kwargs,"Callable[[_, TypedDictType, OrderedDict[str, Expression], Context],Type]"
callee,TypedDictType
context,Context
item_args,"ClassVar[Dict[str, List[str]]]"
container_args,"ClassVar[Dict[str, Dict[str, List[str]]]]"
try_infer_partial_type,"Callable[[_, CallExpr],None]"
e,CallExpr
apply_function_plugin,"Callable[[_, List[Type], Type, List[int], List[List[int]], List[Expression], int, str, Union[Type, None], Context],Type]"
inferred_ret_type,Type
formal_to_actual,List[List[int]]
num_formals,int
fullname,str
context,Context
formal_arg_types,List[List[Type]]
formal_arg_exprs,List[List[Expression]]
apply_method_signature_hook,"Callable[[_, FunctionLike, List[Expression], List[int], Context, Union[Sequence[Union[str, None]], None], Type, Callable[[MethodSigContext],CallableType]],FunctionLike]"
callee,FunctionLike
context,Context
arg_names,"Union[Sequence[Union[str, None]], None]"
object_type,Type
signature_hook,"Callable[[MethodSigContext],CallableType]"
formal_arg_exprs,List[List[Expression]]
transform_callee_type,"Callable[[_, Union[str, None], Type, List[Expression], List[int], Context, Union[Sequence[Union[str, None]], None], Union[Type, None]],Type]"
callee,Type
context,Context
arg_names,"Union[Sequence[Union[str, None]], None]"
check_call_expr_with_callee_type,"Callable[[_, Type, CallExpr, Union[str, None], Union[Type, None]],Type]"
callee_type,Type
e,CallExpr
check_call,"Callable[[_, Type, List[Expression], List[int], Context, Union[Sequence[Union[str, None]], None], Union[Expression, None], Union[MessageBuilder, None], Union[str, None], Union[Type, None]],Tuple[Type, Type]]"
callee,Type
context,Context
arg_names,"Union[Sequence[Union[str, None]], None]"
analyze_type_type_callee,"Callable[[_, Type, Context],Type]"
item,Type
context,Context
infer_arg_types_in_context,"Callable[[_, CallableType, List[Expression], List[int], List[List[int]]],List[Type]]"
callee,CallableType
formal_to_actual,List[List[int]]
res,"List[Union[Type, None]]"
infer_function_type_arguments_using_context,"Callable[[_, CallableType, Context],CallableType]"
callable,CallableType
error_context,Context
new_args,"List[Union[Type, None]]"
infer_function_type_arguments,"Callable[[_, CallableType, List[Expression], List[int], List[List[int]], Context],CallableType]"
callee_type,CallableType
formal_to_actual,List[List[int]]
context,Context
pass1_args,"List[Union[Type, None]]"
infer_function_type_arguments_pass2,"Callable[[_, CallableType, List[Expression], List[int], List[List[int]], Sequence[Union[Type, None]], Context],Tuple[CallableType, List[Union[Type, None]]]]"
callee_type,CallableType
formal_to_actual,List[List[int]]
old_inferred_args,"Sequence[Union[Type, None]]"
context,Context
get_arg_infer_passes,"Callable[[_, List[Type], List[List[int]], int],List[int]]"
formal_to_actual,List[List[int]]
num_actuals,int
apply_inferred_arguments,"Callable[[_, CallableType, Sequence[Union[Type, None]], Context],CallableType]"
callee_type,CallableType
inferred_args,"Sequence[Union[Type, None]]"
context,Context
check_argument_count,"Callable[[_, CallableType, List[Type], List[int], Union[Sequence[Union[str, None]], None], List[List[int]], Union[Context, None], Union[MessageBuilder, None]],bool]"
callee,CallableType
actual_names,"Union[Sequence[Union[str, None]], None]"
formal_to_actual,List[List[int]]
check_argument_types,"Callable[[_, List[Type], List[int], CallableType, List[List[int]], Context, Union[MessageBuilder, None], Union[ArgChecker, None]],None]"
callee,CallableType
formal_to_actual,List[List[int]]
context,Context
check_arg,"Callable[[_, Type, Type, int, Type, int, int, CallableType, Context, MessageBuilder],None]"
caller_type,Type
original_caller_type,Type
caller_kind,int
callee_type,Type
n,int
m,int
callee,CallableType
context,Context
messages,MessageBuilder
check_overload_call,"Callable[[_, Overloaded, List[Expression], List[Type], List[int], Union[Sequence[Union[str, None]], None], Union[str, None], Union[Type, None], Context, MessageBuilder],Tuple[Type, Type]]"
callee,Overloaded
arg_names,"Union[Sequence[Union[str, None]], None]"
context,Context
arg_messages,MessageBuilder
erased_targets,"Union[List[CallableType], None]"
unioned_result,"Union[Tuple[Type, Type], None]"
target,Type
plausible_overload_call_targets,"Callable[[_, List[Type], List[int], Union[Sequence[Union[str, None]], None], Overloaded],List[CallableType]]"
arg_names,"Union[Sequence[Union[str, None]], None]"
overload,Overloaded
has_shape,"Callable[[Type],bool]"
typ,Type
infer_overload_return_type,"Callable[[_, List[CallableType], List[Expression], List[Type], List[int], Union[Sequence[Union[str, None]], None], Union[str, None], Union[Type, None], Context, Union[MessageBuilder, None]],Union[Tuple[Type, Type], None]]"
arg_names,"Union[Sequence[Union[str, None]], None]"
context,Context
overload_erased_call_targets,"Callable[[_, List[CallableType], List[Type], List[int], Union[Sequence[Union[str, None]], None], Context],List[CallableType]]"
arg_names,"Union[Sequence[Union[str, None]], None]"
context,Context
union_overload_result,"Callable[[_, List[CallableType], List[Expression], List[Type], List[int], Union[Sequence[Union[str, None]], None], Union[str, None], Union[Type, None], Context, Union[MessageBuilder, None], int],Union[List[Tuple[Type, Type]], None]]"
arg_names,"Union[Sequence[Union[str, None]], None]"
context,Context
level,int
seen,"Set[Tuple[Type, Type]]"
real_union,"Callable[[_, Type],bool]"
typ,Type
new_args,List[List[Type]]
erased_signature_similarity,"Callable[[_, List[Type], List[int], Union[Sequence[Union[str, None]], None], CallableType, Context],bool]"
arg_names,"Union[Sequence[Union[str, None]], None]"
callee,CallableType
context,Context
check_arg,"Callable[[Type, Type, int, Type, int, int, CallableType, Context, MessageBuilder],None]"
caller_type,Type
original_caller_type,Type
caller_kind,int
callee_type,Type
n,int
m,int
callee,CallableType
context,Context
messages,MessageBuilder
apply_generic_arguments,"Callable[[_, CallableType, Sequence[Union[Type, None]], Context, bool],CallableType]"
callable,CallableType
types,"Sequence[Union[Type, None]]"
context,Context
skip_unsatisfied,bool
visit_member_expr,"Callable[[_, MemberExpr, bool],Type]"
e,MemberExpr
is_lvalue,bool
analyze_ordinary_member_access,"Callable[[_, MemberExpr, bool],Type]"
e,MemberExpr
is_lvalue,bool
analyze_external_member_access,"Callable[[_, str, Type, Context],Type]"
member,str
base_type,Type
context,Context
visit_int_expr,"Callable[[_, IntExpr],Type]"
e,IntExpr
visit_str_expr,"Callable[[_, StrExpr],Type]"
e,StrExpr
visit_bytes_expr,"Callable[[_, BytesExpr],Type]"
e,BytesExpr
visit_unicode_expr,"Callable[[_, UnicodeExpr],Type]"
e,UnicodeExpr
visit_float_expr,"Callable[[_, FloatExpr],Type]"
e,FloatExpr
visit_complex_expr,"Callable[[_, ComplexExpr],Type]"
e,ComplexExpr
visit_ellipsis,"Callable[[_, EllipsisExpr],Type]"
e,EllipsisExpr
visit_op_expr,"Callable[[_, OpExpr],Type]"
e,OpExpr
visit_comparison_expr,"Callable[[_, ComparisonExpr],Type]"
e,ComparisonExpr
method_type,"Union[mypy.types.Type, None]"
get_operator_method,"Callable[[_, str],str]"
op,str
check_method_call_by_name,"Callable[[_, str, Type, List[Expression], List[int], Context, Union[MessageBuilder, None]],Tuple[Type, Type]]"
method,str
base_type,Type
context,Context
check_method_call,"Callable[[_, str, Type, Type, List[Expression], List[int], Context, Union[MessageBuilder, None]],Tuple[Type, Type]]"
method_name,str
base_type,Type
method_type,Type
context,Context
check_op_reversible,"Callable[[_, str, Type, Expression, Type, Expression, Context, MessageBuilder],Tuple[Type, Type]]"
op_name,str
left_type,Type
left_expr,Expression
right_type,Type
right_expr,Expression
context,Context
msg,MessageBuilder
make_local_errors,"Callable[[],MessageBuilder]"
lookup_operator,"Callable[[str, Type],Union[Type, None]]"
op_name,str
base_type,Type
lookup_definer,"Callable[[Instance, str],Union[str, None]]"
typ,Instance
attr_name,str
check_op,"Callable[[_, str, Type, Expression, Context, bool],Tuple[Type, Type]]"
method,str
base_type,Type
arg,Expression
context,Context
allow_reverse,bool
get_reverse_op_method,"Callable[[_, str],str]"
method,str
check_boolean_op,"Callable[[_, OpExpr, Context],Type]"
e,OpExpr
context,Context
check_list_multiply,"Callable[[_, OpExpr],Type]"
e,OpExpr
visit_unary_expr,"Callable[[_, UnaryExpr],Type]"
e,UnaryExpr
result,Type
visit_index_expr,"Callable[[_, IndexExpr],Type]"
e,IndexExpr
visit_index_expr_helper,"Callable[[_, IndexExpr],Type]"
e,IndexExpr
visit_tuple_slice_helper,"Callable[[_, TupleType, SliceExpr],Type]"
left_type,TupleType
slic,SliceExpr
nonliteral_tuple_index_helper,"Callable[[_, TupleType, Expression],Type]"
left_type,TupleType
index,Expression
_get_value,"Callable[[_, Expression],Union[int, None]]"
index,Expression
visit_typeddict_index_expr,"Callable[[_, TypedDictType, Expression],Type]"
td_type,TypedDictType
index,Expression
visit_enum_index_expr,"Callable[[_, TypeInfo, Expression, Context],Type]"
enum_type,TypeInfo
index,Expression
context,Context
string_type,Type
visit_cast_expr,"Callable[[_, CastExpr],Type]"
expr,CastExpr
visit_reveal_expr,"Callable[[_, RevealExpr],Type]"
expr,RevealExpr
visit_type_application,"Callable[[_, TypeApplication],Type]"
tapp,TypeApplication
visit_type_alias_expr,"Callable[[_, TypeAliasExpr],Type]"
alias,TypeAliasExpr
alias_type_in_runtime_context,"Callable[[_, Type, List[str], bool, Context],Type]"
target,Type
no_args,bool
ctx,Context
alias_definition,bool
apply_type_arguments_to_callable,"Callable[[_, Type, List[Type], Context],Type]"
tp,Type
ctx,Context
visit_list_expr,"Callable[[_, ListExpr],Type]"
e,ListExpr
visit_set_expr,"Callable[[_, SetExpr],Type]"
e,SetExpr
check_lst_expr,"Callable[[_, List[Expression], str, str, Context],Type]"
fullname,str
tag,str
context,Context
visit_tuple_expr,"Callable[[_, TupleExpr],Type]"
e,TupleExpr
visit_dict_expr,"Callable[[_, DictExpr],Type]"
e,DictExpr
visit_lambda_expr,"Callable[[_, LambdaExpr],Type]"
e,LambdaExpr
infer_lambda_type_using_context,"Callable[[_, LambdaExpr],Tuple[Union[CallableType, None], Union[CallableType, None]]]"
e,LambdaExpr
visit_super_expr,"Callable[[_, SuperExpr],Type]"
e,SuperExpr
check_super_arguments,"Callable[[_, SuperExpr],None]"
e,SuperExpr
analyze_super,"Callable[[_, SuperExpr, bool],Type]"
e,SuperExpr
is_lvalue,bool
visit_slice_expr,"Callable[[_, SliceExpr],Type]"
e,SliceExpr
visit_list_comprehension,"Callable[[_, ListComprehension],Type]"
e,ListComprehension
visit_set_comprehension,"Callable[[_, SetComprehension],Type]"
e,SetComprehension
visit_generator_expr,"Callable[[_, GeneratorExpr],Type]"
e,GeneratorExpr
check_generator_or_comprehension,"Callable[[_, GeneratorExpr, str, str, List[Type]],Type]"
gen,GeneratorExpr
type_name,str
id_for_messages,str
visit_dictionary_comprehension,"Callable[[_, DictionaryComprehension],Type]"
e,DictionaryComprehension
check_for_comp,"Callable[[_, Union[GeneratorExpr, DictionaryComprehension]],None]"
visit_conditional_expr,"Callable[[_, ConditionalExpr],Type]"
e,ConditionalExpr
analyze_cond_branch,"Callable[[_, Union[Dict[Expression, Type], None], Expression, Union[Type, None]],Type]"
map,"Union[Dict[Expression, Type], None]"
node,Expression
visit_backquote_expr,"Callable[[_, BackquoteExpr],Type]"
e,BackquoteExpr
accept,"Callable[[_, Expression, Union[Type, None], bool, bool],Type]"
node,Expression
allow_none_return,bool
always_allow_any,bool
named_type,"Callable[[_, str],Instance]"
name,str
is_valid_var_arg,"Callable[[_, Type],bool]"
typ,Type
is_valid_keyword_var_arg,"Callable[[_, Type],bool]"
typ,Type
has_member,"Callable[[_, Type, str],bool]"
typ,Type
member,str
not_ready_callback,"Callable[[_, str, Context],None]"
name,str
context,Context
visit_yield_expr,"Callable[[_, YieldExpr],Type]"
e,YieldExpr
visit_await_expr,"Callable[[_, AwaitExpr],Type]"
e,AwaitExpr
check_awaitable_expr,"Callable[[_, Type, Context, str],Type]"
t,Type
ctx,Context
msg,str
visit_yield_from_expr,"Callable[[_, YieldFromExpr, bool],Type]"
e,YieldFromExpr
allow_none_return,bool
iter_type,Type
visit_temp_node,"Callable[[_, TempNode],Type]"
e,TempNode
visit_type_var_expr,"Callable[[_, TypeVarExpr],Type]"
e,TypeVarExpr
visit_newtype_expr,"Callable[[_, NewTypeExpr],Type]"
e,NewTypeExpr
visit_namedtuple_expr,"Callable[[_, NamedTupleExpr],Type]"
e,NamedTupleExpr
visit_enum_call_expr,"Callable[[_, EnumCallExpr],Type]"
e,EnumCallExpr
visit_typeddict_expr,"Callable[[_, TypedDictExpr],Type]"
e,TypedDictExpr
visit__promote_expr,"Callable[[_, PromoteExpr],Type]"
e,PromoteExpr
visit_star_expr,"Callable[[_, StarExpr],StarType]"
e,StarExpr
object_type,"Callable[[_],Instance]"
bool_type,"Callable[[_],Instance]"
narrow_type_from_binder,"Callable[[_, Expression, Type],Type]"
expr,Expression
known_type,Type
has_any_type,"Callable[[Type],bool]"
t,Type
__init__,"Callable[[_],None]"
visit_any,"Callable[[_, AnyType],bool]"
t,AnyType
has_coroutine_decorator,"Callable[[Type],bool]"
t,Type
is_async_def,"Callable[[Type],bool]"
t,Type
is_empty_tuple,"Callable[[Type],bool]"
t,Type
is_duplicate_mapping,"Callable[[List[int], List[int]],bool]"
replace_callable_return_type,"Callable[[CallableType, Type],CallableType]"
c,CallableType
new_ret_type,Type
__init__,"Callable[[_],None]"
visit_callable_type,"Callable[[_, CallableType],bool]"
t,CallableType
__init__,"Callable[[_],None]"
visit_type_var,"Callable[[_, TypeVarType],bool]"
t,TypeVarType
has_erased_component,"Callable[[Union[Type, None]],bool]"
__init__,"Callable[[_],None]"
visit_erased_type,"Callable[[_, ErasedType],bool]"
t,ErasedType
has_uninhabited_component,"Callable[[Union[Type, None]],bool]"
__init__,"Callable[[_],None]"
visit_uninhabited_type,"Callable[[_, UninhabitedType],bool]"
t,UninhabitedType
arg_approximate_similarity,"Callable[[Type, Type],bool]"
actual,Type
formal,Type
is_typetype_like,"Callable[[Type],bool]"
typ,Type
any_causes_overload_ambiguity,"Callable[[List[CallableType], List[Type], List[Type], List[int], Union[Sequence[Union[str, None]], None]],bool]"
arg_names,"Union[Sequence[Union[str, None]], None]"
all_same_types,"Callable[[Iterable[Type]],bool]"
merge_typevars_in_callables_by_name,"Callable[[Sequence[CallableType]],Tuple[List[CallableType], List[TypeVarDef]]]"
meet_types,"Callable[[Type, Type],Type]"
s,Type
t,Type
narrow_declared_type,"Callable[[Type, Type],Type]"
declared,Type
narrowed,Type
get_possible_variants,"Callable[[Type],List[Type]]"
typ,Type
is_overlapping_types,"Callable[[Type, Type, bool, bool],bool]"
left,Type
right,Type
ignore_promotions,bool
prohibit_none_typevar_overlap,bool
_is_overlapping_types,"Callable[[Type, Type],bool]"
left,Type
right,Type
is_none_typevar_overlap,"Callable[[Type, Type],bool]"
t1,Type
t2,Type
is_overlapping_erased_types,"Callable[[Type, Type],bool]"
left,Type
right,Type
ignore_promotions,bool
are_typed_dicts_overlapping,"Callable[[TypedDictType, TypedDictType],bool]"
left,TypedDictType
right,TypedDictType
ignore_promotions,bool
prohibit_none_typevar_overlap,bool
are_tuples_overlapping,"Callable[[Type, Type],bool]"
left,Type
right,Type
ignore_promotions,bool
prohibit_none_typevar_overlap,bool
adjust_tuple,"Callable[[Type, Type],Union[TupleType, None]]"
left,Type
r,Type
is_tuple,"Callable[[Type],bool]"
typ,Type
__init__,"Callable[[_, Type],None]"
s,Type
visit_unbound_type,"Callable[[_, UnboundType],Type]"
t,UnboundType
visit_any,"Callable[[_, AnyType],Type]"
t,AnyType
visit_union_type,"Callable[[_, UnionType],Type]"
t,UnionType
visit_none_type,"Callable[[_, NoneTyp],Type]"
t,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],Type]"
t,UninhabitedType
visit_deleted_type,"Callable[[_, DeletedType],Type]"
t,DeletedType
visit_erased_type,"Callable[[_, ErasedType],Type]"
t,ErasedType
visit_type_var,"Callable[[_, TypeVarType],Type]"
t,TypeVarType
visit_instance,"Callable[[_, Instance],Type]"
t,Instance
visit_callable_type,"Callable[[_, CallableType],Type]"
t,CallableType
visit_overloaded,"Callable[[_, Overloaded],Type]"
t,Overloaded
visit_tuple_type,"Callable[[_, TupleType],Type]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],Type]"
t,TypedDictType
item_list,"List[Tuple[str, Type]]"
visit_literal_type,"Callable[[_, LiteralType],Type]"
t,LiteralType
visit_partial_type,"Callable[[_, PartialType],Type]"
t,PartialType
visit_type_type,"Callable[[_, TypeType],Type]"
t,TypeType
meet,"Callable[[_, Type, Type],Type]"
s,Type
t,Type
default,"Callable[[_, Type],Type]"
typ,Type
meet_similar_callables,"Callable[[CallableType, CallableType],CallableType]"
t,CallableType
s,CallableType
parse,"Callable[[Union[str, bytes], str, Union[str, None], Union[Errors, None], Options],MypyFile]"
fnam,str
options,Options
PER_MODULE_OPTIONS,Final
OPTIONS_AFFECTING_CACHE,Final
__init__,"Callable[[_],None]"
self.per_module_cache,"Union[Dict[str, Options], None]"
self.strict_optional_whitelist,"Union[List[str], None]"
self.per_module_options,"OrderedDict[str, Dict[str, object]]"
self.glob_options,"List[Tuple[str, Pattern[str]]]"
self.shadow_file,"Union[List[List[str]], None]"
self.show_column_numbers,bool
self.cache_map,"Dict[str, Tuple[str, str]]"
snapshot,"Callable[[_],object]"
__repr__,"Callable[[_],str]"
apply_changes,"Callable[[_, Dict[str, object]],Options]"
build_per_module_cache,"Callable[[_],None]"
clone_for_module,"Callable[[_, str],Options]"
module,str
compile_glob,"Callable[[_, str],Pattern[str]]"
s,str
is_same_type,"Callable[[Type, Type],bool]"
left,Type
right,Type
simplify_union,"Callable[[Type],Type]"
t,Type
is_same_types,"Callable[[Sequence[Type], Sequence[Type]],bool]"
__init__,"Callable[[_, Type],None]"
right,Type
visit_unbound_type,"Callable[[_, UnboundType],bool]"
left,UnboundType
visit_any,"Callable[[_, AnyType],bool]"
left,AnyType
visit_none_type,"Callable[[_, NoneTyp],bool]"
left,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],bool]"
t,UninhabitedType
visit_erased_type,"Callable[[_, ErasedType],bool]"
left,ErasedType
visit_deleted_type,"Callable[[_, DeletedType],bool]"
left,DeletedType
visit_instance,"Callable[[_, Instance],bool]"
left,Instance
visit_type_var,"Callable[[_, TypeVarType],bool]"
left,TypeVarType
visit_callable_type,"Callable[[_, CallableType],bool]"
left,CallableType
visit_tuple_type,"Callable[[_, TupleType],bool]"
left,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],bool]"
left,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],bool]"
left,LiteralType
visit_union_type,"Callable[[_, UnionType],bool]"
left,UnionType
visit_overloaded,"Callable[[_, Overloaded],bool]"
left,Overloaded
visit_partial_type,"Callable[[_, PartialType],bool]"
left,PartialType
visit_type_type,"Callable[[_, TypeType],bool]"
left,TypeType
__init__,"Callable[[_, SemanticAnalyzerPass2],None]"
sem,SemanticAnalyzerPass2
visit_file,"Callable[[_, MypyFile, str, str, Options],None]"
file,MypyFile
fnam,str
mod_id,str
options,Options
typ,Type
literal_types,"List[Tuple[str, Type]]"
visit_block,"Callable[[_, Block],None]"
b,Block
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
visit_func_def,"Callable[[_, FuncDef, bool],None]"
func,FuncDef
decorated,bool
visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
func,OverloadedFuncDef
visit_class_def,"Callable[[_, ClassDef],None]"
cdef,ClassDef
process_nested_classes,"Callable[[_, ClassDef],None]"
outer_def,ClassDef
visit_import_from,"Callable[[_, ImportFrom],None]"
node,ImportFrom
visit_import,"Callable[[_, Import],None]"
node,Import
visit_import_all,"Callable[[_, ImportAll],None]"
node,ImportAll
visit_while_stmt,"Callable[[_, WhileStmt],None]"
s,WhileStmt
visit_for_stmt,"Callable[[_, ForStmt],None]"
s,ForStmt
visit_with_stmt,"Callable[[_, WithStmt],None]"
s,WithStmt
visit_decorator,"Callable[[_, Decorator],None]"
d,Decorator
visit_if_stmt,"Callable[[_, IfStmt],None]"
s,IfStmt
visit_try_stmt,"Callable[[_, TryStmt],None]"
s,TryStmt
analyze_lvalue,"Callable[[_, Lvalue, bool],None]"
lvalue,Lvalue
explicit_type,bool
kind_by_scope,"Callable[[_],int]"
add_symbol,"Callable[[_, str, SymbolTableNode, Context],None]"
name,str
node,SymbolTableNode
context,Context
__init__,"Callable[[_],None]"
verbosity,"Callable[[_],int]"
log,"Callable[[_],None]"
message,str
log_fine_grained,"Callable[[_],None]"
message,str
trace,"Callable[[_],None]"
message,str
add_stats,"Callable[[_],None]"
kwds,Any
DEFAULT_LAST_PASS,Final
errors,Errors
msg,MessageBuilder
binder,ConditionalTypeBinder
expr_checker,mypy.checkexpr.ExpressionChecker
tscope,Scope
scope,CheckerScope
globals,SymbolTable
options,Options
inferred_attribute_types,"Union[Dict[Var, Type], None]"
no_partial_types,bool
plugin,Plugin
__init__,"Callable[[_, Errors, Dict[str, MypyFile], Options, MypyFile, str, Plugin],None]"
errors,Errors
options,Options
tree,MypyFile
path,str
plugin,Plugin
reset,"Callable[[_],None]"
check_first_pass,"Callable[[_],None]"
check_second_pass,"Callable[[_, Union[Sequence[Union[DeferredNode, FineGrainedDeferredNode]], None]],bool]"
todo,"Union[Sequence[Union[DeferredNode, FineGrainedDeferredNode]], None]"
done,"Set[Union[DeferredNodeType, FineGrainedDeferredNodeType]]"
check_partial,"Callable[[_, Union[DeferredNodeType, FineGrainedDeferredNodeType]],None]"
check_top_level,"Callable[[_, MypyFile],None]"
node,MypyFile
defer_node,"Callable[[_, DeferredNodeType, Union[TypeInfo, None]],None]"
node,DeferredNodeType
handle_cannot_determine_type,"Callable[[_, str, Context],None]"
name,str
context,Context
accept,"Callable[[_, Statement],None]"
stmt,Statement
accept_loop,"Callable[[_, Statement, Union[Statement, None]],None]"
body,Statement
visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
defn,OverloadedFuncDef
_visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
defn,OverloadedFuncDef
check_overlapping_overloads,"Callable[[_, OverloadedFuncDef],None]"
defn,OverloadedFuncDef
is_generator_return_type,"Callable[[_, Type, bool],bool]"
typ,Type
is_coroutine,bool
is_async_generator_return_type,"Callable[[_, Type],bool]"
typ,Type
get_generator_yield_type,"Callable[[_, Type, bool],Type]"
return_type,Type
is_coroutine,bool
get_generator_receive_type,"Callable[[_, Type, bool],Type]"
return_type,Type
is_coroutine,bool
get_coroutine_return_type,"Callable[[_, Type],Type]"
return_type,Type
get_generator_return_type,"Callable[[_, Type, bool],Type]"
return_type,Type
is_coroutine,bool
visit_func_def,"Callable[[_, FuncDef],None]"
defn,FuncDef
_visit_func_def,"Callable[[_, FuncDef],None]"
defn,FuncDef
check_func_item,"Callable[[_, FuncItem, Union[CallableType, None], Union[str, None]],None]"
defn,FuncItem
check_func_def,"Callable[[_, FuncItem, CallableType, Union[str, None]],None]"
defn,FuncItem
typ,CallableType
ctx,Context
is_forward_op_method,"Callable[[_, str],bool]"
method_name,str
is_reverse_op_method,"Callable[[_, str],bool]"
method_name,str
check_for_missing_annotations,"Callable[[_, FuncItem],None]"
fdef,FuncItem
is_unannotated_any,"Callable[[Type],bool]"
t,Type
is_trivial_body,"Callable[[_, Block],bool]"
block,Block
check_reverse_op_method,"Callable[[_, FuncItem, CallableType, str, Context],None]"
defn,FuncItem
reverse_type,CallableType
reverse_name,str
context,Context
check_overlapping_op_methods,"Callable[[_, CallableType, str, TypeInfo, Type, str, Type, Context],None]"
reverse_type,CallableType
reverse_name,str
reverse_class,TypeInfo
forward_type,Type
forward_name,str
forward_base,Type
context,Context
is_unsafe_overlapping_op,"Callable[[_, CallableType, Type, CallableType],bool]"
forward_item,CallableType
forward_base,Type
reverse_type,CallableType
check_inplace_operator_method,"Callable[[_, FuncBase],None]"
defn,FuncBase
check_getattr_method,"Callable[[_, Type, Context, str],None]"
typ,Type
context,Context
name,str
check_setattr_method,"Callable[[_, Type, Context],None]"
typ,Type
context,Context
expand_typevars,"Callable[[_, FuncItem, CallableType],List[Tuple[FuncItem, CallableType]]]"
defn,FuncItem
typ,CallableType
subst,"List[List[Tuple[TypeVarId, Type]]]"
result,"List[Tuple[FuncItem, CallableType]]"
check_method_override,"Callable[[_, Union[FuncDef, OverloadedFuncDef, Decorator]],None]"
check_method_or_accessor_override_for_base,"Callable[[_, Union[FuncDef, OverloadedFuncDef, Decorator], TypeInfo],bool]"
base,TypeInfo
check_method_override_for_base_with_name,"Callable[[_, Union[FuncDef, OverloadedFuncDef, Decorator], str, TypeInfo],bool]"
name,str
base,TypeInfo
typ,Type
get_op_other_domain,"Callable[[_, FunctionLike],Union[Type, None]]"
tp,FunctionLike
check_override,"Callable[[_, FunctionLike, FunctionLike, str, str, str, bool, bool, Context],None]"
override,FunctionLike
original,FunctionLike
name,str
name_in_super,str
supertype,str
original_class_or_static,bool
override_class_or_static,bool
node,Context
erase_override,"Callable[[Type],Type]"
t,Type
visit_class_def,"Callable[[_, ClassDef],None]"
defn,ClassDef
check_protocol_variance,"Callable[[_, ClassDef],None]"
defn,ClassDef
check_multiple_inheritance,"Callable[[_, TypeInfo],None]"
typ,TypeInfo
check_compatibility,"Callable[[_, str, TypeInfo, TypeInfo, Context],None]"
name,str
base1,TypeInfo
base2,TypeInfo
ctx,Context
visit_import_from,"Callable[[_, ImportFrom],None]"
node,ImportFrom
visit_import_all,"Callable[[_, ImportAll],None]"
node,ImportAll
visit_import,"Callable[[_, Import],None]"
s,Import
check_import,"Callable[[_, ImportBase],None]"
node,ImportBase
visit_block,"Callable[[_, Block],None]"
b,Block
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
check_assignment,"Callable[[_, Lvalue, Expression, bool, bool],None]"
lvalue,Lvalue
rvalue,Expression
infer_lvalue_type,bool
new_syntax,bool
check_compatibility_all_supers,"Callable[[_, RefExpr, Union[Type, None], Expression],bool]"
lvalue,RefExpr
rvalue,Expression
check_compatibility_super,"Callable[[_, RefExpr, Union[Type, None], Expression, TypeInfo, Type, Node],bool]"
lvalue,RefExpr
rvalue,Expression
base,TypeInfo
base_type,Type
base_node,Node
lvalue_type_from_base,"Callable[[_, Var, TypeInfo],Tuple[Union[Type, None], Union[Node, None]]]"
expr_node,Var
base,TypeInfo
check_compatibility_classvar_super,"Callable[[_, Var, TypeInfo, Union[Node, None]],bool]"
node,Var
base,TypeInfo
check_compatibility_final_super,"Callable[[_, Var, TypeInfo, Union[Node, None]],bool]"
node,Var
base,TypeInfo
check_no_writable,"Callable[[_, str, Union[Node, None], Context],None]"
name,str
ctx,Context
get_final_context,"Callable[[_],bool]"
enter_final_context,"Callable[[_, bool],Iterator[None]]"
is_final_def,bool
check_final,"Callable[[_, Union[AssignmentStmt, OperatorAssignmentStmt]],None]"
check_assignment_to_multiple_lvalues,"Callable[[_, List[Lvalue], Expression, Context, bool],None]"
rvalue,Expression
context,Context
infer_lvalue_type,bool
check_rvalue_count_in_assignment,"Callable[[_, List[Lvalue], int, Context],bool]"
rvalue_count,int
context,Context
check_multi_assignment,"Callable[[_, List[Lvalue], Expression, Context, bool, Union[Type, None], bool],None]"
rvalue,Expression
context,Context
infer_lvalue_type,bool
undefined_rvalue,bool
check_multi_assignment_from_union,"Callable[[_, List[Expression], Expression, UnionType, Context, bool],None]"
rvalue,Expression
rvalue_type,UnionType
context,Context
infer_lvalue_type,bool
clean_items,"List[Tuple[Type, Type]]"
check_multi_assignment_from_tuple,"Callable[[_, List[Lvalue], Expression, TupleType, Context, bool, bool],None]"
rvalue,Expression
rvalue_type,TupleType
context,Context
undefined_rvalue,bool
infer_lvalue_type,bool
lvalue_type_for_inference,"Callable[[_, List[Lvalue], TupleType],Type]"
rvalue_type,TupleType
append_types_for_inference,"Callable[[List[Expression], List[Type]],None]"
split_around_star,"Callable[[_, List[T], int, int],Tuple[List[T], List[T], List[T]]]"
star_index,int
length,int
type_is_iterable,"Callable[[_, Type],bool]"
type,Type
check_multi_assignment_from_iterable,"Callable[[_, List[Lvalue], Type, Context, bool],None]"
rvalue_type,Type
context,Context
infer_lvalue_type,bool
check_lvalue,"Callable[[_, Lvalue],Tuple[Union[Type, None], Union[IndexExpr, None], Union[Var, None]]]"
lvalue,Lvalue
is_definition,"Callable[[_, Lvalue],bool]"
s,Lvalue
infer_variable_type,"Callable[[_, Var, Lvalue, Type, Context],None]"
name,Var
lvalue,Lvalue
init_type,Type
context,Context
infer_partial_type,"Callable[[_, Var, Lvalue, Type],bool]"
name,Var
lvalue,Lvalue
init_type,Type
set_inferred_type,"Callable[[_, Var, Lvalue, Type],None]"
var,Var
lvalue,Lvalue
type,Type
set_inference_error_fallback_type,"Callable[[_, Var, Lvalue, Type, Context],None]"
var,Var
lvalue,Lvalue
type,Type
context,Context
check_simple_assignment,"Callable[[_, Union[Type, None], Expression, Context, str, str, str],Type]"
rvalue,Expression
context,Context
msg,str
lvalue_name,str
rvalue_name,str
check_member_assignment,"Callable[[_, Type, Type, Expression, Context],Tuple[Type, Type, bool]]"
instance_type,Type
attribute_type,Type
rvalue,Expression
context,Context
check_indexed_assignment,"Callable[[_, IndexExpr, Expression, Context],None]"
lvalue,IndexExpr
rvalue,Expression
context,Context
method_type,Type
try_infer_partial_type_from_indexed_assignment,"Callable[[_, IndexExpr, Expression],None]"
lvalue,IndexExpr
rvalue,Expression
visit_expression_stmt,"Callable[[_, ExpressionStmt],None]"
s,ExpressionStmt
visit_return_stmt,"Callable[[_, ReturnStmt],None]"
s,ReturnStmt
check_return_stmt,"Callable[[_, ReturnStmt],None]"
s,ReturnStmt
visit_if_stmt,"Callable[[_, IfStmt],None]"
s,IfStmt
visit_while_stmt,"Callable[[_, WhileStmt],None]"
s,WhileStmt
visit_operator_assignment_stmt,"Callable[[_, OperatorAssignmentStmt],None]"
s,OperatorAssignmentStmt
visit_assert_stmt,"Callable[[_, AssertStmt],None]"
s,AssertStmt
visit_raise_stmt,"Callable[[_, RaiseStmt],None]"
s,RaiseStmt
type_check_raise,"Callable[[_, Expression, RaiseStmt, bool],None]"
e,Expression
s,RaiseStmt
optional,bool
expected_type,Type
visit_try_stmt,"Callable[[_, TryStmt],None]"
s,TryStmt
visit_try_without_finally,"Callable[[_, TryStmt, bool],None]"
s,TryStmt
try_frame,bool
check_except_handler_test,"Callable[[_, Expression],Type]"
n,Expression
get_types_from_except_handler,"Callable[[_, Type, Expression],List[Type]]"
typ,Type
n,Expression
visit_for_stmt,"Callable[[_, ForStmt],None]"
s,ForStmt
analyze_async_iterable_item_type,"Callable[[_, Expression],Tuple[Type, Type]]"
expr,Expression
analyze_iterable_item_type,"Callable[[_, Expression],Tuple[Type, Type]]"
expr,Expression
joined,Type
analyze_index_variables,"Callable[[_, Expression, Type, bool, Context],None]"
index,Expression
item_type,Type
infer_lvalue_type,bool
context,Context
visit_del_stmt,"Callable[[_, DelStmt],None]"
s,DelStmt
visit_decorator,"Callable[[_, Decorator],None]"
e,Decorator
sig,Type
check_for_untyped_decorator,"Callable[[_, FuncDef, Type, Expression],None]"
func,FuncDef
dec_type,Type
dec_expr,Expression
check_incompatible_property_override,"Callable[[_, Decorator],None]"
e,Decorator
visit_with_stmt,"Callable[[_, WithStmt],None]"
s,WithStmt
check_untyped_after_decorator,"Callable[[_, Type, FuncDef],None]"
typ,Type
func,FuncDef
check_async_with_item,"Callable[[_, Expression, Union[Expression, None], bool],None]"
expr,Expression
infer_lvalue_type,bool
check_with_item,"Callable[[_, Expression, Union[Expression, None], bool],None]"
expr,Expression
infer_lvalue_type,bool
visit_print_stmt,"Callable[[_, PrintStmt],None]"
s,PrintStmt
visit_break_stmt,"Callable[[_, BreakStmt],None]"
s,BreakStmt
visit_continue_stmt,"Callable[[_, ContinueStmt],None]"
s,ContinueStmt
intersect_instance_callable,"Callable[[_, Instance, CallableType],Instance]"
typ,Instance
callable_type,CallableType
make_fake_callable,"Callable[[_, Instance],Instance]"
typ,Instance
partition_by_callable,"Callable[[_, Type, bool],Tuple[List[Type], List[Type]]]"
typ,Type
unsound_partition,bool
conditional_callable_type_map,"Callable[[_, Expression, Union[Type, None]],Tuple[TypeMap, TypeMap]]"
expr,Expression
find_isinstance_check,"Callable[[_, Expression],Tuple[TypeMap, TypeMap]]"
node,Expression
if_vars,TypeMap
else_vars,TypeMap
ref,Expression
check_subtype,"Callable[[_, Type, Type, Context, str, Union[str, None], Union[str, None]],bool]"
subtype,Type
supertype,Type
context,Context
msg,str
contains_none,"Callable[[_, Type],bool]"
t,Type
should_suppress_optional_error,"Callable[[_, List[Type]],bool]"
named_type,"Callable[[_, str],Instance]"
name,str
named_generic_type,"Callable[[_, str, List[Type]],Instance]"
name,str
lookup_typeinfo,"Callable[[_, str],TypeInfo]"
fullname,str
type_type,"Callable[[_],Instance]"
str_type,"Callable[[_],Instance]"
store_type,"Callable[[_, Expression, Type],None]"
node,Expression
typ,Type
in_checked_function,"Callable[[_],bool]"
lookup,"Callable[[_, str, int],SymbolTableNode]"
name,str
kind,int
lookup_qualified,"Callable[[_, str],SymbolTableNode]"
name,str
is_function,bool
is_class,bool
handle_partial_var_type,"Callable[[_, PartialType, bool, Var, Context],Type]"
typ,PartialType
is_lvalue,bool
node,Var
context,Context
fixup_partial_type,"Callable[[_, Type],Type]"
typ,Type
is_defined_in_base_class,"Callable[[_, Var],bool]"
var,Var
find_partial_types,"Callable[[_, Var],Union[Dict[Var, Context], None]]"
var,Var
find_partial_types_in_all_scopes,"Callable[[_, Var],Tuple[bool, bool, Union[Dict[Var, Context], None]]]"
var,Var
temp_node,"Callable[[_, Type, Union[Context, None]],TempNode]"
t,Type
fail,"Callable[[_, str, Context],None]"
msg,str
context,Context
warn,"Callable[[_, str, Context],None]"
msg,str
context,Context
note,"Callable[[_, str, Context, int],None]"
msg,str
context,Context
offset,int
iterable_item_type,"Callable[[_, Instance],Type]"
instance,Instance
function_type,"Callable[[_, FuncBase],FunctionLike]"
func,FuncBase
push_type_map,"Callable[[_, TypeMap],None]"
type_map,TypeMap
conditional_type_map,"Callable[[Expression, Union[Type, None], Union[List[TypeRange], None]],Tuple[TypeMap, TypeMap]]"
expr,Expression
proposed_type_ranges,"Union[List[TypeRange], None]"
gen_unique_name,"Callable[[str, SymbolTable],str]"
base,str
table,SymbolTable
is_true_literal,"Callable[[Expression],bool]"
n,Expression
is_false_literal,"Callable[[Expression],bool]"
n,Expression
is_literal_none,"Callable[[Expression],bool]"
n,Expression
is_literal_not_implemented,"Callable[[Expression],bool]"
n,Expression
builtin_item_type,"Callable[[Type],Union[Type, None]]"
tp,Type
and_conditional_maps,"Callable[[TypeMap, TypeMap],TypeMap]"
m1,TypeMap
m2,TypeMap
or_conditional_maps,"Callable[[TypeMap, TypeMap],TypeMap]"
m1,TypeMap
m2,TypeMap
convert_to_typetype,"Callable[[TypeMap],TypeMap]"
type_map,TypeMap
flatten,"Callable[[Expression],List[Expression]]"
t,Expression
flatten_types,"Callable[[Type],List[Type]]"
t,Type
get_isinstance_type,"Callable[[Expression, Dict[Expression, Type]],Union[List[TypeRange], None]]"
expr,Expression
expand_func,"Callable[[FuncItem, Dict[TypeVarId, Type]],FuncItem]"
defn,FuncItem
__init__,"Callable[[_, Dict[TypeVarId, Type]],None]"
type,"Callable[[_, Type],Type]"
type,Type
are_argument_counts_overlapping,"Callable[[CallableType, CallableType],bool]"
t,CallableType
s,CallableType
is_unsafe_overlapping_overload_signatures,"Callable[[CallableType, CallableType],bool]"
signature,CallableType
other,CallableType
detach_callable,"Callable[[CallableType],CallableType]"
typ,CallableType
appear_map,"Dict[str, List[int]]"
__init__,"Callable[[_],None]"
_merge,"Callable[[_, Iterable[List[TypeVarType]]],List[TypeVarType]]"
iter,Iterable[List[TypeVarType]]
visit_type_var,"Callable[[_, TypeVarType],List[TypeVarType]]"
t,TypeVarType
overload_can_never_match,"Callable[[CallableType, CallableType],bool]"
signature,CallableType
other,CallableType
is_more_general_arg_prefix,"Callable[[FunctionLike, FunctionLike],bool]"
t,FunctionLike
s,FunctionLike
is_same_arg_prefix,"Callable[[CallableType, CallableType],bool]"
t,CallableType
s,CallableType
infer_operator_assignment_method,"Callable[[Type, str],Tuple[bool, str]]"
typ,Type
operator,str
is_valid_inferred_type,"Callable[[Type],bool]"
typ,Type
is_valid_inferred_type_component,"Callable[[Type],bool]"
typ,Type
stack,"List[Union[TypeInfo, FuncItem, MypyFile]]"
__init__,"Callable[[_, MypyFile],None]"
module,MypyFile
push_function,"Callable[[_, FuncItem],Iterator[None]]"
item,FuncItem
push_class,"Callable[[_, TypeInfo],Iterator[None]]"
info,TypeInfo
is_typed_callable,"Callable[[Union[Type, None]],bool]"
is_untyped_decorator,"Callable[[Union[Type, None]],bool]"
is_static,"Callable[[Union[FuncBase, Decorator]],bool]"
is_subtype_no_promote,"Callable[[Type, Type],bool]"
left,Type
right,Type
is_overlapping_types_no_promote,"Callable[[Type, Type],bool]"
left,Type
right,Type
generate_stub_for_c_module,"Callable[[str, str, bool, Dict[str, str], Dict[str, str]],None]"
module_name,str
target,str
add_header,bool
is_c_function,"Callable[[object],bool]"
obj,object
is_c_method,"Callable[[object],bool]"
obj,object
is_c_classmethod,"Callable[[object],bool]"
obj,object
is_c_property,"Callable[[object],bool]"
obj,object
is_c_property_readonly,"Callable[[object],bool]"
prop,object
is_c_type,"Callable[[object],bool]"
obj,object
generate_c_function_stub,"Callable[[ModuleType, str, object, List[str], List[str], Union[str, None], Dict[str, str], Union[str, None], Dict[str, str]],None]"
module,ModuleType
name,str
obj,object
strip_or_import,"Callable[[str, ModuleType, List[str]],str]"
typ,str
module,ModuleType
generate_c_property_stub,"Callable[[str, object, List[str], bool],None]"
name,str
obj,object
readonly,bool
generate_c_type_stub,"Callable[[ModuleType, str, type, List[str], List[str], Dict[str, str], Dict[str, str]],None]"
module,ModuleType
class_name,str
obj,type
method_name_sort_key,"Callable[[str],Tuple[int, str]]"
name,str
is_skipped_attribute,"Callable[[str],bool]"
attr,str
infer_method_sig,"Callable[[str],str]"
name,str
type_var,TypeVarId
target,Type
__init__,"Callable[[_, TypeVarId, int, Type],None]"
type_var,TypeVarId
op,int
target,Type
__repr__,"Callable[[_],str]"
infer_constraints_for_callable,"Callable[[CallableType, Sequence[Union[Type, None]], List[int], List[List[int]]],List[Constraint]]"
callee,CallableType
arg_types,"Sequence[Union[Type, None]]"
formal_to_actual,List[List[int]]
infer_constraints,"Callable[[Type, Type, int],List[Constraint]]"
template,Type
actual,Type
direction,int
infer_constraints_if_possible,"Callable[[Type, Type, int],Union[List[Constraint], None]]"
template,Type
actual,Type
direction,int
any_constraints,"Callable[[List[Union[List[Constraint], None]], bool],List[Constraint]]"
options,"List[Union[List[Constraint], None]]"
eager,bool
is_same_constraints,"Callable[[List[Constraint], List[Constraint]],bool]"
is_same_constraint,"Callable[[Constraint, Constraint],bool]"
c1,Constraint
c2,Constraint
is_complete_type,"Callable[[Type],bool]"
typ,Type
__init__,"Callable[[_],None]"
visit_uninhabited_type,"Callable[[_, UninhabitedType],bool]"
t,UninhabitedType
actual,Type
__init__,"Callable[[_, Type, int],None]"
actual,Type
direction,int
visit_unbound_type,"Callable[[_, UnboundType],List[Constraint]]"
template,UnboundType
visit_any,"Callable[[_, AnyType],List[Constraint]]"
template,AnyType
visit_none_type,"Callable[[_, NoneTyp],List[Constraint]]"
template,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],List[Constraint]]"
template,UninhabitedType
visit_erased_type,"Callable[[_, ErasedType],List[Constraint]]"
template,ErasedType
visit_deleted_type,"Callable[[_, DeletedType],List[Constraint]]"
template,DeletedType
visit_partial_type,"Callable[[_, PartialType],List[Constraint]]"
template,PartialType
visit_type_var,"Callable[[_, TypeVarType],List[Constraint]]"
template,TypeVarType
visit_instance,"Callable[[_, Instance],List[Constraint]]"
template,Instance
infer_constraints_from_protocol_members,"Callable[[_, List[Constraint], Instance, Instance, Type, Instance],None]"
instance,Instance
template,Instance
subtype,Type
protocol,Instance
visit_callable_type,"Callable[[_, CallableType],List[Constraint]]"
template,CallableType
infer_against_overloaded,"Callable[[_, Overloaded, CallableType],List[Constraint]]"
overloaded,Overloaded
template,CallableType
visit_tuple_type,"Callable[[_, TupleType],List[Constraint]]"
template,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],List[Constraint]]"
template,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],List[Constraint]]"
template,LiteralType
visit_union_type,"Callable[[_, UnionType],List[Constraint]]"
template,UnionType
infer_against_any,"Callable[[_, Iterable[Type], AnyType],List[Constraint]]"
any_type,AnyType
visit_overloaded,"Callable[[_, Overloaded],List[Constraint]]"
template,Overloaded
visit_type_type,"Callable[[_, TypeType],List[Constraint]]"
template,TypeType
neg_op,"Callable[[int],int]"
op,int
find_matching_overload_item,"Callable[[Overloaded, CallableType],CallableType]"
overloaded,Overloaded
template,CallableType
IS_SETTABLE,Final
IS_CLASSVAR,Final
IS_CLASS_OR_STATIC,Final
check_type_parameter,"Callable[[Type, Type, int],bool]"
lefta,Type
righta,Type
variance,int
ignore_type_parameter,"Callable[[Type, Type, int],bool]"
s,Type
t,Type
v,int
is_subtype,"Callable[[Type, Type],bool]"
left,Type
right,Type
ignore_type_params,bool
ignore_pos_arg_names,bool
ignore_declared_variance,bool
ignore_promotions,bool
is_subtype_ignoring_tvars,"Callable[[Type, Type],bool]"
left,Type
right,Type
is_equivalent,"Callable[[Type, Type],bool]"
a,Type
b,Type
ignore_type_params,bool
ignore_pos_arg_names,bool
__init__,"Callable[[_, Type],None]"
right,Type
ignore_type_params,bool
ignore_pos_arg_names,bool
ignore_declared_variance,bool
ignore_promotions,bool
build_subtype_kind,"Callable[[],SubtypeKind]"
ignore_type_params,bool
ignore_pos_arg_names,bool
ignore_declared_variance,bool
ignore_promotions,bool
_is_subtype,"Callable[[_, Type, Type],bool]"
left,Type
right,Type
visit_unbound_type,"Callable[[_, UnboundType],bool]"
left,UnboundType
visit_any,"Callable[[_, AnyType],bool]"
left,AnyType
visit_none_type,"Callable[[_, NoneTyp],bool]"
left,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],bool]"
left,UninhabitedType
visit_erased_type,"Callable[[_, ErasedType],bool]"
left,ErasedType
visit_deleted_type,"Callable[[_, DeletedType],bool]"
left,DeletedType
visit_instance,"Callable[[_, Instance],bool]"
left,Instance
visit_type_var,"Callable[[_, TypeVarType],bool]"
left,TypeVarType
visit_callable_type,"Callable[[_, CallableType],bool]"
left,CallableType
visit_tuple_type,"Callable[[_, TupleType],bool]"
left,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],bool]"
left,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],bool]"
t,LiteralType
visit_overloaded,"Callable[[_, Overloaded],bool]"
left,Overloaded
visit_union_type,"Callable[[_, UnionType],bool]"
left,UnionType
visit_partial_type,"Callable[[_, PartialType],bool]"
left,PartialType
visit_type_type,"Callable[[_, TypeType],bool]"
left,TypeType
pop_on_exit,"Callable[[List[Tuple[Instance, Instance]], Instance, Instance],Iterator[None]]"
stack,"List[Tuple[Instance, Instance]]"
left,Instance
right,Instance
is_protocol_implementation,"Callable[[Instance, Instance, bool],bool]"
left,Instance
right,Instance
proper_subtype,bool
find_member,"Callable[[str, Instance, Type],Union[Type, None]]"
name,str
itype,Instance
subtype,Type
get_member_flags,"Callable[[str, TypeInfo],Set[int]]"
name,str
info,TypeInfo
find_node_type,"Callable[[Union[Var, FuncBase], Instance, Type],Type]"
itype,Instance
subtype,Type
non_method_protocol_members,"Callable[[TypeInfo],List[str]]"
tp,TypeInfo
is_callable_compatible,"Callable[[CallableType, CallableType],bool]"
left,CallableType
right,CallableType
is_compat,"Callable[[Type, Type],bool]"
is_compat_return,"Union[Callable[[Type, Type],bool], None]"
ignore_return,bool
ignore_pos_arg_names,bool
check_args_covariantly,bool
allow_partial_overlap,bool
_incompatible,"Callable[[Union[FormalArgument, None], Union[FormalArgument, None]],bool]"
are_args_compatible,"Callable[[FormalArgument, FormalArgument, bool, bool, Callable[[Type, Type],bool]],bool]"
left,FormalArgument
right,FormalArgument
ignore_pos_arg_names,bool
allow_partial_overlap,bool
is_compat,"Callable[[Type, Type],bool]"
is_different,"Callable[[Union[object, None], Union[object, None]],bool]"
flip_compat_check,"Callable[[Callable[[Type, Type],bool]],Callable[[Type, Type],bool]]"
is_compat,"Callable[[Type, Type],bool]"
new_is_compat,"Callable[[Type, Type],bool]"
left,Type
right,Type
unify_generic_callable,"Callable[[CallableType, CallableType, bool, int],Union[CallableType, None]]"
type,CallableType
target,CallableType
ignore_return,bool
return_constraint_direction,int
constraints,List[mypy.constraints.Constraint]
restrict_subtype_away,"Callable[[Type, Type],Type]"
t,Type
s,Type
is_proper_subtype,"Callable[[Type, Type],bool]"
left,Type
right,Type
ignore_promotions,bool
__init__,"Callable[[_, Type],None]"
right,Type
ignore_promotions,bool
build_subtype_kind,"Callable[[],SubtypeKind]"
ignore_promotions,bool
_is_proper_subtype,"Callable[[_, Type, Type],bool]"
left,Type
right,Type
visit_unbound_type,"Callable[[_, UnboundType],bool]"
left,UnboundType
visit_any,"Callable[[_, AnyType],bool]"
left,AnyType
visit_none_type,"Callable[[_, NoneTyp],bool]"
left,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],bool]"
left,UninhabitedType
visit_erased_type,"Callable[[_, ErasedType],bool]"
left,ErasedType
visit_deleted_type,"Callable[[_, DeletedType],bool]"
left,DeletedType
visit_instance,"Callable[[_, Instance],bool]"
left,Instance
check_argument,"Callable[[Type, Type, int],bool]"
leftarg,Type
rightarg,Type
variance,int
visit_type_var,"Callable[[_, TypeVarType],bool]"
left,TypeVarType
visit_callable_type,"Callable[[_, CallableType],bool]"
left,CallableType
visit_tuple_type,"Callable[[_, TupleType],bool]"
left,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],bool]"
left,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],bool]"
left,LiteralType
visit_overloaded,"Callable[[_, Overloaded],bool]"
left,Overloaded
visit_union_type,"Callable[[_, UnionType],bool]"
left,UnionType
visit_partial_type,"Callable[[_, PartialType],bool]"
left,PartialType
visit_type_type,"Callable[[_, TypeType],bool]"
left,TypeType
is_more_precise,"Callable[[Type, Type],bool]"
left,Type
right,Type
ignore_promotions,bool
collect_memory_stats,"Callable[[],Tuple[Dict[str, int], Dict[str, int]]]"
print_memory_profile,"Callable[[bool],None]"
run_gc,bool
find_recursive_objects,"Callable[[List[object]],None]"
visit,"Callable[[object],None]"
o,object
erase_type,"Callable[[Type],Type]"
typ,Type
visit_unbound_type,"Callable[[_, UnboundType],Type]"
t,UnboundType
visit_any,"Callable[[_, AnyType],Type]"
t,AnyType
visit_none_type,"Callable[[_, NoneTyp],Type]"
t,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],Type]"
t,UninhabitedType
visit_erased_type,"Callable[[_, ErasedType],Type]"
t,ErasedType
visit_partial_type,"Callable[[_, PartialType],Type]"
t,PartialType
visit_deleted_type,"Callable[[_, DeletedType],Type]"
t,DeletedType
visit_instance,"Callable[[_, Instance],Type]"
t,Instance
visit_type_var,"Callable[[_, TypeVarType],Type]"
t,TypeVarType
visit_callable_type,"Callable[[_, CallableType],Type]"
t,CallableType
visit_overloaded,"Callable[[_, Overloaded],Type]"
t,Overloaded
visit_tuple_type,"Callable[[_, TupleType],Type]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],Type]"
t,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],Type]"
t,LiteralType
visit_union_type,"Callable[[_, UnionType],Type]"
t,UnionType
visit_type_type,"Callable[[_, TypeType],Type]"
t,TypeType
erase_typevars,"Callable[[Type, Union[Container[TypeVarId], None]],Type]"
t,Type
ids_to_erase,"Union[Container[TypeVarId], None]"
erase_id,"Callable[[TypeVarId],bool]"
id,TypeVarId
replace_meta_vars,"Callable[[Type, Type],Type]"
t,Type
target_type,Type
__init__,"Callable[[_, Callable[[TypeVarId],bool], Type],None]"
erase_id,"Callable[[TypeVarId],bool]"
replacement,Type
visit_type_var,"Callable[[_, TypeVarType],Type]"
t,TypeVarType
TYPE_EMPTY,Final
TYPE_UNANALYZED,Final
TYPE_PRECISE,Final
TYPE_IMPRECISE,Final
TYPE_ANY,Final
precision_names,Final
__init__,"Callable[[_, bool, str, Union[Dict[Expression, Type], None], bool, bool],None]"
inferred,bool
filename,str
typemap,"Union[Dict[Expression, Type], None]"
all_nodes,bool
visit_untyped_defs,bool
self.type_of_any_counter,typing.Counter[int]
self.any_line_map,"Dict[int, List[AnyType]]"
visit_func_def,"Callable[[_, FuncDef],None]"
o,FuncDef
visit_class_def,"Callable[[_, ClassDef],None]"
o,ClassDef
visit_type_application,"Callable[[_, TypeApplication],None]"
o,TypeApplication
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
o,AssignmentStmt
visit_name_expr,"Callable[[_, NameExpr],None]"
o,NameExpr
visit_yield_from_expr,"Callable[[_, YieldFromExpr],None]"
o,YieldFromExpr
visit_call_expr,"Callable[[_, CallExpr],None]"
o,CallExpr
visit_member_expr,"Callable[[_, MemberExpr],None]"
o,MemberExpr
visit_op_expr,"Callable[[_, OpExpr],None]"
o,OpExpr
visit_comparison_expr,"Callable[[_, ComparisonExpr],None]"
o,ComparisonExpr
visit_index_expr,"Callable[[_, IndexExpr],None]"
o,IndexExpr
visit_unary_expr,"Callable[[_, UnaryExpr],None]"
o,UnaryExpr
process_node,"Callable[[_, Expression],None]"
node,Expression
type,"Callable[[_, Union[Type, None]],None]"
log,"Callable[[_, str],None]"
string,str
record_line,"Callable[[_, int, int],None]"
line,int
precision,int
dump_type_stats,"Callable[[MypyFile, str, bool, Union[Dict[Expression, Type], None]],None]"
tree,MypyFile
path,str
inferred,bool
typemap,"Union[Dict[Expression, Type], None]"
is_special_module,"Callable[[str],bool]"
path,str
is_imprecise,"Callable[[Type],bool]"
t,Type
__init__,"Callable[[_],None]"
visit_any,"Callable[[_, AnyType],bool]"
t,AnyType
visit_instance,"Callable[[_, Instance],bool]"
t,Instance
is_imprecise2,"Callable[[Type],bool]"
t,Type
visit_callable_type,"Callable[[_, CallableType],bool]"
t,CallableType
is_generic,"Callable[[Type],bool]"
t,Type
is_complex,"Callable[[Type],bool]"
t,Type
ensure_dir_exists,"Callable[[str],None]"
dir,str
MISSING_FALLBACK,Final
_dummy_fallback,Final
TYPE_COMMENT_SYNTAX_ERROR,Final
TYPE_COMMENT_AST_ERROR,Final
parse,"Callable[[Union[str, bytes], str, Union[str, None], Union[Errors, None], Union[Options, None]],MypyFile]"
fnam,str
is_no_type_check_decorator,"Callable[[ast27.expr],bool]"
__init__,"Callable[[_, Options, bool, Errors],None]"
options,Options
is_stub,bool
errors,Errors
self.visitor_cache,"Dict[type, Callable[[Union[AST, None]],Any]]"
fail,"Callable[[_, str, int, int],None]"
msg,str
line,int
column,int
visit,"Callable[[_, Union[AST, None]],Any]"
set_line,"Callable[[_, N, Union[ast27.expr, ast27.stmt]],N]"
node,N
n,"Union[ast27.expr, ast27.stmt]"
op_map,"Final[Dict[typing.Type[AST], str]]"
from_operator,"Callable[[_, ast27.operator],str]"
comp_op_map,"Final[Dict[typing.Type[AST], str]]"
from_comp_operator,"Callable[[_, ast27.cmpop],str]"
as_block,"Callable[[_, List[ast27.stmt], int],Union[Block, None]]"
stmts,List[ast27.stmt]
lineno,int
as_required_block,"Callable[[_, List[ast27.stmt], int],Block]"
stmts,List[ast27.stmt]
lineno,int
in_class,"Callable[[_],bool]"
translate_module_id,"Callable[[_, str],str]"
id,str
visit_Module,"Callable[[_, ast27.Module],MypyFile]"
visit_FunctionDef,"Callable[[_, ast27.FunctionDef],Statement]"
arg_names,"List[Union[str, None]]"
arg_types,"List[Union[Type, None]]"
set_type_optional,"Callable[[_, Union[Type, None], Union[Expression, None]],None]"
transform_args,"Callable[[_, ast27.arguments, int],Tuple[List[Argument], List[Statement]]]"
line,int
type_comments,"Sequence[Union[str, None]]"
fail_arg,"Callable[[str, None],None]"
msg,str
arg,None
convert_arg,"Callable[[_, int, ast27.expr, int, List[Statement]],Var]"
index,int
line,int
get_type,"Callable[[_, int, Sequence[Union[str, None]], TypeConverter],Union[Type, None]]"
i,int
type_comments,"Sequence[Union[str, None]]"
converter,TypeConverter
stringify_name,"Callable[[_, AST],str]"
n,AST
visit_ClassDef,"Callable[[_, ast27.ClassDef],ClassDef]"
visit_Return,"Callable[[_, ast27.Return],ReturnStmt]"
visit_Delete,"Callable[[_, ast27.Delete],DelStmt]"
visit_Assign,"Callable[[_, ast27.Assign],AssignmentStmt]"
visit_AugAssign,"Callable[[_, ast27.AugAssign],OperatorAssignmentStmt]"
visit_For,"Callable[[_, ast27.For],ForStmt]"
visit_While,"Callable[[_, ast27.While],WhileStmt]"
visit_If,"Callable[[_, ast27.If],IfStmt]"
visit_With,"Callable[[_, ast27.With],WithStmt]"
visit_Raise,"Callable[[_, ast27.Raise],RaiseStmt]"
visit_TryExcept,"Callable[[_, ast27.TryExcept],TryStmt]"
visit_TryFinally,"Callable[[_, ast27.TryFinally],TryStmt]"
try_handler,"Callable[[_, List[ast27.stmt], List[ast27.ExceptHandler], List[ast27.stmt], List[ast27.stmt], int],TryStmt]"
body,List[ast27.stmt]
handlers,List[ast27.ExceptHandler]
orelse,List[ast27.stmt]
finalbody,List[ast27.stmt]
lineno,int
vs,"List[Union[NameExpr, None]]"
visit_Print,"Callable[[_, ast27.Print],PrintStmt]"
visit_Exec,"Callable[[_, ast27.Exec],ExecStmt]"
visit_Repr,"Callable[[_, ast27.Repr],BackquoteExpr]"
visit_Assert,"Callable[[_, ast27.Assert],AssertStmt]"
visit_Import,"Callable[[_, ast27.Import],Import]"
names,"List[Tuple[str, Union[str, None]]]"
visit_ImportFrom,"Callable[[_, ast27.ImportFrom],ImportBase]"
i,ImportBase
visit_Global,"Callable[[_, ast27.Global],GlobalDecl]"
visit_Expr,"Callable[[_, ast27.Expr],ExpressionStmt]"
visit_Pass,"Callable[[_, ast27.Pass],PassStmt]"
visit_Break,"Callable[[_, ast27.Break],BreakStmt]"
visit_Continue,"Callable[[_, ast27.Continue],ContinueStmt]"
visit_BoolOp,"Callable[[_, ast27.BoolOp],OpExpr]"
group,"Callable[[_, List[Expression], str],OpExpr]"
op,str
visit_BinOp,"Callable[[_, ast27.BinOp],OpExpr]"
visit_UnaryOp,"Callable[[_, ast27.UnaryOp],UnaryExpr]"
visit_Lambda,"Callable[[_, ast27.Lambda],LambdaExpr]"
visit_IfExp,"Callable[[_, ast27.IfExp],ConditionalExpr]"
visit_Dict,"Callable[[_, ast27.Dict],DictExpr]"
visit_Set,"Callable[[_, ast27.Set],SetExpr]"
visit_ListComp,"Callable[[_, ast27.ListComp],ListComprehension]"
visit_SetComp,"Callable[[_, ast27.SetComp],SetComprehension]"
visit_DictComp,"Callable[[_, ast27.DictComp],DictionaryComprehension]"
visit_GeneratorExp,"Callable[[_, ast27.GeneratorExp],GeneratorExpr]"
visit_Yield,"Callable[[_, ast27.Yield],YieldExpr]"
visit_Compare,"Callable[[_, ast27.Compare],ComparisonExpr]"
visit_Call,"Callable[[_, Call],CallExpr]"
n,Call
arg_types,List[ast27.expr]
signature,"List[Union[str, None]]"
visit_Num,"Callable[[_, ast27.Num],Expression]"
expr,Expression
visit_Str,"Callable[[_, ast27.Str],Expression]"
visit_Ellipsis,"Callable[[_, ast27.Ellipsis],EllipsisExpr]"
visit_Attribute,"Callable[[_, Attribute],Expression]"
n,Attribute
e,Expression
visit_Subscript,"Callable[[_, ast27.Subscript],IndexExpr]"
visit_Name,"Callable[[_, Name],NameExpr]"
n,Name
visit_Tuple,"Callable[[_, ast27_Tuple],TupleExpr]"
n,ast27_Tuple
visit_Slice,"Callable[[_, ast27.Slice],SliceExpr]"
visit_ExtSlice,"Callable[[_, ast27.ExtSlice],TupleExpr]"
visit_Index,"Callable[[_, ast27.Index],Expression]"
map_actuals_to_formals,"Callable[[List[int], Union[Sequence[Union[str, None]], None], List[int], Sequence[Union[str, None]], Callable[[int],Type]],List[List[int]]]"
caller_names,"Union[Sequence[Union[str, None]], None]"
callee_names,"Sequence[Union[str, None]]"
caller_arg_type,"Callable[[int],Type]"
map,List[List[int]]
map_formals_to_actuals,"Callable[[List[int], Union[Sequence[Union[str, None]], None], List[int], List[Union[str, None]], Callable[[int],Type]],List[List[int]]]"
caller_names,"Union[Sequence[Union[str, None]], None]"
callee_names,"List[Union[str, None]]"
caller_arg_type,"Callable[[int],Type]"
actual_to_formal,List[List[int]]
get_actual_type,"Callable[[Type, int, List[int]],Type]"
arg_type,Type
kind,int
analyze_member_access,"Callable[[str, Type, Context, bool, bool, bool, Callable[[str],Instance], Callable[[str, Context],None], MessageBuilder],Type]"
name,str
typ,Type
node,Context
is_lvalue,bool
is_super,bool
is_operator,bool
builtin_type,"Callable[[str],Instance]"
not_ready_callback,"Callable[[str, Context],None]"
msg,MessageBuilder
original_type,Type
chk,mypy.checker.TypeChecker
analyze_member_var_access,"Callable[[str, Instance, TypeInfo, Context, bool, bool, Callable[[str],Instance], Callable[[str, Context],None], MessageBuilder, Type, mypy.checker.TypeChecker],Type]"
name,str
itype,Instance
info,TypeInfo
node,Context
is_lvalue,bool
is_super,bool
builtin_type,"Callable[[str],Instance]"
not_ready_callback,"Callable[[str, Context],None]"
msg,MessageBuilder
original_type,Type
chk,mypy.checker.TypeChecker
check_final_member,"Callable[[str, TypeInfo, MessageBuilder, Context],None]"
name,str
info,TypeInfo
msg,MessageBuilder
ctx,Context
analyze_descriptor_access,"Callable[[Type, Type, Callable[[str],Instance], MessageBuilder, Context],Type]"
instance_type,Type
descriptor_type,Type
builtin_type,"Callable[[str],Instance]"
msg,MessageBuilder
context,Context
chk,mypy.checker.TypeChecker
instance_alias_type,"Callable[[TypeAlias, Callable[[str],Instance]],Type]"
alias,TypeAlias
builtin_type,"Callable[[str],Instance]"
analyze_var,"Callable[[str, Var, Instance, TypeInfo, Context, bool, MessageBuilder, Type, Callable[[str],Instance], Callable[[str, Context],None]],Type]"
name,str
var,Var
itype,Instance
info,TypeInfo
node,Context
is_lvalue,bool
msg,MessageBuilder
original_type,Type
builtin_type,"Callable[[str],Instance]"
not_ready_callback,"Callable[[str, Context],None]"
chk,mypy.checker.TypeChecker
implicit,bool
freeze_type_vars,"Callable[[Type],None]"
member_type,Type
lookup_member_var_or_accessor,"Callable[[TypeInfo, str, bool],Union[SymbolNode, None]]"
info,TypeInfo
name,str
is_lvalue,bool
check_self_arg,"Callable[[FunctionLike, Type, bool, Context, str, MessageBuilder],None]"
functype,FunctionLike
dispatched_arg_type,Type
is_classmethod,bool
context,Context
name,str
msg,MessageBuilder
analyze_class_attribute_access,"Callable[[Instance, str, Context, bool, Callable[[str],Instance], Callable[[str, Context],None], MessageBuilder, Type, mypy.checker.TypeChecker],Union[Type, None]]"
itype,Instance
name,str
context,Context
is_lvalue,bool
builtin_type,"Callable[[str],Instance]"
not_ready_callback,"Callable[[str, Context],None]"
msg,MessageBuilder
original_type,Type
chk,mypy.checker.TypeChecker
add_class_tvars,"Callable[[Type, Instance, bool, Callable[[str],Instance], Type],Type]"
t,Type
itype,Instance
is_classmethod,bool
builtin_type,"Callable[[str],Instance]"
original_type,Type
info,TypeInfo
type_object_type,"Callable[[TypeInfo, Callable[[str],Instance]],Type]"
info,TypeInfo
builtin_type,"Callable[[str],Instance]"
type_object_type_from_function,"Callable[[FuncBase, TypeInfo, Instance],FunctionLike]"
init_or_new,FuncBase
info,TypeInfo
fallback,Instance
class_callable,"Callable[[CallableType, TypeInfo, Instance, Union[str, None]],CallableType]"
init_type,CallableType
info,TypeInfo
type_type,Instance
map_type_from_supertype,"Callable[[Type, TypeInfo, TypeInfo],Type]"
typ,Type
sub_info,TypeInfo
super_info,TypeInfo
bind_self,"Callable[[F, Union[Type, None], bool],F]"
method,F
is_classmethod,bool
expand,"Callable[[Type],Type]"
target,Type
erase_to_bound,"Callable[[Type],Type]"
t,Type
is_final_node,"Callable[[Union[SymbolNode, None]],bool]"
__init__,"Callable[[_, Union[TypeVarScope, None], bool, Union[TypeVarScope, None]],None]"
is_class_scope,bool
allow_binding,"Callable[[_, str],bool]"
fullname,str
method_frame,"Callable[[_],TypeVarScope]"
class_frame,"Callable[[_],TypeVarScope]"
bind_new,"Callable[[_, str, TypeVarExpr],TypeVarDef]"
name,str
tvar_expr,TypeVarExpr
bind_existing,"Callable[[_, TypeVarDef],None]"
tvar_def,TypeVarDef
__str__,"Callable[[_],str]"
third_party_modules,Final
common_std_lib_modules,Final
python2_std_lib_modules,Final
python3_std_lib_modules,Final
is_third_party_module,"Callable[[str],bool]"
id,str
is_py2_std_lib_module,"Callable[[str],bool]"
id,str
is_py3_std_lib_module,"Callable[[str],bool]"
id,str
is_in_module_collection,"Callable[[Set[str], str],bool]"
id,str
ENCODING_RE,Final
default_python2_interpreter,Final
split_module_names,"Callable[[str],List[str]]"
mod_name,str
short_type,"Callable[[object],str]"
obj,object
find_python_encoding,"Callable[[bytes, Tuple[int, int]],Tuple[str, int]]"
text,bytes
decode_python_encoding,"Callable[[bytes, Tuple[int, int]],str]"
source,bytes
PASS_TEMPLATE,Final
FAIL_TEMPLATE,Final
ERROR_TEMPLATE,Final
write_junit_xml,"Callable[[float, bool, List[str], str],None]"
dt,float
serious,bool
path,str
__init__,"Callable[[_],None]"
id,"Callable[[_, object],int]"
o,object
get_prefix,"Callable[[str],str]"
fullname,str
correct_relative_import,"Callable[[str, int, str, bool],Tuple[str, bool]]"
cur_mod_id,str
relative,int
target,str
is_cur_package_init_file,bool
fields_cache,"Final[Dict[Type[object], List[str]]]"
replace_object_state,"Callable[[object, object, bool],None]"
new,object
old,object
copy_dict,bool
is_sub_path,"Callable[[str, str],bool]"
path1,str
path2,str
hard_exit,"Callable[[int],None]"
status,int
_extract_argument_name,"Callable[[Expression],Union[str, None]]"
expr,Expression
expr_to_unanalyzed_type,"Callable[[Expression, Union[Expression, None]],Type]"
expr,Expression
typ,Type
_notimplemented_helper,"Callable[[_, str],NotImplementedError]"
name,str
visit_unbound_type,"Callable[[_, UnboundType],T]"
t,UnboundType
visit_any,"Callable[[_, AnyType],T]"
t,AnyType
visit_none_type,"Callable[[_, NoneTyp],T]"
t,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],T]"
t,UninhabitedType
visit_erased_type,"Callable[[_, ErasedType],T]"
t,ErasedType
visit_deleted_type,"Callable[[_, DeletedType],T]"
t,DeletedType
visit_type_var,"Callable[[_, TypeVarType],T]"
t,TypeVarType
visit_instance,"Callable[[_, Instance],T]"
t,Instance
visit_callable_type,"Callable[[_, CallableType],T]"
t,CallableType
visit_overloaded,"Callable[[_, Overloaded],T]"
t,Overloaded
visit_tuple_type,"Callable[[_, TupleType],T]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],T]"
t,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],T]"
t,LiteralType
visit_union_type,"Callable[[_, UnionType],T]"
t,UnionType
visit_partial_type,"Callable[[_, PartialType],T]"
t,PartialType
visit_type_type,"Callable[[_, TypeType],T]"
t,TypeType
visit_forwardref_type,"Callable[[_, ForwardRef],T]"
t,ForwardRef
visit_star_type,"Callable[[_, StarType],T]"
t,StarType
visit_type_list,"Callable[[_, TypeList],T]"
t,TypeList
visit_callable_argument,"Callable[[_, CallableArgument],T]"
t,CallableArgument
visit_ellipsis_type,"Callable[[_, EllipsisType],T]"
t,EllipsisType
visit_unbound_type,"Callable[[_, UnboundType],Type]"
t,UnboundType
visit_any,"Callable[[_, AnyType],Type]"
t,AnyType
visit_none_type,"Callable[[_, NoneTyp],Type]"
t,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],Type]"
t,UninhabitedType
visit_erased_type,"Callable[[_, ErasedType],Type]"
t,ErasedType
visit_deleted_type,"Callable[[_, DeletedType],Type]"
t,DeletedType
visit_instance,"Callable[[_, Instance],Type]"
t,Instance
visit_type_var,"Callable[[_, TypeVarType],Type]"
t,TypeVarType
visit_partial_type,"Callable[[_, PartialType],Type]"
t,PartialType
visit_callable_type,"Callable[[_, CallableType],Type]"
t,CallableType
visit_tuple_type,"Callable[[_, TupleType],Type]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],Type]"
t,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],Type]"
t,LiteralType
visit_union_type,"Callable[[_, UnionType],Type]"
t,UnionType
visit_overloaded,"Callable[[_, Overloaded],Type]"
t,Overloaded
visit_type_type,"Callable[[_, TypeType],Type]"
t,TypeType
visit_forwardref_type,"Callable[[_, ForwardRef],Type]"
t,ForwardRef
__init__,"Callable[[_, Callable[[Iterable[T]],T]],None]"
strategy,"Callable[[Iterable[T]],T]"
visit_unbound_type,"Callable[[_, UnboundType],T]"
t,UnboundType
visit_type_list,"Callable[[_, TypeList],T]"
t,TypeList
visit_callable_argument,"Callable[[_, CallableArgument],T]"
t,CallableArgument
visit_any,"Callable[[_, AnyType],T]"
t,AnyType
visit_uninhabited_type,"Callable[[_, UninhabitedType],T]"
t,UninhabitedType
visit_none_type,"Callable[[_, NoneTyp],T]"
t,NoneTyp
visit_erased_type,"Callable[[_, ErasedType],T]"
t,ErasedType
visit_deleted_type,"Callable[[_, DeletedType],T]"
t,DeletedType
visit_type_var,"Callable[[_, TypeVarType],T]"
t,TypeVarType
visit_partial_type,"Callable[[_, PartialType],T]"
t,PartialType
visit_instance,"Callable[[_, Instance],T]"
t,Instance
visit_callable_type,"Callable[[_, CallableType],T]"
t,CallableType
visit_tuple_type,"Callable[[_, TupleType],T]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],T]"
t,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],T]"
t,LiteralType
visit_star_type,"Callable[[_, StarType],T]"
t,StarType
visit_union_type,"Callable[[_, UnionType],T]"
t,UnionType
visit_overloaded,"Callable[[_, Overloaded],T]"
t,Overloaded
visit_type_type,"Callable[[_, TypeType],T]"
t,TypeType
visit_forwardref_type,"Callable[[_, ForwardRef],T]"
t,ForwardRef
visit_ellipsis_type,"Callable[[_, EllipsisType],T]"
t,EllipsisType
query_types,"Callable[[_, Iterable[Type]],T]"
OpenProcess,"Callable[[DWORD, int, int],HANDLE]"
GetExitCodeProcess,"Callable[[HANDLE, Any],int]"
alive,"Callable[[int],bool]"
pid,int
kill,"Callable[[int],None]"
pid,int
__init__,"Callable[[_, Options, SemanticAnalyzerInterface, MessageBuilder],None]"
options,Options
api,SemanticAnalyzerInterface
msg,MessageBuilder
process_newtype_declaration,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
analyze_newtype_declaration,"Callable[[_, AssignmentStmt],Tuple[Union[str, None], Union[CallExpr, None]]]"
s,AssignmentStmt
check_newtype_args,"Callable[[_, str, CallExpr, Context],Union[Type, None]]"
name,str
call,CallExpr
context,Context
build_newtype_typeinfo,"Callable[[_, str, Type, Instance],TypeInfo]"
name,str
old_type,Type
base_type,Instance
make_argument,"Callable[[_, str, Type],Argument]"
name,str
type,Type
fail,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
orig_stat,Final
MEM_PROFILE,Final
stat_proxy,"Callable[[str],os.stat_result]"
path,str
main,"Callable[[Union[str, None], Union[List[str], None]],None]"
args,"Union[List[str], None]"
flush_errors,"Callable[[List[str], bool],None]"
serious,bool
readlinkabs,"Callable[[str],str]"
link,str
__init__,"Callable[[_, object, object, str],None]"
standard_namespace,object
alt_namespace,object
alt_prefix,str
__setattr__,"Callable[[_, str, Any],None]"
name,str
value,Any
__getattr__,"Callable[[_, str],Any]"
name,str
parse_version,"Callable[[str],Tuple[int, int]]"
v,str
__init__,"Callable[[_, str],None]"
prog,str
_fill_text,"Callable[[_, str, int, int],str]"
text,str
width,int
indent,int
flag_prefix_pairs,Final
flag_prefix_map,"Final[Dict[str, str]]"
invert_flag_name,"Callable[[str],str]"
flag,str
python_executable_prefix,"Callable[[str],List[str]]"
v,str
_python_version_from_executable,"Callable[[str],Tuple[int, int]]"
python_executable,str
_python_executable_from_version,"Callable[[Tuple[int, int]],str]"
infer_python_version_and_executable,"Callable[[Options, argparse.Namespace],None]"
options,Options
HEADER,Final
DESCRIPTION,Final
FOOTER,Final
process_options,"Callable[[List[str], bool, bool, Union[FileSystemCache, None]],Tuple[List[BuildSource], Options]]"
require_targets,bool
server_options,bool
strict_flag_assignments,"List[Tuple[str, bool]]"
add_invertible_flag,"Callable[[str],None]"
flag,str
default,bool
help,str
strict_flag,bool
group,"Union[argparse._ActionsContainer, None]"
process_package_roots,"Callable[[Union[FileSystemCache, None], argparse.ArgumentParser, Options],None]"
options,Options
process_cache_map,"Callable[[argparse.ArgumentParser, argparse.Namespace, Options],None]"
options,Options
config_types,Final
parse_config_file,"Callable[[Options, Union[str, None]],None]"
options,Options
parse_section,"Callable[[str, Options, Mapping[str, str]],Tuple[Dict[str, object], Dict[str, str]]]"
prefix,str
template,Options
v,Any
fail,"Callable[[str],None]"
msg,str
__init__,"Callable[[_],None]"
visit_mypy_file,"Callable[[_, MypyFile],None]"
o,MypyFile
visit_block,"Callable[[_, Block],None]"
block,Block
visit_func,"Callable[[_, FuncItem],None]"
o,FuncItem
visit_func_def,"Callable[[_, FuncDef],None]"
o,FuncDef
visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
o,OverloadedFuncDef
visit_class_def,"Callable[[_, ClassDef],None]"
o,ClassDef
visit_decorator,"Callable[[_, Decorator],None]"
o,Decorator
visit_expression_stmt,"Callable[[_, ExpressionStmt],None]"
o,ExpressionStmt
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
o,AssignmentStmt
visit_operator_assignment_stmt,"Callable[[_, OperatorAssignmentStmt],None]"
o,OperatorAssignmentStmt
visit_while_stmt,"Callable[[_, WhileStmt],None]"
o,WhileStmt
visit_for_stmt,"Callable[[_, ForStmt],None]"
o,ForStmt
visit_return_stmt,"Callable[[_, ReturnStmt],None]"
o,ReturnStmt
visit_assert_stmt,"Callable[[_, AssertStmt],None]"
o,AssertStmt
visit_del_stmt,"Callable[[_, DelStmt],None]"
o,DelStmt
visit_if_stmt,"Callable[[_, IfStmt],None]"
o,IfStmt
visit_raise_stmt,"Callable[[_, RaiseStmt],None]"
o,RaiseStmt
visit_try_stmt,"Callable[[_, TryStmt],None]"
o,TryStmt
visit_with_stmt,"Callable[[_, WithStmt],None]"
o,WithStmt
visit_member_expr,"Callable[[_, MemberExpr],None]"
o,MemberExpr
visit_yield_from_expr,"Callable[[_, YieldFromExpr],None]"
o,YieldFromExpr
visit_yield_expr,"Callable[[_, YieldExpr],None]"
o,YieldExpr
visit_call_expr,"Callable[[_, CallExpr],None]"
o,CallExpr
visit_op_expr,"Callable[[_, OpExpr],None]"
o,OpExpr
visit_comparison_expr,"Callable[[_, ComparisonExpr],None]"
o,ComparisonExpr
visit_slice_expr,"Callable[[_, SliceExpr],None]"
o,SliceExpr
visit_cast_expr,"Callable[[_, CastExpr],None]"
o,CastExpr
visit_reveal_expr,"Callable[[_, RevealExpr],None]"
o,RevealExpr
visit_unary_expr,"Callable[[_, UnaryExpr],None]"
o,UnaryExpr
visit_list_expr,"Callable[[_, ListExpr],None]"
o,ListExpr
visit_tuple_expr,"Callable[[_, TupleExpr],None]"
o,TupleExpr
visit_dict_expr,"Callable[[_, DictExpr],None]"
o,DictExpr
visit_set_expr,"Callable[[_, SetExpr],None]"
o,SetExpr
visit_index_expr,"Callable[[_, IndexExpr],None]"
o,IndexExpr
visit_generator_expr,"Callable[[_, GeneratorExpr],None]"
o,GeneratorExpr
visit_dictionary_comprehension,"Callable[[_, DictionaryComprehension],None]"
o,DictionaryComprehension
visit_list_comprehension,"Callable[[_, ListComprehension],None]"
o,ListComprehension
visit_set_comprehension,"Callable[[_, SetComprehension],None]"
o,SetComprehension
visit_conditional_expr,"Callable[[_, ConditionalExpr],None]"
o,ConditionalExpr
visit_type_application,"Callable[[_, TypeApplication],None]"
o,TypeApplication
visit_lambda_expr,"Callable[[_, LambdaExpr],None]"
o,LambdaExpr
visit_star_expr,"Callable[[_, StarExpr],None]"
o,StarExpr
visit_backquote_expr,"Callable[[_, BackquoteExpr],None]"
o,BackquoteExpr
visit_await_expr,"Callable[[_, AwaitExpr],None]"
o,AwaitExpr
visit_super_expr,"Callable[[_, SuperExpr],None]"
o,SuperExpr
visit_import,"Callable[[_, Import],None]"
o,Import
visit_import_from,"Callable[[_, ImportFrom],None]"
o,ImportFrom
visit_print_stmt,"Callable[[_, PrintStmt],None]"
o,PrintStmt
visit_exec_stmt,"Callable[[_, ExecStmt],None]"
o,ExecStmt
__init__,"Callable[[_],None]"
visit_mypy_file,"Callable[[_, MypyFile],MypyFile]"
node,MypyFile
visit_import,"Callable[[_, Import],Import]"
node,Import
visit_import_from,"Callable[[_, ImportFrom],ImportFrom]"
node,ImportFrom
visit_import_all,"Callable[[_, ImportAll],ImportAll]"
node,ImportAll
copy_argument,"Callable[[_, Argument],Argument]"
argument,Argument
visit_func_def,"Callable[[_, FuncDef],FuncDef]"
node,FuncDef
visit_lambda_expr,"Callable[[_, LambdaExpr],LambdaExpr]"
node,LambdaExpr
copy_function_attributes,"Callable[[_, FuncItem, FuncItem],None]"
new,FuncItem
original,FuncItem
visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],OverloadedFuncDef]"
node,OverloadedFuncDef
visit_class_def,"Callable[[_, ClassDef],ClassDef]"
node,ClassDef
visit_global_decl,"Callable[[_, GlobalDecl],GlobalDecl]"
node,GlobalDecl
visit_nonlocal_decl,"Callable[[_, NonlocalDecl],NonlocalDecl]"
node,NonlocalDecl
visit_block,"Callable[[_, Block],Block]"
node,Block
visit_decorator,"Callable[[_, Decorator],Decorator]"
node,Decorator
visit_var,"Callable[[_, Var],Var]"
node,Var
visit_expression_stmt,"Callable[[_, ExpressionStmt],ExpressionStmt]"
node,ExpressionStmt
visit_assignment_stmt,"Callable[[_, AssignmentStmt],AssignmentStmt]"
node,AssignmentStmt
duplicate_assignment,"Callable[[_, AssignmentStmt],AssignmentStmt]"
node,AssignmentStmt
visit_operator_assignment_stmt,"Callable[[_, OperatorAssignmentStmt],OperatorAssignmentStmt]"
node,OperatorAssignmentStmt
visit_while_stmt,"Callable[[_, WhileStmt],WhileStmt]"
node,WhileStmt
visit_for_stmt,"Callable[[_, ForStmt],ForStmt]"
node,ForStmt
visit_return_stmt,"Callable[[_, ReturnStmt],ReturnStmt]"
node,ReturnStmt
visit_assert_stmt,"Callable[[_, AssertStmt],AssertStmt]"
node,AssertStmt
visit_del_stmt,"Callable[[_, DelStmt],DelStmt]"
node,DelStmt
visit_if_stmt,"Callable[[_, IfStmt],IfStmt]"
node,IfStmt
visit_break_stmt,"Callable[[_, BreakStmt],BreakStmt]"
node,BreakStmt
visit_continue_stmt,"Callable[[_, ContinueStmt],ContinueStmt]"
node,ContinueStmt
visit_pass_stmt,"Callable[[_, PassStmt],PassStmt]"
node,PassStmt
visit_raise_stmt,"Callable[[_, RaiseStmt],RaiseStmt]"
node,RaiseStmt
visit_try_stmt,"Callable[[_, TryStmt],TryStmt]"
node,TryStmt
visit_with_stmt,"Callable[[_, WithStmt],WithStmt]"
node,WithStmt
visit_print_stmt,"Callable[[_, PrintStmt],PrintStmt]"
node,PrintStmt
visit_exec_stmt,"Callable[[_, ExecStmt],ExecStmt]"
node,ExecStmt
visit_star_expr,"Callable[[_, StarExpr],StarExpr]"
node,StarExpr
visit_int_expr,"Callable[[_, IntExpr],IntExpr]"
node,IntExpr
visit_str_expr,"Callable[[_, StrExpr],StrExpr]"
node,StrExpr
visit_bytes_expr,"Callable[[_, BytesExpr],BytesExpr]"
node,BytesExpr
visit_unicode_expr,"Callable[[_, UnicodeExpr],UnicodeExpr]"
node,UnicodeExpr
visit_float_expr,"Callable[[_, FloatExpr],FloatExpr]"
node,FloatExpr
visit_complex_expr,"Callable[[_, ComplexExpr],ComplexExpr]"
node,ComplexExpr
visit_ellipsis,"Callable[[_, EllipsisExpr],EllipsisExpr]"
node,EllipsisExpr
visit_name_expr,"Callable[[_, NameExpr],NameExpr]"
node,NameExpr
duplicate_name,"Callable[[_, NameExpr],NameExpr]"
node,NameExpr
visit_member_expr,"Callable[[_, MemberExpr],MemberExpr]"
node,MemberExpr
copy_ref,"Callable[[_, RefExpr, RefExpr],None]"
new,RefExpr
original,RefExpr
visit_yield_from_expr,"Callable[[_, YieldFromExpr],YieldFromExpr]"
node,YieldFromExpr
visit_yield_expr,"Callable[[_, YieldExpr],YieldExpr]"
node,YieldExpr
visit_await_expr,"Callable[[_, AwaitExpr],AwaitExpr]"
node,AwaitExpr
visit_call_expr,"Callable[[_, CallExpr],CallExpr]"
node,CallExpr
visit_op_expr,"Callable[[_, OpExpr],OpExpr]"
node,OpExpr
visit_comparison_expr,"Callable[[_, ComparisonExpr],ComparisonExpr]"
node,ComparisonExpr
visit_cast_expr,"Callable[[_, CastExpr],CastExpr]"
node,CastExpr
visit_reveal_expr,"Callable[[_, RevealExpr],RevealExpr]"
node,RevealExpr
visit_super_expr,"Callable[[_, SuperExpr],SuperExpr]"
node,SuperExpr
visit_unary_expr,"Callable[[_, UnaryExpr],UnaryExpr]"
node,UnaryExpr
visit_list_expr,"Callable[[_, ListExpr],ListExpr]"
node,ListExpr
visit_dict_expr,"Callable[[_, DictExpr],DictExpr]"
node,DictExpr
visit_tuple_expr,"Callable[[_, TupleExpr],TupleExpr]"
node,TupleExpr
visit_set_expr,"Callable[[_, SetExpr],SetExpr]"
node,SetExpr
visit_index_expr,"Callable[[_, IndexExpr],IndexExpr]"
node,IndexExpr
visit_type_application,"Callable[[_, TypeApplication],TypeApplication]"
node,TypeApplication
visit_list_comprehension,"Callable[[_, ListComprehension],ListComprehension]"
node,ListComprehension
visit_set_comprehension,"Callable[[_, SetComprehension],SetComprehension]"
node,SetComprehension
visit_dictionary_comprehension,"Callable[[_, DictionaryComprehension],DictionaryComprehension]"
node,DictionaryComprehension
visit_generator_expr,"Callable[[_, GeneratorExpr],GeneratorExpr]"
node,GeneratorExpr
duplicate_generator,"Callable[[_, GeneratorExpr],GeneratorExpr]"
node,GeneratorExpr
visit_slice_expr,"Callable[[_, SliceExpr],SliceExpr]"
node,SliceExpr
visit_conditional_expr,"Callable[[_, ConditionalExpr],ConditionalExpr]"
node,ConditionalExpr
visit_backquote_expr,"Callable[[_, BackquoteExpr],BackquoteExpr]"
node,BackquoteExpr
visit_type_var_expr,"Callable[[_, TypeVarExpr],TypeVarExpr]"
node,TypeVarExpr
visit_type_alias_expr,"Callable[[_, TypeAliasExpr],TypeAliasExpr]"
node,TypeAliasExpr
visit_newtype_expr,"Callable[[_, NewTypeExpr],NewTypeExpr]"
node,NewTypeExpr
visit_namedtuple_expr,"Callable[[_, NamedTupleExpr],NamedTupleExpr]"
node,NamedTupleExpr
visit_enum_call_expr,"Callable[[_, EnumCallExpr],EnumCallExpr]"
node,EnumCallExpr
visit_typeddict_expr,"Callable[[_, TypedDictExpr],Node]"
node,TypedDictExpr
visit__promote_expr,"Callable[[_, PromoteExpr],PromoteExpr]"
node,PromoteExpr
visit_temp_node,"Callable[[_, TempNode],TempNode]"
node,TempNode
node,"Callable[[_, Node],Node]"
node,Node
mypyfile,"Callable[[_, MypyFile],MypyFile]"
node,MypyFile
expr,"Callable[[_, Expression],Expression]"
expr,Expression
stmt,"Callable[[_, Statement],Statement]"
stmt,Statement
block,"Callable[[_, Block],Block]"
block,Block
optional_expressions,"Callable[[_, Iterable[Union[Expression, None]]],List[Union[Expression, None]]]"
expressions,"Iterable[Union[Expression, None]]"
optional_names,"Callable[[_, Iterable[Union[NameExpr, None]]],List[Union[NameExpr, None]]]"
names,"Iterable[Union[NameExpr, None]]"
result,"List[Union[NameExpr, None]]"
type,"Callable[[_, Type],Type]"
type,Type
__init__,"Callable[[_, TransformVisitor],None]"
transformer,TransformVisitor
visit_func_def,"Callable[[_, FuncDef],None]"
node,FuncDef
import_ctx,"List[Tuple[str, int]]"
__init__,"Callable[[_, List[Tuple[str, int]], str, Union[str, None], Union[str, None], Union[str, None], int, int, str, str, bool, bool, Union[Tuple[str, int], None], Union[str, None]],None]"
import_ctx,"List[Tuple[str, int]]"
file,str
line,int
column,int
severity,str
message,str
blocker,bool
only_once,bool
origin,"Union[Tuple[str, int], None]"
error_info_map,"Dict[str, List[ErrorInfo]]"
import_ctx,"List[Tuple[str, int]]"
file,str
ignored_lines,"Dict[str, Set[int]]"
used_ignored_lines,"Dict[str, Set[int]]"
show_error_context,bool
show_column_numbers,bool
__init__,"Callable[[_, bool, bool],None]"
show_error_context,bool
show_column_numbers,bool
initialize,"Callable[[_],None]"
reset,"Callable[[_],None]"
copy,"Callable[[_],Errors]"
set_ignore_prefix,"Callable[[_, str],None]"
prefix,str
simplify_path,"Callable[[_, str],str]"
file,str
set_file,"Callable[[_, str, Union[str, None], Union[Scope, None]],None]"
file,str
set_file_ignored_lines,"Callable[[_, str, Set[int], bool],None]"
file,str
ignore_all,bool
import_context,"Callable[[_],List[Tuple[str, int]]]"
set_import_context,"Callable[[_, List[Tuple[str, int]]],None]"
ctx,"List[Tuple[str, int]]"
report,"Callable[[_, int, Union[int, None], str, bool, str, Union[str, None], bool, Union[int, None], int],None]"
line,int
message,str
blocker,bool
severity,str
only_once,bool
offset,int
_add_error_info,"Callable[[_, str, ErrorInfo],None]"
file,str
info,ErrorInfo
add_error_info,"Callable[[_, ErrorInfo],None]"
info,ErrorInfo
clear_errors_in_targets,"Callable[[_, str, Set[str]],None]"
path,str
generate_unused_ignore_notes,"Callable[[_, str],None]"
file,str
is_typeshed_file,"Callable[[_, str],bool]"
file,str
num_messages,"Callable[[_],int]"
is_errors,"Callable[[_],bool]"
is_blockers,"Callable[[_],bool]"
is_errors_for_file,"Callable[[_, str],bool]"
file,str
raise_error,"Callable[[_],None]"
file_messages,"Callable[[_, str],List[str]]"
path,str
render_messages,"Callable[[_, List[ErrorInfo]],List[Tuple[Union[str, None], int, int, str, str]]]"
result,"List[Tuple[Union[str, None], int, int, str, str]]"
prev_import_context,"List[Tuple[str, int]]"
remove_duplicates,"Callable[[_, List[Tuple[Union[str, None], int, int, str, str]]],List[Tuple[Union[str, None], int, int, str, str]]]"
errors,"List[Tuple[Union[str, None], int, int, str, str]]"
res,"List[Tuple[Union[str, None], int, int, str, str]]"
__init__,"Callable[[_, List[str], bool, Union[str, None]],None]"
use_stdout,bool
remove_path_prefix,"Callable[[str, Union[str, None]],str]"
path,str
report_internal_error,"Callable[[Exception, Union[str, None], int, Errors, Options],None]"
err,Exception
line,int
errors,Errors
options,Options
literal,"Callable[[Expression],int]"
e,Expression
subkeys,"Callable[[Key],Iterable[Key]]"
key,Key
literal_hash,"Callable[[Expression],Union[Key, None]]"
e,Expression
visit_int_expr,"Callable[[_, IntExpr],Key]"
e,IntExpr
visit_str_expr,"Callable[[_, StrExpr],Key]"
e,StrExpr
visit_bytes_expr,"Callable[[_, BytesExpr],Key]"
e,BytesExpr
visit_unicode_expr,"Callable[[_, UnicodeExpr],Key]"
e,UnicodeExpr
visit_float_expr,"Callable[[_, FloatExpr],Key]"
e,FloatExpr
visit_complex_expr,"Callable[[_, ComplexExpr],Key]"
e,ComplexExpr
visit_star_expr,"Callable[[_, StarExpr],Key]"
e,StarExpr
visit_name_expr,"Callable[[_, NameExpr],Key]"
e,NameExpr
visit_member_expr,"Callable[[_, MemberExpr],Key]"
e,MemberExpr
visit_op_expr,"Callable[[_, OpExpr],Key]"
e,OpExpr
visit_comparison_expr,"Callable[[_, ComparisonExpr],Key]"
e,ComparisonExpr
rest,Any
visit_unary_expr,"Callable[[_, UnaryExpr],Key]"
e,UnaryExpr
seq_expr,"Callable[[_, Union[ListExpr, TupleExpr, SetExpr], str],Union[Key, None]]"
name,str
rest,Any
visit_list_expr,"Callable[[_, ListExpr],Union[Key, None]]"
e,ListExpr
visit_dict_expr,"Callable[[_, DictExpr],Union[Key, None]]"
e,DictExpr
rest,Any
visit_tuple_expr,"Callable[[_, TupleExpr],Union[Key, None]]"
e,TupleExpr
visit_set_expr,"Callable[[_, SetExpr],Union[Key, None]]"
e,SetExpr
visit_index_expr,"Callable[[_, IndexExpr],Union[Key, None]]"
e,IndexExpr
visit_call_expr,"Callable[[_, CallExpr],None]"
e,CallExpr
visit_slice_expr,"Callable[[_, SliceExpr],None]"
e,SliceExpr
visit_cast_expr,"Callable[[_, CastExpr],None]"
e,CastExpr
visit_conditional_expr,"Callable[[_, ConditionalExpr],None]"
e,ConditionalExpr
visit_ellipsis,"Callable[[_, EllipsisExpr],None]"
e,EllipsisExpr
visit_yield_from_expr,"Callable[[_, YieldFromExpr],None]"
e,YieldFromExpr
visit_yield_expr,"Callable[[_, YieldExpr],None]"
e,YieldExpr
visit_reveal_expr,"Callable[[_, RevealExpr],None]"
e,RevealExpr
visit_super_expr,"Callable[[_, SuperExpr],None]"
e,SuperExpr
visit_type_application,"Callable[[_, TypeApplication],None]"
e,TypeApplication
visit_lambda_expr,"Callable[[_, LambdaExpr],None]"
e,LambdaExpr
visit_list_comprehension,"Callable[[_, ListComprehension],None]"
e,ListComprehension
visit_set_comprehension,"Callable[[_, SetComprehension],None]"
e,SetComprehension
visit_dictionary_comprehension,"Callable[[_, DictionaryComprehension],None]"
e,DictionaryComprehension
visit_generator_expr,"Callable[[_, GeneratorExpr],None]"
e,GeneratorExpr
visit_backquote_expr,"Callable[[_, BackquoteExpr],None]"
e,BackquoteExpr
visit_type_var_expr,"Callable[[_, TypeVarExpr],None]"
e,TypeVarExpr
visit_type_alias_expr,"Callable[[_, TypeAliasExpr],None]"
e,TypeAliasExpr
visit_namedtuple_expr,"Callable[[_, NamedTupleExpr],None]"
e,NamedTupleExpr
visit_enum_call_expr,"Callable[[_, EnumCallExpr],None]"
e,EnumCallExpr
visit_typeddict_expr,"Callable[[_, TypedDictExpr],None]"
e,TypedDictExpr
visit_newtype_expr,"Callable[[_, NewTypeExpr],None]"
e,NewTypeExpr
visit__promote_expr,"Callable[[_, PromoteExpr],None]"
e,PromoteExpr
visit_await_expr,"Callable[[_, AwaitExpr],None]"
e,AwaitExpr
visit_temp_node,"Callable[[_, TempNode],None]"
e,TempNode
_hasher,Final
__init__,"Callable[[_, int, int],None]"
line,int
column,int
set_line,"Callable[[_, Union[Context, int], Union[int, None]],None]"
get_line,"Callable[[_],int]"
get_column,"Callable[[_],int]"
LITERAL_YES,Final
LITERAL_TYPE,Final
LITERAL_NO,Final
node_kinds,Final
inverse_node_kinds,Final
implicit_module_attrs,Final
type_aliases,Final
reverse_builtin_aliases,Final
nongen_builtins,Final
__str__,"Callable[[_],str]"
accept,"Callable[[_, NodeVisitor[T]],T]"
accept,"Callable[[_, StatementVisitor[T]],T]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
name,"Callable[[_],str]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],SymbolNode]"
data,JsonDict
alias_deps,"DefaultDict[str, Set[str]]"
names,SymbolTable
plugin_deps,"Dict[str, Set[str]]"
__init__,"Callable[[_, List[Statement], List[ImportBase], bool, Union[Set[int], None]],None]"
is_bom,bool
ignored_lines,"Union[Set[int], None]"
name,"Callable[[_],str]"
accept,"Callable[[_, NodeVisitor[T]],T]"
is_package_init_file,"Callable[[_],bool]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],MypyFile]"
data,JsonDict
__init__,"Callable[[_],None]"
ids,"List[Tuple[str, Union[str, None]]]"
__init__,"Callable[[_, List[Tuple[str, Union[str, None]]]],None]"
ids,"List[Tuple[str, Union[str, None]]]"
accept,"Callable[[_, StatementVisitor[T]],T]"
id,str
relative,int
names,"List[Tuple[str, Union[str, None]]]"
__init__,"Callable[[_, str, int, List[Tuple[str, Union[str, None]]]],None]"
id,str
relative,int
names,"List[Tuple[str, Union[str, None]]]"
accept,"Callable[[_, StatementVisitor[T]],T]"
id,str
relative,int
__init__,"Callable[[_, str, int],None]"
id,str
relative,int
accept,"Callable[[_, StatementVisitor[T]],T]"
__init__,"Callable[[_, str],None]"
target_fullname,str
name,"Callable[[_],str]"
fullname,"Callable[[_],str]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],ImportedName]"
data,JsonDict
__str__,"Callable[[_],str]"
FUNCBASE_FLAGS,Final
__init__,"Callable[[_],None]"
self.type,"Union[mypy.types.Type, None]"
self.unanalyzed_type,"Union[mypy.types.Type, None]"
name,"Callable[[_],str]"
__init__,"Callable[[_, List[OverloadPart]],None]"
name,"Callable[[_],str]"
accept,"Callable[[_, StatementVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],OverloadedFuncDef]"
data,JsonDict
__init__,"Callable[[_, Var, Union[mypy.types.Type, None], Union[Expression, None], int],None]"
variable,Var
type_annotation,"Union[mypy.types.Type, None]"
kind,int
set_line,"Callable[[_, Union[Context, int], Union[int, None]],None]"
FUNCITEM_FLAGS,Final
__init__,"Callable[[_, List[Argument], Block, Union[mypy.types.FunctionLike, None]],None]"
body,Block
typ,"Union[mypy.types.FunctionLike, None]"
max_fixed_argc,"Callable[[_],int]"
set_line,"Callable[[_, Union[Context, int], Union[int, None]],None]"
is_dynamic,"Callable[[_],bool]"
FUNCDEF_FLAGS,Final
__init__,"Callable[[_, str, List[Argument], Block, Union[mypy.types.FunctionLike, None]],None]"
name,str
body,Block
typ,"Union[mypy.types.FunctionLike, None]"
name,"Callable[[_],str]"
accept,"Callable[[_, StatementVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],FuncDef]"
data,JsonDict
func,FuncDef
var,Var
__init__,"Callable[[_, FuncDef, List[Expression], Var],None]"
func,FuncDef
var,Var
name,"Callable[[_],str]"
is_final,"Callable[[_],bool]"
info,"Callable[[_],TypeInfo]"
type,"Callable[[_],Union[mypy.types.Type, None]]"
accept,"Callable[[_, StatementVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],Decorator]"
data,JsonDict
VAR_FLAGS,Final
__init__,"Callable[[_, str, Union[mypy.types.Type, None]],None]"
name,str
type,"Union[mypy.types.Type, None]"
self.type,"Union[mypy.types.Type, None]"
name,"Callable[[_],str]"
accept,"Callable[[_, StatementVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
data,JsonDict
deserialize,"Callable[[_, JsonDict],Var]"
data,JsonDict
name,str
defs,Block
type_vars,List[mypy.types.TypeVarDef]
info,TypeInfo
__init__,"Callable[[_, str, Block, Union[List[mypy.types.TypeVarDef], None], Union[List[Expression], None], Union[Expression, None], Union[List[Tuple[str, Expression]], None]],None]"
name,str
defs,Block
type_vars,"Union[List[mypy.types.TypeVarDef], None]"
base_type_exprs,"Union[List[Expression], None]"
keywords,"Union[List[Tuple[str, Expression]], None]"
accept,"Callable[[_, StatementVisitor[T]],T]"
is_generic,"Callable[[_],bool]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],ClassDef]"
data,JsonDict
__init__,"Callable[[_, List[str]],None]"
accept,"Callable[[_, StatementVisitor[T]],T]"
__init__,"Callable[[_, List[str]],None]"
accept,"Callable[[_, StatementVisitor[T]],T]"
__init__,"Callable[[_, List[Statement]],None]"
accept,"Callable[[_, StatementVisitor[T]],T]"
expr,Expression
__init__,"Callable[[_, Expression],None]"
expr,Expression
accept,"Callable[[_, StatementVisitor[T]],T]"
rvalue,Expression
type,"Union[mypy.types.Type, None]"
unanalyzed_type,"Union[mypy.types.Type, None]"
new_syntax,bool
__init__,"Callable[[_, List[Lvalue], Expression, Union[mypy.types.Type, None], bool],None]"
rvalue,Expression
type,"Union[mypy.types.Type, None]"
new_syntax,bool
accept,"Callable[[_, StatementVisitor[T]],T]"
lvalue,Lvalue
rvalue,Expression
__init__,"Callable[[_, str, Lvalue, Expression],None]"
op,str
lvalue,Lvalue
rvalue,Expression
accept,"Callable[[_, StatementVisitor[T]],T]"
expr,Expression
body,Block
__init__,"Callable[[_, Expression, Block, Union[Block, None]],None]"
expr,Expression
body,Block
accept,"Callable[[_, StatementVisitor[T]],T]"
index,Lvalue
index_type,"Union[mypy.types.Type, None]"
unanalyzed_index_type,"Union[mypy.types.Type, None]"
inferred_item_type,"Union[mypy.types.Type, None]"
inferred_iterator_type,"Union[mypy.types.Type, None]"
expr,Expression
body,Block
__init__,"Callable[[_, Lvalue, Expression, Block, Union[Block, None], Union[mypy.types.Type, None]],None]"
index,Lvalue
expr,Expression
body,Block
index_type,"Union[mypy.types.Type, None]"
accept,"Callable[[_, StatementVisitor[T]],T]"
__init__,"Callable[[_, Union[Expression, None]],None]"
accept,"Callable[[_, StatementVisitor[T]],T]"
expr,Expression
__init__,"Callable[[_, Expression, Union[Expression, None]],None]"
expr,Expression
accept,"Callable[[_, StatementVisitor[T]],T]"
expr,Lvalue
__init__,"Callable[[_, Lvalue],None]"
expr,Lvalue
accept,"Callable[[_, StatementVisitor[T]],T]"
accept,"Callable[[_, StatementVisitor[T]],T]"
accept,"Callable[[_, StatementVisitor[T]],T]"
accept,"Callable[[_, StatementVisitor[T]],T]"
__init__,"Callable[[_, List[Expression], List[Block], Union[Block, None]],None]"
accept,"Callable[[_, StatementVisitor[T]],T]"
__init__,"Callable[[_, Union[Expression, None], Union[Expression, None]],None]"
accept,"Callable[[_, StatementVisitor[T]],T]"
body,Block
types,"List[Union[Expression, None]]"
vars,"List[Union[NameExpr, None]]"
__init__,"Callable[[_, Block, List[Union[NameExpr, None]], List[Union[Expression, None]], List[Block], Union[Block, None], Union[Block, None]],None]"
body,Block
vars,"List[Union[NameExpr, None]]"
types,"List[Union[Expression, None]]"
accept,"Callable[[_, StatementVisitor[T]],T]"
target,"List[Union[Lvalue, None]]"
target_type,"Union[mypy.types.Type, None]"
body,Block
__init__,"Callable[[_, List[Expression], List[Union[Lvalue, None]], Block, Union[mypy.types.Type, None]],None]"
target,"List[Union[Lvalue, None]]"
body,Block
target_type,"Union[mypy.types.Type, None]"
accept,"Callable[[_, StatementVisitor[T]],T]"
__init__,"Callable[[_, List[Expression], bool, Union[Expression, None]],None]"
newline,bool
accept,"Callable[[_, StatementVisitor[T]],T]"
expr,Expression
__init__,"Callable[[_, Expression, Union[Expression, None], Union[Expression, None]],None]"
expr,Expression
accept,"Callable[[_, StatementVisitor[T]],T]"
__init__,"Callable[[_, int],None]"
value,int
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, str],None]"
value,str
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, str],None]"
value,str
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, str],None]"
value,str
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, float],None]"
value,float
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, complex],None]"
value,complex
accept,"Callable[[_, ExpressionVisitor[T]],T]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
expr,Expression
__init__,"Callable[[_, Expression],None]"
expr,Expression
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_, str],None]"
name,str
accept,"Callable[[_, ExpressionVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
__init__,"Callable[[_, Expression, str],None]"
expr,Expression
name,str
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, Expression, List[Expression], List[int], List[Union[str, None]], Union[Expression, None]],None]"
callee,Expression
arg_names,"List[Union[str, None]]"
self.arg_names,"List[Union[str, None]]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
expr,Expression
__init__,"Callable[[_, Expression],None]"
expr,Expression
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, Union[Expression, None]],None]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
base,Expression
index,Expression
method_type,"Union[mypy.types.Type, None]"
__init__,"Callable[[_, Expression, Expression],None]"
base,Expression
index,Expression
accept,"Callable[[_, ExpressionVisitor[T]],T]"
expr,Expression
method_type,"Union[mypy.types.Type, None]"
__init__,"Callable[[_, str, Expression],None]"
op,str
expr,Expression
accept,"Callable[[_, ExpressionVisitor[T]],T]"
op_methods,"Final[Dict[str, str]]"
op_methods_to_symbols,Final
comparison_fallback_method,Final
ops_falling_back_to_cmp,Final
ops_with_inplace_method,Final
inplace_operator_methods,Final
reverse_op_methods,Final
op_methods_that_shortcut,Final
normal_from_reverse_op,Final
reverse_op_method_set,Final
unary_op_methods,Final
left,Expression
right,Expression
method_type,"Union[mypy.types.Type, None]"
__init__,"Callable[[_, str, Expression, Expression],None]"
op,str
left,Expression
right,Expression
accept,"Callable[[_, ExpressionVisitor[T]],T]"
method_types,"List[Union[mypy.types.Type, None]]"
__init__,"Callable[[_, List[str], List[Expression]],None]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, Union[Expression, None], Union[Expression, None], Union[Expression, None]],None]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
expr,Expression
type,mypy.types.Type
__init__,"Callable[[_, Expression, mypy.types.Type],None]"
expr,Expression
typ,mypy.types.Type
accept,"Callable[[_, ExpressionVisitor[T]],T]"
kind,int
local_nodes,"Union[List[Var], None]"
__init__,"Callable[[_, int, Union[Expression, None], Union[List[Var], None]],None]"
kind,int
local_nodes,"Union[List[Var], None]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
call,CallExpr
__init__,"Callable[[_, str, CallExpr],None]"
name,str
call,CallExpr
accept,"Callable[[_, ExpressionVisitor[T]],T]"
name,"Callable[[_],str]"
expr,"Callable[[_],Expression]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
is_dynamic,"Callable[[_],bool]"
__init__,"Callable[[_, List[Expression]],None]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
items,"List[Tuple[Union[Expression, None], Expression]]"
__init__,"Callable[[_, List[Tuple[Union[Expression, None], Expression]]],None]"
items,"List[Tuple[Union[Expression, None], Expression]]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, List[Expression]],None]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
__init__,"Callable[[_, List[Expression]],None]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
left_expr,Expression
condlists,List[List[Expression]]
__init__,"Callable[[_, Expression, List[Lvalue], List[Expression], List[List[Expression]], List[bool]],None]"
left_expr,Expression
condlists,List[List[Expression]]
accept,"Callable[[_, ExpressionVisitor[T]],T]"
generator,GeneratorExpr
__init__,"Callable[[_, GeneratorExpr],None]"
generator,GeneratorExpr
accept,"Callable[[_, ExpressionVisitor[T]],T]"
generator,GeneratorExpr
__init__,"Callable[[_, GeneratorExpr],None]"
generator,GeneratorExpr
accept,"Callable[[_, ExpressionVisitor[T]],T]"
key,Expression
value,Expression
condlists,List[List[Expression]]
__init__,"Callable[[_, Expression, Expression, List[Lvalue], List[Expression], List[List[Expression]], List[bool]],None]"
key,Expression
value,Expression
condlists,List[List[Expression]]
accept,"Callable[[_, ExpressionVisitor[T]],T]"
cond,Expression
if_expr,Expression
else_expr,Expression
__init__,"Callable[[_, Expression, Expression, Expression],None]"
cond,Expression
if_expr,Expression
else_expr,Expression
accept,"Callable[[_, ExpressionVisitor[T]],T]"
expr,Expression
__init__,"Callable[[_, Expression],None]"
expr,Expression
accept,"Callable[[_, ExpressionVisitor[T]],T]"
expr,Expression
types,List[mypy.types.Type]
__init__,"Callable[[_, Expression, List[mypy.types.Type]],None]"
expr,Expression
types,List[mypy.types.Type]
accept,"Callable[[_, ExpressionVisitor[T]],T]"
values,List[mypy.types.Type]
upper_bound,mypy.types.Type
__init__,"Callable[[_, str, str, List[mypy.types.Type], mypy.types.Type, int],None]"
name,str
fullname,str
values,List[mypy.types.Type]
upper_bound,mypy.types.Type
variance,int
name,"Callable[[_],str]"
fullname,"Callable[[_],str]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],TypeVarExpr]"
data,JsonDict
type,mypy.types.Type
no_args,bool
__init__,"Callable[[_, mypy.types.Type, List[str], bool],None]"
type,mypy.types.Type
no_args,bool
accept,"Callable[[_, ExpressionVisitor[T]],T]"
info,TypeInfo
__init__,"Callable[[_, TypeInfo, bool],None]"
info,TypeInfo
is_typed,bool
accept,"Callable[[_, ExpressionVisitor[T]],T]"
info,TypeInfo
__init__,"Callable[[_, TypeInfo],None]"
info,TypeInfo
accept,"Callable[[_, ExpressionVisitor[T]],T]"
info,TypeInfo
values,"List[Union[Expression, None]]"
__init__,"Callable[[_, TypeInfo, List[str], List[Union[Expression, None]]],None]"
info,TypeInfo
values,"List[Union[Expression, None]]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
type,mypy.types.Type
__init__,"Callable[[_, mypy.types.Type],None]"
type,mypy.types.Type
accept,"Callable[[_, ExpressionVisitor[T]],T]"
name,str
old_type,"Union[mypy.types.Type, None]"
__init__,"Callable[[_, str, Union[mypy.types.Type, None], int],None]"
name,str
old_type,"Union[mypy.types.Type, None]"
line,int
accept,"Callable[[_, ExpressionVisitor[T]],T]"
expr,Expression
__init__,"Callable[[_, Expression],None]"
expr,Expression
accept,"Callable[[_, ExpressionVisitor[T]],T]"
type,mypy.types.Type
no_rhs,bool
__init__,"Callable[[_, mypy.types.Type, bool],None]"
typ,mypy.types.Type
no_rhs,bool
__repr__,"Callable[[_],str]"
accept,"Callable[[_, ExpressionVisitor[T]],T]"
module_name,str
defn,ClassDef
_mro_refs,"Union[List[str], None]"
declared_metaclass,"Union[mypy.types.Instance, None]"
metaclass_type,"Union[mypy.types.Instance, None]"
names,SymbolTable
assuming,"List[Tuple[mypy.types.Instance, mypy.types.Instance]]"
assuming_proper,"List[Tuple[mypy.types.Instance, mypy.types.Instance]]"
inferring,List[mypy.types.Instance]
bases,List[mypy.types.Instance]
_promote,"Union[mypy.types.Type, None]"
tuple_type,"Union[mypy.types.TupleType, None]"
typeddict_type,"Union[mypy.types.TypedDictType, None]"
FLAGS,Final[List[str]]
__init__,"Callable[[_, SymbolTable, ClassDef, str],None]"
names,SymbolTable
defn,ClassDef
module_name,str
add_type_vars,"Callable[[_],None]"
name,"Callable[[_],str]"
is_generic,"Callable[[_],bool]"
get,"Callable[[_, str],Union[SymbolTableNode, None]]"
name,str
get_containing_type_info,"Callable[[_, str],Union[TypeInfo, None]]"
name,str
__getitem__,"Callable[[_, str],SymbolTableNode]"
name,str
__repr__,"Callable[[_],str]"
__bool__,"Callable[[_],bool]"
has_readable_member,"Callable[[_, str],bool]"
name,str
get_method,"Callable[[_, str],Union[FuncBase, None]]"
name,str
calculate_metaclass_type,"Callable[[_],Union[mypy.types.Instance, None]]"
is_metaclass,"Callable[[_],bool]"
has_base,"Callable[[_, str],bool]"
fullname,str
__str__,"Callable[[_],str]"
dump,"Callable[[_, Union[mypy.strconv.StrConv, None], Union[mypy.types.TypeStrVisitor, None]],str]"
str_conv,"Union[mypy.strconv.StrConv, None]"
type_str_conv,"Union[mypy.types.TypeStrVisitor, None]"
base,str
type_str,"Callable[[mypy.types.Type],str]"
typ,mypy.types.Type
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],TypeInfo]"
data,JsonDict
__init__,"Callable[[_, str],None]"
msg,str
__getattribute__,"Callable[[_, str],None]"
attr,str
__init__,"Callable[[_, mypy.types.Type, str, int, int],None]"
target,mypy.types.Type
fullname,str
line,int
column,int
alias_tvars,"Union[List[str], None]"
no_args,bool
normalized,bool
name,"Callable[[_],str]"
fullname,"Callable[[_],str]"
serialize,"Callable[[_],JsonDict]"
data,JsonDict
accept,"Callable[[_, NodeVisitor[T]],T]"
deserialize,"Callable[[_, JsonDict],TypeAlias]"
data,JsonDict
__init__,"Callable[[_, int, Union[SymbolNode, None], bool, bool, bool],None]"
kind,int
module_public,bool
implicit,bool
module_hidden,bool
plugin_generated,bool
no_serialize,bool
type,"Callable[[_],Union[mypy.types.Type, None]]"
copy,"Callable[[_],SymbolTableNode]"
__str__,"Callable[[_],str]"
serialize,"Callable[[_, str, str],JsonDict]"
prefix,str
name,str
data,JsonDict
deserialize,"Callable[[_, JsonDict],SymbolTableNode]"
data,JsonDict
__str__,"Callable[[_],str]"
copy,"Callable[[_],SymbolTable]"
serialize,"Callable[[_, str],JsonDict]"
fullname,str
data,JsonDict
deserialize,"Callable[[_, JsonDict],SymbolTable]"
data,JsonDict
get_flags,"Callable[[Node, List[str]],List[str]]"
node,Node
set_flags,"Callable[[Node, List[str]],None]"
node,Node
get_member_expr_fullname,"Callable[[MemberExpr],Union[str, None]]"
expr,MemberExpr
deserialize_map,Final
check_arg_kinds,"Callable[[List[int], List[T], Callable[[str, T],None]],None]"
fail,"Callable[[str, T],None]"
check_arg_names,"Callable[[Sequence[Union[str, None]], List[T], Callable[[str, T],None], str],None]"
names,"Sequence[Union[str, None]]"
fail,"Callable[[str, T],None]"
description,str
seen_names,"Set[Union[str, None]]"
is_class_var,"Callable[[NameExpr],bool]"
expr,NameExpr
PY_EXTENSIONS,Final
create_source_list,"Callable[[Sequence[str], Options, Union[FileSystemCache, None], bool],List[BuildSource]]"
options,Options
allow_empty_dir,bool
keyfunc,"Callable[[str],Tuple[int, str]]"
name,str
__init__,"Callable[[_, FileSystemCache],None]"
fscache,FileSystemCache
self.package_cache,"Dict[str, Tuple[str, str]]"
expand_dir,"Callable[[_, str, str],List[BuildSource]]"
arg,str
mod_prefix,str
crawl_up,"Callable[[_, str],Tuple[str, str]]"
arg,str
crawl_up_dir,"Callable[[_, str],Tuple[str, str]]"
dir,str
get_init_file,"Callable[[_, str],Union[str, None]]"
dir,str
module_join,"Callable[[str, str],str]"
parent,str
child,str
strip_py,"Callable[[str],Union[str, None]]"
arg,str
__init__,"Callable[[_, bool],None]"
show_ids,bool
get_id,"Callable[[_, object],Union[int, None]]"
o,object
format_id,"Callable[[_, object],str]"
o,object
dump,"Callable[[_, Sequence[object], mypy.nodes.Context],str]"
obj,mypy.nodes.Context
func_helper,"Callable[[_, mypy.nodes.FuncItem],List[object]]"
o,mypy.nodes.FuncItem
args,"List[Union[mypy.nodes.Var, Tuple[str, List[mypy.nodes.Node]]]]"
extra,"List[Tuple[str, List[mypy.nodes.Var]]]"
kind,int
visit_mypy_file,"Callable[[_, mypy.nodes.MypyFile],str]"
o,mypy.nodes.MypyFile
visit_import,"Callable[[_, mypy.nodes.Import],str]"
o,mypy.nodes.Import
visit_import_from,"Callable[[_, mypy.nodes.ImportFrom],str]"
o,mypy.nodes.ImportFrom
visit_import_all,"Callable[[_, mypy.nodes.ImportAll],str]"
o,mypy.nodes.ImportAll
visit_func_def,"Callable[[_, mypy.nodes.FuncDef],str]"
o,mypy.nodes.FuncDef
visit_overloaded_func_def,"Callable[[_, mypy.nodes.OverloadedFuncDef],str]"
o,mypy.nodes.OverloadedFuncDef
a,Any
visit_class_def,"Callable[[_, mypy.nodes.ClassDef],str]"
o,mypy.nodes.ClassDef
visit_var,"Callable[[_, mypy.nodes.Var],str]"
o,mypy.nodes.Var
visit_global_decl,"Callable[[_, mypy.nodes.GlobalDecl],str]"
o,mypy.nodes.GlobalDecl
visit_nonlocal_decl,"Callable[[_, mypy.nodes.NonlocalDecl],str]"
o,mypy.nodes.NonlocalDecl
visit_decorator,"Callable[[_, mypy.nodes.Decorator],str]"
o,mypy.nodes.Decorator
visit_block,"Callable[[_, mypy.nodes.Block],str]"
o,mypy.nodes.Block
visit_expression_stmt,"Callable[[_, mypy.nodes.ExpressionStmt],str]"
o,mypy.nodes.ExpressionStmt
visit_assignment_stmt,"Callable[[_, mypy.nodes.AssignmentStmt],str]"
o,mypy.nodes.AssignmentStmt
visit_operator_assignment_stmt,"Callable[[_, mypy.nodes.OperatorAssignmentStmt],str]"
o,mypy.nodes.OperatorAssignmentStmt
visit_while_stmt,"Callable[[_, mypy.nodes.WhileStmt],str]"
o,mypy.nodes.WhileStmt
visit_for_stmt,"Callable[[_, mypy.nodes.ForStmt],str]"
o,mypy.nodes.ForStmt
visit_return_stmt,"Callable[[_, mypy.nodes.ReturnStmt],str]"
o,mypy.nodes.ReturnStmt
visit_if_stmt,"Callable[[_, mypy.nodes.IfStmt],str]"
o,mypy.nodes.IfStmt
visit_break_stmt,"Callable[[_, mypy.nodes.BreakStmt],str]"
o,mypy.nodes.BreakStmt
visit_continue_stmt,"Callable[[_, mypy.nodes.ContinueStmt],str]"
o,mypy.nodes.ContinueStmt
visit_pass_stmt,"Callable[[_, mypy.nodes.PassStmt],str]"
o,mypy.nodes.PassStmt
visit_raise_stmt,"Callable[[_, mypy.nodes.RaiseStmt],str]"
o,mypy.nodes.RaiseStmt
visit_assert_stmt,"Callable[[_, mypy.nodes.AssertStmt],str]"
o,mypy.nodes.AssertStmt
visit_await_expr,"Callable[[_, mypy.nodes.AwaitExpr],str]"
o,mypy.nodes.AwaitExpr
visit_del_stmt,"Callable[[_, mypy.nodes.DelStmt],str]"
o,mypy.nodes.DelStmt
visit_try_stmt,"Callable[[_, mypy.nodes.TryStmt],str]"
o,mypy.nodes.TryStmt
visit_with_stmt,"Callable[[_, mypy.nodes.WithStmt],str]"
o,mypy.nodes.WithStmt
visit_print_stmt,"Callable[[_, mypy.nodes.PrintStmt],str]"
o,mypy.nodes.PrintStmt
visit_exec_stmt,"Callable[[_, mypy.nodes.ExecStmt],str]"
o,mypy.nodes.ExecStmt
visit_int_expr,"Callable[[_, mypy.nodes.IntExpr],str]"
o,mypy.nodes.IntExpr
visit_str_expr,"Callable[[_, mypy.nodes.StrExpr],str]"
o,mypy.nodes.StrExpr
visit_bytes_expr,"Callable[[_, mypy.nodes.BytesExpr],str]"
o,mypy.nodes.BytesExpr
visit_unicode_expr,"Callable[[_, mypy.nodes.UnicodeExpr],str]"
o,mypy.nodes.UnicodeExpr
str_repr,"Callable[[_, str],str]"
s,str
visit_float_expr,"Callable[[_, mypy.nodes.FloatExpr],str]"
o,mypy.nodes.FloatExpr
visit_complex_expr,"Callable[[_, mypy.nodes.ComplexExpr],str]"
o,mypy.nodes.ComplexExpr
visit_ellipsis,"Callable[[_, mypy.nodes.EllipsisExpr],str]"
o,mypy.nodes.EllipsisExpr
visit_star_expr,"Callable[[_, mypy.nodes.StarExpr],str]"
o,mypy.nodes.StarExpr
visit_name_expr,"Callable[[_, mypy.nodes.NameExpr],str]"
o,mypy.nodes.NameExpr
pretty_name,"Callable[[_, str, Union[int, None], Union[str, None], bool, Union[mypy.nodes.Node, None]],str]"
name,str
is_inferred_def,bool
target_node,"Union[mypy.nodes.Node, None]"
visit_member_expr,"Callable[[_, mypy.nodes.MemberExpr],str]"
o,mypy.nodes.MemberExpr
visit_yield_expr,"Callable[[_, mypy.nodes.YieldExpr],str]"
o,mypy.nodes.YieldExpr
visit_yield_from_expr,"Callable[[_, mypy.nodes.YieldFromExpr],str]"
o,mypy.nodes.YieldFromExpr
visit_call_expr,"Callable[[_, mypy.nodes.CallExpr],str]"
o,mypy.nodes.CallExpr
args,List[mypy.nodes.Expression]
extra,"List[Union[str, Tuple[str, List[Any]]]]"
visit_op_expr,"Callable[[_, mypy.nodes.OpExpr],str]"
o,mypy.nodes.OpExpr
visit_comparison_expr,"Callable[[_, mypy.nodes.ComparisonExpr],str]"
o,mypy.nodes.ComparisonExpr
visit_cast_expr,"Callable[[_, mypy.nodes.CastExpr],str]"
o,mypy.nodes.CastExpr
visit_reveal_expr,"Callable[[_, mypy.nodes.RevealExpr],str]"
o,mypy.nodes.RevealExpr
visit_unary_expr,"Callable[[_, mypy.nodes.UnaryExpr],str]"
o,mypy.nodes.UnaryExpr
visit_list_expr,"Callable[[_, mypy.nodes.ListExpr],str]"
o,mypy.nodes.ListExpr
visit_dict_expr,"Callable[[_, mypy.nodes.DictExpr],str]"
o,mypy.nodes.DictExpr
visit_set_expr,"Callable[[_, mypy.nodes.SetExpr],str]"
o,mypy.nodes.SetExpr
visit_tuple_expr,"Callable[[_, mypy.nodes.TupleExpr],str]"
o,mypy.nodes.TupleExpr
visit_index_expr,"Callable[[_, mypy.nodes.IndexExpr],str]"
o,mypy.nodes.IndexExpr
visit_super_expr,"Callable[[_, mypy.nodes.SuperExpr],str]"
o,mypy.nodes.SuperExpr
visit_type_application,"Callable[[_, mypy.nodes.TypeApplication],str]"
o,mypy.nodes.TypeApplication
visit_type_var_expr,"Callable[[_, mypy.nodes.TypeVarExpr],str]"
o,mypy.nodes.TypeVarExpr
visit_type_alias_expr,"Callable[[_, mypy.nodes.TypeAliasExpr],str]"
o,mypy.nodes.TypeAliasExpr
visit_namedtuple_expr,"Callable[[_, mypy.nodes.NamedTupleExpr],str]"
o,mypy.nodes.NamedTupleExpr
visit_enum_call_expr,"Callable[[_, mypy.nodes.EnumCallExpr],str]"
o,mypy.nodes.EnumCallExpr
visit_typeddict_expr,"Callable[[_, mypy.nodes.TypedDictExpr],str]"
o,mypy.nodes.TypedDictExpr
visit__promote_expr,"Callable[[_, mypy.nodes.PromoteExpr],str]"
o,mypy.nodes.PromoteExpr
visit_newtype_expr,"Callable[[_, mypy.nodes.NewTypeExpr],str]"
o,mypy.nodes.NewTypeExpr
visit_lambda_expr,"Callable[[_, mypy.nodes.LambdaExpr],str]"
o,mypy.nodes.LambdaExpr
visit_generator_expr,"Callable[[_, mypy.nodes.GeneratorExpr],str]"
o,mypy.nodes.GeneratorExpr
visit_list_comprehension,"Callable[[_, mypy.nodes.ListComprehension],str]"
o,mypy.nodes.ListComprehension
visit_set_comprehension,"Callable[[_, mypy.nodes.SetComprehension],str]"
o,mypy.nodes.SetComprehension
visit_dictionary_comprehension,"Callable[[_, mypy.nodes.DictionaryComprehension],str]"
o,mypy.nodes.DictionaryComprehension
visit_conditional_expr,"Callable[[_, mypy.nodes.ConditionalExpr],str]"
o,mypy.nodes.ConditionalExpr
visit_slice_expr,"Callable[[_, mypy.nodes.SliceExpr],str]"
o,mypy.nodes.SliceExpr
visit_backquote_expr,"Callable[[_, mypy.nodes.BackquoteExpr],str]"
o,mypy.nodes.BackquoteExpr
visit_temp_node,"Callable[[_, mypy.nodes.TempNode],str]"
o,mypy.nodes.TempNode
dump_tagged,"Callable[[Sequence[object], Union[str, None], StrConv],str]"
str_conv,StrConv
indent,"Callable[[str, int],str]"
s,str
n,int
apply_generic_arguments,"Callable[[CallableType, Sequence[Union[Type, None]], MessageBuilder, Context, bool],CallableType]"
callable,CallableType
orig_types,"Sequence[Union[Type, None]]"
msg,MessageBuilder
context,Context
skip_unsatisfied,bool
PYTHON2_VERSION,Final
PYTHON3_VERSION,Final
PYTHON3_VERSION_MIN,Final
CACHE_DIR,Final
CONFIG_FILE,Final
SHARED_CONFIG_FILES,Final
USER_CONFIG_FILES,Final
CONFIG_FILES,Final
type_of_any_name_map,"Final[collections.OrderedDict[int, str]]"
__init__,"Callable[[_, str, Dict[str, str]],None]"
data_dir,str
add_report,"Callable[[_, str, str],AbstractReporter]"
report_type,str
report_dir,str
file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
finish,"Callable[[_],None]"
__init__,"Callable[[_, Reports, str],None]"
reports,Reports
output_dir,str
on_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
on_finish,"Callable[[_],None]"
register_reporter,"Callable[[str, Callable[[Reports, str],AbstractReporter], bool],None]"
report_name,str
reporter,"Callable[[Reports, str],AbstractReporter]"
needs_lxml,bool
alias_reporter,"Callable[[str, str],None]"
source_reporter,str
target_reporter,str
__init__,"Callable[[_],None]"
visit_func_def,"Callable[[_, FuncDef],None]"
defn,FuncDef
__init__,"Callable[[_, Reports, str],None]"
reports,Reports
output_dir,str
self.counts,"Dict[str, Tuple[int, int, int, int]]"
on_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
on_finish,"Callable[[_],None]"
counts,"List[Tuple[Tuple[int, int, int, int], str]]"
__init__,"Callable[[_, Reports, str],None]"
reports,Reports
output_dir,str
self.counts,"Dict[str, Tuple[int, int]]"
self.any_types_counter,"Dict[str, typing.Counter[int]]"
on_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
on_finish,"Callable[[_],None]"
_write_out_report,"Callable[[_, str, List[str], List[List[str]], List[str]],None]"
filename,str
rows,List[List[str]]
_report_any_exprs,"Callable[[_],None]"
rows,List[List[str]]
_report_types_of_anys,"Callable[[_],None]"
total_counter,typing.Counter[int]
rows,List[List[str]]
__init__,"Callable[[_, List[str]],None]"
indentation_level,"Callable[[_, int],Union[int, None]]"
line_number,int
visit_func_def,"Callable[[_, FuncDef],None]"
defn,FuncDef
__init__,"Callable[[_, Reports, str],None]"
reports,Reports
output_dir,str
self.lines_covered,"Dict[str, List[int]]"
on_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
on_finish,"Callable[[_],None]"
__init__,"Callable[[_, str, str],None]"
name,str
module,str
total,"Callable[[_],int]"
__init__,"Callable[[_, Reports, str],None]"
reports,Reports
output_dir,str
on_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
_get_any_info_for_line,"Callable[[stats.StatisticsVisitor, int],str]"
lineno,int
counter,typing.Counter[int]
on_finish,"Callable[[_],None]"
get_line_rate,"Callable[[int, int],str]"
covered_lines,int
total_lines,int
__init__,"Callable[[_, str],None]"
name,str
as_xml,"Callable[[_],Any]"
add_packages,"Callable[[_, Any],None]"
parent_element,Any
__init__,"Callable[[_, Reports, str],None]"
reports,Reports
output_dir,str
on_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
on_finish,"Callable[[_],None]"
__init__,"Callable[[_, Reports, str],None]"
reports,Reports
output_dir,str
on_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
on_finish,"Callable[[_],None]"
__init__,"Callable[[_, Reports, str],None]"
reports,Reports
output_dir,str
on_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
on_finish,"Callable[[_],None]"
__init__,"Callable[[_, Reports, str],None]"
reports,Reports
output_dir,str
on_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
tree,MypyFile
options,Options
on_finish,"Callable[[_],None]"
PYTHON_EXTENSIONS,Final
__init__,"Callable[[_, Union[str, None], Union[str, None], Union[str, None], Union[str, None]],None]"
__repr__,"Callable[[_],str]"
__init__,"Callable[[_, SearchPaths, Union[FileSystemCache, None], Union[Options, None]],None]"
search_paths,SearchPaths
self.results,"Dict[str, Union[str, None]]"
clear,"Callable[[_],None]"
find_lib_path_dirs,"Callable[[_, str, _],PackageDirs]"
dir_chain,str
_find_lib_path_dirs,"Callable[[_, str, _],PackageDirs]"
dir_chain,str
find_module,"Callable[[_, str],Union[str, None]]"
id,str
_find_module_non_stub_helper,"Callable[[_, List[str], str],Union[OnePackageDir, None]]"
pkg_dir,str
_update_ns_ancestors,"Callable[[_, List[str], Tuple[str, bool]],None]"
_find_module,"Callable[[_, str],Union[str, None]]"
id,str
third_party_inline_dirs,PackageDirs
third_party_stubs_dirs,PackageDirs
find_modules_recursive,"Callable[[_, str],List[BuildSource]]"
module,str
verify_module,"Callable[[FileSystemCache, str, str],bool]"
fscache,FileSystemCache
id,str
path,str
highest_init_level,"Callable[[FileSystemCache, str, str],int]"
fscache,FileSystemCache
id,str
path,str
default_lib_path,"Callable[[str, Tuple[int, int], Union[str, None]],List[str]]"
data_dir,str
get_site_packages_dirs,"Callable[[Union[str, None]],Tuple[List[str], List[str]]]"
make_abspath,"Callable[[str, str],str]"
path,str
root,str
compute_search_paths,"Callable[[List[BuildSource], Options, str, Union[str, None]],SearchPaths]"
options,Options
data_dir,str
unannotated,Final
explicit,Final
from_unimported_type,Final
from_omitted_generics,Final
from_error,Final
special_form,Final
from_another_any,Final
implementation_artifact,Final
deserialize_type,"Callable[[Union[JsonDict, str]],Type]"
__init__,"Callable[[_, int, int],None]"
line,int
column,int
can_be_true_default,"Callable[[_],bool]"
can_be_false_default,"Callable[[_],bool]"
accept,"Callable[[_, TypeVisitor[T]],T]"
__repr__,"Callable[[_],str]"
deserialize,"Callable[[_, JsonDict],Type]"
data,JsonDict
raw_id,int
meta_level,int
__init__,"Callable[[_, int, int],None]"
raw_id,int
meta_level,int
new,"Callable[[int],TypeVarId]"
meta_level,int
__repr__,"Callable[[_],str]"
__eq__,"Callable[[_, object],bool]"
other,object
__ne__,"Callable[[_, object],bool]"
other,object
__hash__,"Callable[[_],int]"
is_meta_var,"Callable[[_],bool]"
id,TypeVarId
upper_bound,Type
variance,int
__init__,"Callable[[_, str, str, Union[TypeVarId, int], List[Type], Type, int, int, int],None]"
name,str
fullname,str
upper_bound,Type
variance,int
line,int
column,int
new_unification_variable,"Callable[[TypeVarDef],TypeVarDef]"
old,TypeVarDef
erase_to_union_or_bound,"Callable[[_],Type]"
__repr__,"Callable[[_],str]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],TypeVarDef]"
data,JsonDict
__init__,"Callable[[_, str, Union[List[Type], None], int, int, bool, bool],None]"
name,str
args,"Union[List[Type], None]"
line,int
column,int
optional,bool
empty_tuple_index,bool
accept,"Callable[[_, TypeVisitor[T]],T]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],UnboundType]"
data,JsonDict
typ,Type
__init__,"Callable[[_, Type, Union[str, None], Union[str, None], int, int],None]"
typ,Type
line,int
column,int
accept,"Callable[[_, TypeVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
__init__,"Callable[[_, List[Type], int, int],None]"
line,int
column,int
accept,"Callable[[_, TypeVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
__init__,"Callable[[_, int, Union[AnyType, None], Union[str, None], int, int],None]"
type_of_any,int
line,int
column,int
accept,"Callable[[_, TypeVisitor[T]],T]"
copy_modified,"Callable[[_, Bogus[int], Bogus[Union[AnyType, None]]],AnyType]"
original_any,"Bogus[Union[AnyType, None]]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],AnyType]"
data,JsonDict
__init__,"Callable[[_, bool, int, int],None]"
is_noreturn,bool
line,int
column,int
can_be_true_default,"Callable[[_],bool]"
can_be_false_default,"Callable[[_],bool]"
accept,"Callable[[_, TypeVisitor[T]],T]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],UninhabitedType]"
data,JsonDict
__init__,"Callable[[_, int, int],None]"
line,int
column,int
can_be_true_default,"Callable[[_],bool]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
accept,"Callable[[_, TypeVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],NoneTyp]"
data,JsonDict
accept,"Callable[[_, TypeVisitor[T]],T]"
__init__,"Callable[[_, Union[str, None], int, int],None]"
line,int
column,int
accept,"Callable[[_, TypeVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],DeletedType]"
data,JsonDict
NOT_READY,Final
__init__,"Callable[[_, mypy.nodes.TypeInfo, List[Type], int, int, bool],None]"
typ,mypy.nodes.TypeInfo
line,int
column,int
erased,bool
accept,"Callable[[_, TypeVisitor[T]],T]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
data,JsonDict
deserialize,"Callable[[_, Union[JsonDict, str]],Instance]"
copy_modified,"Callable[[_],Instance]"
has_readable_member,"Callable[[_, str],bool]"
name,str
__init__,"Callable[[_, TypeVarDef, int, int],None]"
binder,TypeVarDef
line,int
column,int
self.fullname,str
self.id,TypeVarId
self.upper_bound,Type
self.variance,int
accept,"Callable[[_, TypeVisitor[T]],T]"
erase_to_union_or_bound,"Callable[[_],Type]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],TypeVarType]"
data,JsonDict
__init__,"Callable[[_, int, int],None]"
line,int
column,int
is_type_obj,"Callable[[_],bool]"
is_concrete_type_obj,"Callable[[_],bool]"
type_object,"Callable[[_],mypy.nodes.TypeInfo]"
with_name,"Callable[[_, str],FunctionLike]"
name,str
__init__,"Callable[[_, List[Type], List[int], Sequence[Union[str, None]], Type, Instance, Union[str, None], Union[SymbolNode, None], Union[List[TypeVarDef], None], int, int, bool, bool, Union[str, None], bool, Sequence[Union[Type, None]], Union[Dict[str, Any], None]],None]"
arg_names,"Sequence[Union[str, None]]"
ret_type,Type
fallback,Instance
variables,"Union[List[TypeVarDef], None]"
line,int
column,int
is_ellipsis_args,bool
implicit,bool
from_type_type,bool
bound_args,"Sequence[Union[Type, None]]"
def_extras,"Union[Dict[str, Any], None]"
copy_modified,"Callable[[_, Bogus[List[Type]], Bogus[List[int]], Bogus[List[Union[str, None]]], Bogus[Type], Bogus[Instance], Bogus[Union[str, None]], Bogus[SymbolNode], Bogus[List[TypeVarDef]], Bogus[int], Bogus[int], Bogus[bool], Bogus[bool], Bogus[Union[str, None]], Bogus[bool], Bogus[List[Union[Type, None]]], Bogus[Dict[str, Any]]],CallableType]"
arg_types,Bogus[List[Type]]
arg_kinds,Bogus[List[int]]
arg_names,"Bogus[List[Union[str, None]]]"
name,"Bogus[Union[str, None]]"
variables,Bogus[List[TypeVarDef]]
special_sig,"Bogus[Union[str, None]]"
bound_args,"Bogus[List[Union[Type, None]]]"
def_extras,"Bogus[Dict[str, Any]]"
is_var_arg,"Callable[[_],bool]"
is_kw_arg,"Callable[[_],bool]"
is_type_obj,"Callable[[_],bool]"
type_object,"Callable[[_],mypy.nodes.TypeInfo]"
accept,"Callable[[_, TypeVisitor[T]],T]"
with_name,"Callable[[_, str],CallableType]"
name,str
max_fixed_args,"Callable[[_],int]"
max_possible_positional_args,"Callable[[_],int]"
formal_arguments,"Callable[[_, bool],Iterator[FormalArgument]]"
include_star_args,bool
corresponding_argument,"Callable[[_, FormalArgument],Union[FormalArgument, None]]"
model,FormalArgument
is_generic,"Callable[[_],bool]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],CallableType]"
data,JsonDict
__init__,"Callable[[_, List[CallableType]],None]"
is_type_obj,"Callable[[_],bool]"
type_object,"Callable[[_],mypy.nodes.TypeInfo]"
with_name,"Callable[[_, str],Overloaded]"
name,str
accept,"Callable[[_, TypeVisitor[T]],T]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],Overloaded]"
data,JsonDict
fallback,Instance
__init__,"Callable[[_, List[Type], Instance, int, int, bool],None]"
fallback,Instance
line,int
column,int
implicit,bool
length,"Callable[[_],int]"
accept,"Callable[[_, TypeVisitor[T]],T]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],TupleType]"
data,JsonDict
copy_modified,"Callable[[_],TupleType]"
items,"Union[List[Type], None]"
slice,"Callable[[_, Union[int, None], Union[int, None], Union[int, None]],TupleType]"
fallback,Instance
__init__,"Callable[[_, OrderedDict[str, Type], Set[str], Instance, int, int],None]"
fallback,Instance
line,int
column,int
accept,"Callable[[_, TypeVisitor[T]],T]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],TypedDictType]"
data,JsonDict
is_anonymous,"Callable[[_],bool]"
as_anonymous,"Callable[[_],TypedDictType]"
copy_modified,"Callable[[_],TypedDictType]"
item_types,"Union[List[Type], None]"
required_keys,"Union[Set[str], None]"
create_anonymous_fallback,"Callable[[_],Instance]"
value_type,Type
names_are_wider_than,"Callable[[_, TypedDictType],bool]"
other,TypedDictType
zip,"Callable[[_, TypedDictType],Iterable[Tuple[str, Type, Type]]]"
right,TypedDictType
zipall,"Callable[[_, TypedDictType],Iterable[Tuple[str, Union[Type, None], Union[Type, None]]]]"
right,TypedDictType
__init__,"Callable[[_, LiteralValue, Instance, int, int],None]"
value,LiteralValue
fallback,Instance
line,int
column,int
accept,"Callable[[_, TypeVisitor[T]],T]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
deserialize,"Callable[[_, JsonDict],LiteralType]"
data,JsonDict
type,Type
__init__,"Callable[[_, Type, int, int],None]"
type,Type
line,int
column,int
accept,"Callable[[_, TypeVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
__init__,"Callable[[_, List[Type], int, int],None]"
line,int
column,int
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
make_union,"Callable[[List[Type], int, int],Type]"
line,int
column,int
make_simplified_union,"Callable[[List[Type], int, int],Type]"
line,int
column,int
length,"Callable[[_],int]"
accept,"Callable[[_, TypeVisitor[T]],T]"
has_readable_member,"Callable[[_, str],bool]"
name,str
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],UnionType]"
data,JsonDict
type,"Union[mypy.nodes.TypeInfo, None]"
var,mypy.nodes.Var
__init__,"Callable[[_, Union[mypy.nodes.TypeInfo, None], mypy.nodes.Var, List[Type]],None]"
type,"Union[mypy.nodes.TypeInfo, None]"
var,mypy.nodes.Var
accept,"Callable[[_, TypeVisitor[T]],T]"
accept,"Callable[[_, TypeVisitor[T]],T]"
serialize,"Callable[[_],JsonDict]"
item,Type
__init__,"Callable[[_, Bogus[Union[Instance, AnyType, TypeVarType, TupleType, NoneTyp, CallableType]]],None]"
item,"Bogus[Union[Instance, AnyType, TypeVarType, TupleType, NoneTyp, CallableType]]"
line,int
column,int
make_normalized,"Callable[[Type],Type]"
item,Type
line,int
column,int
accept,"Callable[[_, TypeVisitor[T]],T]"
__hash__,"Callable[[_],int]"
__eq__,"Callable[[_, object],bool]"
other,object
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, JsonDict],Type]"
data,JsonDict
_unbound,UnboundType
__init__,"Callable[[_, UnboundType],None]"
unbound,UnboundType
unbound,"Callable[[_],UnboundType]"
resolve,"Callable[[_, Type],None]"
resolved,Type
accept,"Callable[[_, TypeVisitor[T]],T]"
serialize,"Callable[[_],str]"
__init__,"Callable[[_, Union[IdMapper, None]],None]"
visit_unbound_type,"Callable[[_, UnboundType],str]"
t,UnboundType
visit_type_list,"Callable[[_, TypeList],str]"
t,TypeList
visit_callable_argument,"Callable[[_, CallableArgument],str]"
t,CallableArgument
visit_any,"Callable[[_, AnyType],str]"
t,AnyType
visit_none_type,"Callable[[_, NoneTyp],str]"
t,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],str]"
t,UninhabitedType
visit_erased_type,"Callable[[_, ErasedType],str]"
t,ErasedType
visit_deleted_type,"Callable[[_, DeletedType],str]"
t,DeletedType
visit_instance,"Callable[[_, Instance],str]"
t,Instance
visit_type_var,"Callable[[_, TypeVarType],str]"
t,TypeVarType
visit_callable_type,"Callable[[_, CallableType],str]"
t,CallableType
visit_overloaded,"Callable[[_, Overloaded],str]"
t,Overloaded
visit_tuple_type,"Callable[[_, TupleType],str]"
t,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],str]"
t,TypedDictType
item_str,"Callable[[str, str],str]"
name,str
typ,str
visit_literal_type,"Callable[[_, LiteralType],str]"
t,LiteralType
visit_star_type,"Callable[[_, StarType],str]"
t,StarType
visit_union_type,"Callable[[_, UnionType],str]"
t,UnionType
visit_partial_type,"Callable[[_, PartialType],str]"
t,PartialType
visit_ellipsis_type,"Callable[[_, EllipsisType],str]"
t,EllipsisType
visit_type_type,"Callable[[_, TypeType],str]"
t,TypeType
visit_forwardref_type,"Callable[[_, ForwardRef],str]"
t,ForwardRef
list_str,"Callable[[_, List[Type]],str]"
strip_type,"Callable[[Type],Type]"
typ,Type
is_named_instance,"Callable[[Type, str],bool]"
t,Type
fullname,str
copy_type,"Callable[[Type],Type]"
t,Type
true_only,"Callable[[Type],Type]"
t,Type
false_only,"Callable[[Type],Type]"
t,Type
true_or_false,"Callable[[Type],Type]"
t,Type
function_type,"Callable[[mypy.nodes.FuncBase, Instance],FunctionLike]"
func,mypy.nodes.FuncBase
fallback,Instance
callable_type,"Callable[[mypy.nodes.FuncItem, Instance, Union[Type, None]],CallableType]"
fdef,mypy.nodes.FuncItem
fallback,Instance
get_typ_args,"Callable[[Type],List[Type]]"
tp,Type
set_typ_args,"Callable[[Type, List[Type], int, int],Type]"
tp,Type
line,int
column,int
get_type_vars,"Callable[[Type],List[TypeVarType]]"
typ,Type
union_items,"Callable[[Type],List[Type]]"
typ,Type
is_invariant_instance,"Callable[[Type],bool]"
tp,Type
is_optional,"Callable[[Type],bool]"
t,Type
remove_optional,"Callable[[Type],Type]"
typ,Type
names,Final
deserialize_map,Final
DEBUG_FINE_GRAINED,Final
__init__,"Callable[[_, BuildManager, Graph],None]"
manager,BuildManager
graph,Graph
__init__,"Callable[[_, List[BuildSource]],None]"
is_source,"Callable[[_, MypyFile],bool]"
file,MypyFile
build,"Callable[[List[BuildSource], Options, Union[str, None], Union[Callable[[List[str], bool],None], None], Union[FileSystemCache, None]],BuildResult]"
options,Options
flush_errors,"Union[Callable[[List[str], bool],None], None]"
default_flush_errors,"Callable[[List[str], bool],None]"
is_serious,bool
_build,"Callable[[List[BuildSource], Options, Union[str, None], Callable[[List[str], bool],None], Union[FileSystemCache, None]],BuildResult]"
options,Options
flush_errors,"Callable[[List[str], bool],None]"
default_data_dir,"Callable[[],str]"
cache_meta_from_dict,"Callable[[Dict[str, Any], str, Union[str, None]],CacheMeta]"
data_json,str
sentinel,Any
PRI_HIGH,Final
PRI_MED,Final
PRI_LOW,Final
PRI_MYPY,Final
PRI_INDIRECT,Final
PRI_ALL,Final
import_priority,"Callable[[ImportBase, int],int]"
imp,ImportBase
toplevel_priority,int
load_plugins,"Callable[[Options, Errors],Tuple[Plugin, Dict[str, str]]]"
options,Options
errors,Errors
default_plugin,Plugin
plugin_error,"Callable[[str],None]"
message,str
take_module_snapshot,"Callable[[types.ModuleType],str]"
find_config_file_line_number,"Callable[[str, str, str],int]"
path,str
section,str
setting_name,str
__init__,"Callable[[_, str, SearchPaths, str, BuildSourceSet, Reports, Options, str, Plugin, Dict[str, str], Errors, Callable[[List[str], bool],None], FileSystemCache],None]"
data_dir,str
search_paths,SearchPaths
ignore_prefix,str
source_set,BuildSourceSet
reports,Reports
options,Options
version_id,str
plugin,Plugin
errors,Errors
flush_errors,"Callable[[List[str], bool],None]"
fscache,FileSystemCache
self.shadow_equivalence_map,"Dict[str, Union[str, None]]"
use_fine_grained_cache,"Callable[[_],bool]"
maybe_swap_for_shadow_path,"Callable[[_, str],str]"
path,str
get_stat,"Callable[[_, str],os.stat_result]"
path,str
getmtime,"Callable[[_, str],int]"
path,str
normpath,"Callable[[_, str],str]"
path,str
all_imported_modules_in_file,"Callable[[_, MypyFile],List[Tuple[int, str, int]]]"
file,MypyFile
correct_rel_imp,"Callable[[Union[ImportFrom, ImportAll]],str]"
res,"List[Tuple[int, str, int]]"
is_module,"Callable[[_, str],bool]"
id,str
parse_file,"Callable[[_, str, str, str, bool],MypyFile]"
id,str
path,str
source,str
ignore_errors,bool
report_file,"Callable[[_, MypyFile, Dict[Expression, Type], Options],None]"
file,MypyFile
options,Options
write_protocol_deps_cache,"Callable[[Dict[str, Set[str]], BuildManager, Graph],None]"
proto_deps,"Dict[str, Set[str]]"
manager,BuildManager
graph,Graph
write_plugins_snapshot,"Callable[[BuildManager],None]"
manager,BuildManager
read_plugins_snapshot,"Callable[[BuildManager],Union[Dict[str, str], None]]"
manager,BuildManager
read_protocol_cache,"Callable[[BuildManager, Graph],Union[Dict[str, Set[str]], None]]"
manager,BuildManager
graph,Graph
_load_json_file,"Callable[[str, BuildManager, str, str],Union[Dict[str, Any], None]]"
file,str
manager,BuildManager
log_sucess,str
log_error,str
_cache_dir_prefix,"Callable[[BuildManager, Union[str, None]],str]"
manager,BuildManager
get_cache_names,"Callable[[str, str, BuildManager],Tuple[str, str, Union[str, None]]]"
id,str
path,str
manager,BuildManager
get_protocol_deps_cache_name,"Callable[[BuildManager],Tuple[str, str]]"
manager,BuildManager
find_cache_meta,"Callable[[str, str, BuildManager],Union[CacheMeta, None]]"
id,str
path,str
manager,BuildManager
random_string,"Callable[[],str]"
atomic_write,"Callable[[str, str, str],bool]"
filename,str
line1,str
line2,str
validate_meta,"Callable[[Union[CacheMeta, None], str, Union[str, None], bool, BuildManager],Union[CacheMeta, None]]"
id,str
ignore_all,bool
manager,BuildManager
compute_hash,"Callable[[str],str]"
text,str
json_dumps,"Callable[[Any, bool],str]"
obj,Any
debug_cache,bool
write_cache,"Callable[[str, str, MypyFile, Dict[str, List[str]], List[str], List[str], List[str], List[int], List[int], str, str, bool, BuildManager],Tuple[str, Union[CacheMeta, None]]]"
id,str
path,str
tree,MypyFile
serialized_fine_grained_deps,"Dict[str, List[str]]"
old_interface_hash,str
source_hash,str
ignore_all,bool
manager,BuildManager
delete_cache,"Callable[[str, str, BuildManager],None]"
id,str
path,str
manager,BuildManager
manager,BuildManager
order,int
id,str
xpath,str
ancestors,"Union[List[str], None]"
import_context,"List[Tuple[str, int]]"
interface_hash,str
options,Options
fine_grained_deps,"Dict[str, Set[str]]"
__init__,"Callable[[_, Union[str, None], Union[str, None], Union[str, None], BuildManager, Union[State, None], int, Union[State, None], bool, bool],None]"
manager,BuildManager
caller_line,int
root_source,bool
temporary,bool
xmeta,"Callable[[_],CacheMeta]"
add_ancestors,"Callable[[_],None]"
is_fresh,"Callable[[_],bool]"
is_interface_fresh,"Callable[[_],bool]"
mark_as_rechecked,"Callable[[_],None]"
mark_interface_stale,"Callable[[_],None]"
on_errors,bool
check_blockers,"Callable[[_],None]"
load_fine_grained_deps,"Callable[[_],None]"
load_tree,"Callable[[_, bool],None]"
temporary,bool
fix_cross_refs,"Callable[[_],None]"
patch_dependency_parents,"Callable[[_],None]"
fix_suppressed_dependencies,"Callable[[_, Graph],None]"
graph,Graph
parse_file,"Callable[[_],None]"
compute_dependencies,"Callable[[_],None]"
semantic_analysis,"Callable[[_],None]"
patches,"List[Tuple[int, Callable[[],None]]]"
semantic_analysis_pass_three,"Callable[[_],None]"
patches,"List[Tuple[int, Callable[[],None]]]"
semantic_analysis_apply_patches,"Callable[[_],None]"
type_check_first_pass,"Callable[[_],None]"
type_checker,"Callable[[_],TypeChecker]"
type_check_second_pass,"Callable[[_],bool]"
finish_passes,"Callable[[_],None]"
_patch_indirect_dependencies,"Callable[[_, Set[str], Dict[Expression, Type]],None]"
compute_fine_grained_deps,"Callable[[_],None]"
write_cache,"Callable[[_],None]"
verify_dependencies,"Callable[[_, bool],None]"
suppressed_only,bool
generate_unused_ignore_notes,"Callable[[_],None]"
find_module_and_diagnose,"Callable[[BuildManager, str, Options, Union[State, None], int, Union[State, None], bool, bool],Tuple[str, str]]"
manager,BuildManager
id,str
options,Options
caller_line,int
root_source,bool
skip_diagnose,bool
exist_added_packages,"Callable[[List[str], BuildManager, Options],bool]"
manager,BuildManager
options,Options
find_module_simple,"Callable[[str, BuildManager],Union[str, None]]"
id,str
manager,BuildManager
in_partial_package,"Callable[[str, BuildManager],bool]"
id,str
manager,BuildManager
module_not_found,"Callable[[BuildManager, int, State, str],None]"
manager,BuildManager
line,int
caller_state,State
target,str
skipping_module,"Callable[[BuildManager, int, Union[State, None], str, str],None]"
manager,BuildManager
line,int
id,str
path,str
skipping_ancestor,"Callable[[BuildManager, str, str, State],None]"
manager,BuildManager
id,str
path,str
ancestor_for,State
dispatch,"Callable[[List[BuildSource], BuildManager],Graph]"
manager,BuildManager
__init__,"Callable[[_, int, List[str]],None]"
index,int
dumps,"Callable[[_],str]"
dump_graph,"Callable[[Graph],None]"
graph,Graph
load_graph,"Callable[[List[BuildSource], BuildManager, Union[Graph, None], Union[List[State], None]],Graph]"
manager,BuildManager
new_modules,"Union[List[State], None]"
graph,Graph
process_graph,"Callable[[Graph, BuildManager],None]"
graph,Graph
manager,BuildManager
fresh_scc_queue,List[List[str]]
process_fine_grained_cache_graph,"Callable[[Graph, BuildManager],None]"
graph,Graph
manager,BuildManager
order_ascc,"Callable[[Graph, AbstractSet[str], int],List[str]]"
graph,Graph
pri_max,int
process_fresh_modules,"Callable[[Graph, List[str], BuildManager],None]"
graph,Graph
manager,BuildManager
process_stale_scc,"Callable[[Graph, List[str], BuildManager],None]"
graph,Graph
manager,BuildManager
sorted_components,"Callable[[Graph, Union[AbstractSet[str], None], int],List[AbstractSet[str]]]"
graph,Graph
vertices,"Union[AbstractSet[str], None]"
pri_max,int
data,"Dict[AbstractSet[str], Set[AbstractSet[str]]]"
deps,Set[AbstractSet[str]]
deps_filtered,"Callable[[Graph, AbstractSet[str], str, int],List[str]]"
graph,Graph
id,str
pri_max,int
strongly_connected_components,"Callable[[AbstractSet[str], Dict[str, List[str]]],Iterator[Set[str]]]"
edges,"Dict[str, List[str]]"
dfs,"Callable[[str],Iterator[Set[str]]]"
v,str
topsort,"Callable[[Dict[AbstractSet[str], Set[AbstractSet[str]]]],Iterable[Set[AbstractSet[str]]]]"
data,"Dict[AbstractSet[str], Set[AbstractSet[str]]]"
ALWAYS_TRUE,Final
MYPY_TRUE,Final
ALWAYS_FALSE,Final
MYPY_FALSE,Final
TRUTH_VALUE_UNKNOWN,Final
inverted_truth_mapping,Final
obsolete_name_mapping,Final
TYPE_PROMOTIONS,Final
TYPE_PROMOTIONS_PYTHON3,Final
TYPE_PROMOTIONS_PYTHON2,Final
FUNCTION_BOTH_PHASES,Final
FUNCTION_FIRST_PHASE_POSTPONE_SECOND,Final
FUNCTION_SECOND_PHASE,Final
SUGGESTED_TEST_FIXTURES,Final
globals,SymbolTable
global_decls,List[Set[str]]
nonlocal_decls,List[Set[str]]
locals,"List[Union[SymbolTable, None]]"
type_stack,"List[Union[TypeInfo, None]]"
tvar_scope,TypeVarScope
options,Options
postponed_functions_stack,List[List[Node]]
errors,Errors
plugin,Plugin
__init__,"Callable[[_, Dict[str, MypyFile], Set[str], Errors, Plugin],None]"
errors,Errors
plugin,Plugin
is_typeshed_stub_file,"Callable[[_],bool]"
add_plugin_dependency,"Callable[[_, str, Union[str, None]],None]"
trigger,str
visit_file,"Callable[[_, MypyFile, str, Options, List[Tuple[int, Callable[[],None]]]],None]"
file_node,MypyFile
fnam,str
options,Options
patches,"List[Tuple[int, Callable[[],None]]]"
refresh_partial,"Callable[[_, Union[MypyFile, FuncDef, OverloadedFuncDef], List[Tuple[int, Callable[[],None]]]],None]"
patches,"List[Tuple[int, Callable[[],None]]]"
refresh_top_level,"Callable[[_, MypyFile],None]"
file_node,MypyFile
file_context,"Callable[[_, MypyFile, str, Options, Union[TypeInfo, None], Union[Scope, None]],Iterator[None]]"
file_node,MypyFile
fnam,str
options,Options
visit_func_def,"Callable[[_, FuncDef],None]"
defn,FuncDef
_visit_func_def,"Callable[[_, FuncDef],None]"
defn,FuncDef
prepare_method_signature,"Callable[[_, FuncDef, TypeInfo],None]"
func,FuncDef
info,TypeInfo
leading_type,Type
set_original_def,"Callable[[_, Union[Node, None], FuncDef],bool]"
new,FuncDef
update_function_type_variables,"Callable[[_, CallableType, FuncItem],None]"
fun_type,CallableType
defn,FuncItem
visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
defn,OverloadedFuncDef
_visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
defn,OverloadedFuncDef
analyze_property_with_multi_part_definition,"Callable[[_, OverloadedFuncDef],None]"
defn,OverloadedFuncDef
analyze_function,"Callable[[_, FuncItem],None]"
defn,FuncItem
check_classvar_in_signature,"Callable[[_, Type],None]"
typ,Type
t,Type
check_function_signature,"Callable[[_, FuncItem],None]"
fdef,FuncItem
visit_class_def,"Callable[[_, ClassDef],None]"
defn,ClassDef
analyze_class_body,"Callable[[_, ClassDef],Iterator[bool]]"
defn,ClassDef
apply_class_plugin_hooks,"Callable[[_, ClassDef],None]"
defn,ClassDef
get_fullname,"Callable[[Expression],Union[str, None]]"
expr,Expression
analyze_class_keywords,"Callable[[_, ClassDef],None]"
defn,ClassDef
enter_class,"Callable[[_, TypeInfo],None]"
info,TypeInfo
leave_class,"Callable[[_],None]"
analyze_class_decorator,"Callable[[_, ClassDef, Expression],None]"
defn,ClassDef
decorator,Expression
calculate_abstract_status,"Callable[[_, TypeInfo],None]"
typ,TypeInfo
setup_type_promotion,"Callable[[_, ClassDef],None]"
defn,ClassDef
detect_protocol_base,"Callable[[_, ClassDef],bool]"
defn,ClassDef
clean_up_bases_and_infer_type_variables,"Callable[[_, ClassDef],None]"
defn,ClassDef
declared_tvars,TypeVarList
analyze_typevar_declaration,"Callable[[_, Type],Union[TypeVarList, None]]"
t,Type
tvars,TypeVarList
analyze_unbound_tvar,"Callable[[_, Type],Union[Tuple[str, TypeVarExpr], None]]"
t,Type
get_all_bases_tvars,"Callable[[_, ClassDef, List[int]],TypeVarList]"
defn,ClassDef
tvars,TypeVarList
setup_class_def_analysis,"Callable[[_, ClassDef],None]"
defn,ClassDef
analyze_base_classes,"Callable[[_, ClassDef],None]"
defn,ClassDef
calculate_class_mro,"Callable[[_, ClassDef, Union[Callable[[],Instance], None]],None]"
defn,ClassDef
obj_type,"Union[Callable[[],Instance], None]"
update_metaclass,"Callable[[_, ClassDef],None]"
defn,ClassDef
expr_to_analyzed_type,"Callable[[_, Expression],Type]"
expr,Expression
verify_base_classes,"Callable[[_, ClassDef],bool]"
defn,ClassDef
is_base_class,"Callable[[_, TypeInfo, TypeInfo],bool]"
t,TypeInfo
s,TypeInfo
analyze_metaclass,"Callable[[_, ClassDef],None]"
defn,ClassDef
object_type,"Callable[[_],Instance]"
str_type,"Callable[[_],Instance]"
class_type,"Callable[[_, Type],Type]"
self_type,Type
named_type,"Callable[[_, str, Union[List[Type], None]],Instance]"
qualified_name,str
args,"Union[List[Type], None]"
named_type_or_none,"Callable[[_, str, Union[List[Type], None]],Union[Instance, None]]"
qualified_name,str
args,"Union[List[Type], None]"
visit_import,"Callable[[_, Import],None]"
i,Import
add_submodules_to_parent_modules,"Callable[[_, str, bool],None]"
id,str
module_public,bool
allow_patching,"Callable[[_, MypyFile, str],bool]"
parent_mod,MypyFile
child,str
add_module_symbol,"Callable[[_, str, str, bool, Context, bool],None]"
id,str
as_id,str
module_public,bool
context,Context
module_hidden,bool
visit_import_from,"Callable[[_, ImportFrom],None]"
imp,ImportFrom
process_import_over_existing_name,"Callable[[_, str, SymbolTableNode, SymbolTableNode, ImportBase],bool]"
imported_id,str
existing_symbol,SymbolTableNode
module_symbol,SymbolTableNode
import_node,ImportBase
add_fixture_note,"Callable[[_, str, Context],None]"
fullname,str
ctx,Context
correct_relative_import,"Callable[[_, Union[ImportFrom, ImportAll]],str]"
visit_import_all,"Callable[[_, ImportAll],None]"
i,ImportAll
add_unknown_symbol,"Callable[[_, str, Context, bool, Union[str, None]],None]"
name,str
context,Context
is_import,bool
visit_block,"Callable[[_, Block],None]"
b,Block
visit_block_maybe,"Callable[[_, Union[Block, None]],None]"
type_analyzer,"Callable[[_],TypeAnalyser]"
allow_tuple_literal,bool
allow_unbound_tvars,bool
third_pass,bool
anal_type,"Callable[[_, Type],Type]"
t,Type
allow_tuple_literal,bool
allow_unbound_tvars,bool
third_pass,bool
add_type_alias_deps,"Callable[[_, Iterable[str], Union[str, None]],None]"
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
final_cb,"Callable[[bool],None]"
keep_final,bool
apply_dynamic_class_hook,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
unwrap_final,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
check_final_implicit_def,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
store_final_status,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
unbox_literal,"Callable[[_, Expression],Union[int, float, bool, str, None]]"
e,Expression
analyze_simple_literal_type,"Callable[[_, Expression],Union[Type, None]]"
rvalue,Expression
analyze_alias,"Callable[[_, Expression],Tuple[Union[Type, None], List[str], Set[str], List[str]]]"
rvalue,Expression
check_and_set_up_type_alias,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
analyze_lvalue,"Callable[[_, Lvalue, bool, bool, bool, Union[Callable[[bool],None], None]],None]"
lval,Lvalue
nested,bool
add_global,bool
explicit_type,bool
final_cb,"Union[Callable[[bool],None], None]"
analyze_name_lvalue,"Callable[[_, NameExpr, bool, bool, Union[Callable[[bool],None], None]],None]"
lval,NameExpr
add_global,bool
explicit_type,bool
final_cb,"Union[Callable[[bool],None], None]"
make_name_lvalue_var,"Callable[[_, NameExpr, int, bool],Var]"
lvalue,NameExpr
kind,int
inferred,bool
make_name_lvalue_point_to_existing_def,"Callable[[_, NameExpr, bool, Union[Callable[[bool],None], None]],None]"
lval,NameExpr
explicit_type,bool
final_cb,"Union[Callable[[bool],None], None]"
analyze_tuple_or_list_lvalue,"Callable[[_, TupleExpr, bool, bool],None]"
lval,TupleExpr
add_global,bool
explicit_type,bool
analyze_member_lvalue,"Callable[[_, MemberExpr, bool, Union[Callable[[bool],None], None]],None]"
lval,MemberExpr
explicit_type,bool
final_cb,"Union[Callable[[bool],None], None]"
is_self_member_ref,"Callable[[_, MemberExpr],bool]"
memberexpr,MemberExpr
check_lvalue_validity,"Callable[[_, Union[Expression, SymbolNode, None], Context],None]"
ctx,Context
store_declared_types,"Callable[[_, Lvalue, Type],None]"
lvalue,Lvalue
typ,Type
process_typevar_declaration,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
check_typevar_name,"Callable[[_, CallExpr, str, Context],bool]"
call,CallExpr
name,str
context,Context
get_typevar_declaration,"Callable[[_, AssignmentStmt],Union[CallExpr, None]]"
s,AssignmentStmt
process_typevar_parameters,"Callable[[_, List[Expression], List[Union[str, None]], List[int], int, Context],Union[Tuple[int, Type], None]]"
names,"List[Union[str, None]]"
num_values,int
context,Context
upper_bound,Type
basic_new_typeinfo,"Callable[[_, str, Instance],TypeInfo]"
name,str
basetype_or_fallback,Instance
parse_bool,"Callable[[_, Expression],Union[bool, None]]"
expr,Expression
check_classvar,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
is_classvar,"Callable[[_, Type],bool]"
typ,Type
is_final_type,"Callable[[_, Type],bool]"
typ,Type
fail_invalid_classvar,"Callable[[_, Context],None]"
context,Context
process_module_assignment,"Callable[[_, List[Lvalue], Expression, AssignmentStmt],None]"
rval,Expression
ctx,AssignmentStmt
visit_decorator,"Callable[[_, Decorator],None]"
dec,Decorator
check_decorated_function_is_method,"Callable[[_, str, Context],None]"
decorator,str
context,Context
visit_expression_stmt,"Callable[[_, ExpressionStmt],None]"
s,ExpressionStmt
visit_return_stmt,"Callable[[_, ReturnStmt],None]"
s,ReturnStmt
visit_raise_stmt,"Callable[[_, RaiseStmt],None]"
s,RaiseStmt
visit_assert_stmt,"Callable[[_, AssertStmt],None]"
s,AssertStmt
visit_operator_assignment_stmt,"Callable[[_, OperatorAssignmentStmt],None]"
s,OperatorAssignmentStmt
visit_while_stmt,"Callable[[_, WhileStmt],None]"
s,WhileStmt
visit_for_stmt,"Callable[[_, ForStmt],None]"
s,ForStmt
visit_break_stmt,"Callable[[_, BreakStmt],None]"
s,BreakStmt
visit_continue_stmt,"Callable[[_, ContinueStmt],None]"
s,ContinueStmt
visit_if_stmt,"Callable[[_, IfStmt],None]"
s,IfStmt
visit_try_stmt,"Callable[[_, TryStmt],None]"
s,TryStmt
analyze_try_stmt,"Callable[[_, TryStmt, NodeVisitor[None], bool],None]"
s,TryStmt
add_global,bool
visit_with_stmt,"Callable[[_, WithStmt],None]"
s,WithStmt
visit_del_stmt,"Callable[[_, DelStmt],None]"
s,DelStmt
is_valid_del_target,"Callable[[_, Expression],bool]"
s,Expression
visit_global_decl,"Callable[[_, GlobalDecl],None]"
g,GlobalDecl
visit_nonlocal_decl,"Callable[[_, NonlocalDecl],None]"
d,NonlocalDecl
visit_print_stmt,"Callable[[_, PrintStmt],None]"
s,PrintStmt
visit_exec_stmt,"Callable[[_, ExecStmt],None]"
s,ExecStmt
visit_name_expr,"Callable[[_, NameExpr],None]"
expr,NameExpr
visit_super_expr,"Callable[[_, SuperExpr],None]"
expr,SuperExpr
visit_tuple_expr,"Callable[[_, TupleExpr],None]"
expr,TupleExpr
visit_list_expr,"Callable[[_, ListExpr],None]"
expr,ListExpr
visit_set_expr,"Callable[[_, SetExpr],None]"
expr,SetExpr
visit_dict_expr,"Callable[[_, DictExpr],None]"
expr,DictExpr
visit_star_expr,"Callable[[_, StarExpr],None]"
expr,StarExpr
visit_yield_from_expr,"Callable[[_, YieldFromExpr],None]"
e,YieldFromExpr
visit_call_expr,"Callable[[_, CallExpr],None]"
expr,CallExpr
translate_dict_call,"Callable[[_, CallExpr],Union[DictExpr, None]]"
call,CallExpr
check_fixed_args,"Callable[[_, CallExpr, int, str],bool]"
expr,CallExpr
numargs,int
name,str
visit_member_expr,"Callable[[_, MemberExpr],None]"
expr,MemberExpr
typ,Type
visit_op_expr,"Callable[[_, OpExpr],None]"
expr,OpExpr
visit_comparison_expr,"Callable[[_, ComparisonExpr],None]"
expr,ComparisonExpr
visit_unary_expr,"Callable[[_, UnaryExpr],None]"
expr,UnaryExpr
visit_index_expr,"Callable[[_, IndexExpr],None]"
expr,IndexExpr
lookup_type_node,"Callable[[_, Expression],Union[SymbolTableNode, None]]"
expr,Expression
visit_slice_expr,"Callable[[_, SliceExpr],None]"
expr,SliceExpr
visit_cast_expr,"Callable[[_, CastExpr],None]"
expr,CastExpr
visit_reveal_expr,"Callable[[_, RevealExpr],None]"
expr,RevealExpr
visit_type_application,"Callable[[_, TypeApplication],None]"
expr,TypeApplication
visit_list_comprehension,"Callable[[_, ListComprehension],None]"
expr,ListComprehension
visit_set_comprehension,"Callable[[_, SetComprehension],None]"
expr,SetComprehension
visit_dictionary_comprehension,"Callable[[_, DictionaryComprehension],None]"
expr,DictionaryComprehension
visit_generator_expr,"Callable[[_, GeneratorExpr],None]"
expr,GeneratorExpr
analyze_comp_for,"Callable[[_, Union[GeneratorExpr, DictionaryComprehension]],None]"
analyze_comp_for_2,"Callable[[_, Union[GeneratorExpr, DictionaryComprehension]],None]"
visit_lambda_expr,"Callable[[_, LambdaExpr],None]"
expr,LambdaExpr
visit_conditional_expr,"Callable[[_, ConditionalExpr],None]"
expr,ConditionalExpr
visit_backquote_expr,"Callable[[_, BackquoteExpr],None]"
expr,BackquoteExpr
visit__promote_expr,"Callable[[_, PromoteExpr],None]"
expr,PromoteExpr
visit_yield_expr,"Callable[[_, YieldExpr],None]"
expr,YieldExpr
visit_await_expr,"Callable[[_, AwaitExpr],None]"
expr,AwaitExpr
tvar_scope_frame,"Callable[[_, TypeVarScope],Iterator[None]]"
frame,TypeVarScope
lookup,"Callable[[_, str, Context, bool],Union[SymbolTableNode, None]]"
name,str
ctx,Context
suppress_errors,bool
check_for_obsolete_short_name,"Callable[[_, str, Context],None]"
name,str
ctx,Context
lookup_qualified,"Callable[[_, str, Context, bool],Union[SymbolTableNode, None]]"
name,str
ctx,Context
suppress_errors,bool
create_getattr_var,"Callable[[_, SymbolTableNode, str, str],Union[SymbolTableNode, None]]"
getattr_defn,SymbolTableNode
name,str
fullname,str
rebind_symbol_table_node,"Callable[[_, SymbolTableNode],Union[SymbolTableNode, None]]"
n,SymbolTableNode
builtin_type,"Callable[[_, str],Instance]"
fully_qualified_name,str
add_builtin_aliases,"Callable[[_, MypyFile],None]"
tree,MypyFile
lookup_fully_qualified,"Callable[[_, str],SymbolTableNode]"
name,str
lookup_fully_qualified_or_none,"Callable[[_, str],Union[SymbolTableNode, None]]"
fullname,str
qualified_name,"Callable[[_, str],str]"
n,str
enter,"Callable[[_],None]"
leave,"Callable[[_],None]"
is_func_scope,"Callable[[_],bool]"
is_nested_within_func_scope,"Callable[[_],bool]"
is_class_scope,"Callable[[_],bool]"
is_module_scope,"Callable[[_],bool]"
add_symbol,"Callable[[_, str, SymbolTableNode, Context],None]"
name,str
node,SymbolTableNode
context,Context
add_local,"Callable[[_, Union[Var, FuncDef, OverloadedFuncDef], Context],None]"
ctx,Context
add_exports,"Callable[[_, Union[Iterable[Expression], Expression]],None]"
exp_or_exps,"Union[Iterable[Expression], Expression]"
check_no_global,"Callable[[_, str, Context, bool],None]"
n,str
ctx,Context
is_overloaded_func,bool
name_not_defined,"Callable[[_, str, Context],None]"
name,str
ctx,Context
name_already_defined,"Callable[[_, str, Context, Union[SymbolTableNode, SymbolNode, None]],None]"
name,str
ctx,Context
fail,"Callable[[_, str, Context, bool],None]"
msg,str
ctx,Context
serious,bool
blocker,bool
fail_blocker,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
note,"Callable[[_, str, Context],None]"
msg,str
ctx,Context
undefined_name_extra_info,"Callable[[_, str],Union[str, None]]"
fullname,str
accept,"Callable[[_, Node],None]"
node,Node
analyze_type_expr,"Callable[[_, Expression],None]"
expr,Expression
lookup_current_scope,"Callable[[_, str],Union[SymbolTableNode, None]]"
name,str
schedule_patch,"Callable[[_, int, Callable[[],None]],None]"
priority,int
patch,"Callable[[],None]"
add_symbol_table_node,"Callable[[_, str, SymbolTableNode],None]"
name,str
stnode,SymbolTableNode
replace_implicit_first_type,"Callable[[FunctionLike, Type],FunctionLike]"
sig,FunctionLike
new,Type
refers_to_fullname,"Callable[[Expression, str],bool]"
node,Expression
fullname,str
refers_to_class_or_function,"Callable[[Expression],bool]"
node,Expression
calculate_mro,"Callable[[TypeInfo, Union[Callable[[],Instance], None]],None]"
info,TypeInfo
obj_type,"Union[Callable[[],Instance], None]"
linearize_hierarchy,"Callable[[TypeInfo, Union[Callable[[],Instance], None]],List[TypeInfo]]"
info,TypeInfo
obj_type,"Union[Callable[[],Instance], None]"
merge,"Callable[[List[List[TypeInfo]]],List[TypeInfo]]"
seqs,List[List[TypeInfo]]
remove_imported_names_from_symtable,"Callable[[SymbolTable, str],None]"
names,SymbolTable
module,str
infer_reachability_of_if_statement,"Callable[[IfStmt, Options],None]"
s,IfStmt
options,Options
assert_will_always_fail,"Callable[[AssertStmt, Options],bool]"
s,AssertStmt
options,Options
infer_condition_value,"Callable[[Expression, Options],int]"
expr,Expression
options,Options
consider_sys_version_info,"Callable[[Expression, _],int]"
expr,Expression
consider_sys_platform,"Callable[[Expression, str],int]"
expr,Expression
platform,str
fixed_comparison,"Callable[[Targ, str, Targ],int]"
left,Targ
op,str
right,Targ
contains_int_or_tuple_of_ints,"Callable[[Expression],_]"
expr,Expression
contains_sys_version_info,"Callable[[Expression],Union[None, int, Tuple[Union[int, None], Union[int, None]]]]"
expr,Expression
is_sys_attr,"Callable[[Expression, str],bool]"
expr,Expression
name,str
mark_block_unreachable,"Callable[[Block],None]"
block,Block
visit_import,"Callable[[_, Import],None]"
node,Import
visit_import_from,"Callable[[_, ImportFrom],None]"
node,ImportFrom
visit_import_all,"Callable[[_, ImportAll],None]"
node,ImportAll
mark_block_mypy_only,"Callable[[Block],None]"
block,Block
visit_import,"Callable[[_, Import],None]"
node,Import
visit_import_from,"Callable[[_, ImportFrom],None]"
node,ImportFrom
visit_import_all,"Callable[[_, ImportAll],None]"
node,ImportAll
make_any_non_explicit,"Callable[[Type],Type]"
t,Type
visit_any,"Callable[[_, AnyType],Type]"
t,AnyType
apply_semantic_analyzer_patches,"Callable[[List[Tuple[int, Callable[[],None]]]],None]"
patches,"List[Tuple[int, Callable[[],None]]]"
_NON_BINARY_MAGIC_METHODS,Final
MAGIC_METHODS_ALLOWING_KWARGS,Final
BINARY_MAGIC_METHODS,Final
MAGIC_METHODS,Final
MAGIC_METHODS_POS_ARGS_ONLY,Final
special_function_elide_names,"Callable[[str],bool]"
name,str
argument_elide_name,"Callable[[Union[str, None]],bool]"
map_instance_to_supertype,"Callable[[Instance, TypeInfo],Instance]"
instance,Instance
superclass,TypeInfo
map_instance_to_supertypes,"Callable[[Instance, TypeInfo],List[Instance]]"
instance,Instance
supertype,TypeInfo
class_derivation_paths,"Callable[[TypeInfo, TypeInfo],List[List[TypeInfo]]]"
typ,TypeInfo
supertype,TypeInfo
result,List[List[TypeInfo]]
map_instance_to_direct_supertypes,"Callable[[Instance, TypeInfo],List[Instance]]"
instance,Instance
supertype,TypeInfo
instance_to_type_environment,"Callable[[Instance],Dict[TypeVarId, Type]]"
instance,Instance
infer_function_type_arguments,"Callable[[CallableType, Sequence[Union[Type, None]], List[int], List[List[int]], bool],List[Union[Type, None]]]"
callee_type,CallableType
arg_types,"Sequence[Union[Type, None]]"
formal_to_actual,List[List[int]]
strict,bool
infer_type_arguments,"Callable[[List[TypeVarId], Type, Type],List[Union[Type, None]]]"
template,Type
actual,Type
_get_bytes_type,"Callable[[mypy.plugin.CheckerPluginInterface],Instance]"
api,mypy.plugin.CheckerPluginInterface
_get_text_type,"Callable[[mypy.plugin.CheckerPluginInterface],Instance]"
api,mypy.plugin.CheckerPluginInterface
_find_simplecdata_base_arg,"Callable[[Instance, mypy.plugin.CheckerPluginInterface],Union[Type, None]]"
tp,Instance
api,mypy.plugin.CheckerPluginInterface
_autoconvertible_to_cdata,"Callable[[Type, mypy.plugin.CheckerPluginInterface],Type]"
tp,Type
api,mypy.plugin.CheckerPluginInterface
_autounboxed_cdata,"Callable[[Type],Type]"
tp,Type
_get_array_element_type,"Callable[[Type],Union[Type, None]]"
tp,Type
array_constructor_callback,"Callable[[mypy.plugin.FunctionContext],Type]"
ctx,mypy.plugin.FunctionContext
array_getitem_callback,"Callable[[mypy.plugin.MethodContext],Type]"
ctx,mypy.plugin.MethodContext
array_setitem_callback,"Callable[[mypy.plugin.MethodSigContext],CallableType]"
ctx,mypy.plugin.MethodSigContext
array_iter_callback,"Callable[[mypy.plugin.MethodContext],Type]"
ctx,mypy.plugin.MethodContext
array_value_callback,"Callable[[mypy.plugin.AttributeContext],Type]"
ctx,mypy.plugin.AttributeContext
array_raw_callback,"Callable[[mypy.plugin.AttributeContext],Type]"
ctx,mypy.plugin.AttributeContext
dataclass_makers,Final
__init__,"Callable[[_, str, bool, bool, bool, int, int],None]"
name,str
is_in_init,bool
is_init_var,bool
has_default,bool
line,int
column,int
to_argument,"Callable[[_, TypeInfo],Argument]"
info,TypeInfo
to_var,"Callable[[_, TypeInfo],Var]"
info,TypeInfo
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, TypeInfo, JsonDict],DataclassAttribute]"
info,TypeInfo
data,JsonDict
__init__,"Callable[[_, ClassDefContext],None]"
ctx,ClassDefContext
transform,"Callable[[_],None]"
_freeze,"Callable[[_, List[DataclassAttribute]],None]"
dataclass_class_maker_callback,"Callable[[ClassDefContext],None]"
ctx,ClassDefContext
_collect_field_args,"Callable[[Expression],Tuple[bool, Dict[str, Expression]]]"
expr,Expression
attr_class_makers,Final
attr_dataclass_makers,Final
attr_attrib_makers,Final
__init__,"Callable[[_, Union[str, None], bool],None]"
is_attr_converters_optional,bool
__init__,"Callable[[_, str, TypeInfo, bool, bool, Converter, Context],None]"
name,str
info,TypeInfo
has_default,bool
init,bool
converter,Converter
context,Context
argument,"Callable[[_, mypy.plugin.ClassDefContext],Argument]"
ctx,mypy.plugin.ClassDefContext
serialize,"Callable[[_],JsonDict]"
deserialize,"Callable[[_, TypeInfo, JsonDict],Attribute]"
info,TypeInfo
data,JsonDict
attr_class_maker_callback,"Callable[[mypy.plugin.ClassDefContext, bool],None]"
ctx,mypy.plugin.ClassDefContext
auto_attribs_default,bool
_get_frozen,"Callable[[mypy.plugin.ClassDefContext],bool]"
ctx,mypy.plugin.ClassDefContext
_analyze_class,"Callable[[mypy.plugin.ClassDefContext, bool],List[Attribute]]"
ctx,mypy.plugin.ClassDefContext
auto_attribs,bool
_attributes_from_assignment,"Callable[[mypy.plugin.ClassDefContext, AssignmentStmt, bool],Iterable[Attribute]]"
ctx,mypy.plugin.ClassDefContext
stmt,AssignmentStmt
auto_attribs,bool
_cleanup_decorator,"Callable[[Decorator, Dict[str, Attribute]],None]"
stmt,Decorator
_attribute_from_auto_attrib,"Callable[[mypy.plugin.ClassDefContext, NameExpr, Expression, AssignmentStmt],Attribute]"
ctx,mypy.plugin.ClassDefContext
lhs,NameExpr
rvalue,Expression
stmt,AssignmentStmt
_attribute_from_attrib_maker,"Callable[[mypy.plugin.ClassDefContext, bool, NameExpr, CallExpr, AssignmentStmt],Union[Attribute, None]]"
ctx,mypy.plugin.ClassDefContext
auto_attribs,bool
lhs,NameExpr
rvalue,CallExpr
stmt,AssignmentStmt
_parse_converter,"Callable[[mypy.plugin.ClassDefContext, Union[Expression, None]],Converter]"
ctx,mypy.plugin.ClassDefContext
_parse_assignments,"Callable[[Expression, AssignmentStmt],Tuple[List[NameExpr], List[Expression]]]"
lvalue,Expression
stmt,AssignmentStmt
_add_cmp,"Callable[[mypy.plugin.ClassDefContext, MethodAdder],None]"
ctx,mypy.plugin.ClassDefContext
adder,MethodAdder
_make_frozen,"Callable[[mypy.plugin.ClassDefContext, List[Attribute]],None]"
ctx,mypy.plugin.ClassDefContext
_add_init,"Callable[[mypy.plugin.ClassDefContext, List[Attribute], MethodAdder],None]"
ctx,mypy.plugin.ClassDefContext
adder,MethodAdder
__init__,"Callable[[_, mypy.plugin.ClassDefContext],None]"
ctx,mypy.plugin.ClassDefContext
add_method,"Callable[[_, str, List[Argument], Type, Union[Type, None], Union[TypeVarDef, None]],None]"
method_name,str
ret_type,Type
_get_decorator_bool_argument,"Callable[[ClassDefContext, str, bool],bool]"
ctx,ClassDefContext
name,str
default,bool
_get_bool_argument,"Callable[[ClassDefContext, CallExpr, str, bool],bool]"
ctx,ClassDefContext
expr,CallExpr
name,str
default,bool
_get_argument,"Callable[[CallExpr, str],Union[Expression, None]]"
call,CallExpr
name,str
callee_node,Any
add_method,"Callable[[ClassDefContext, str, List[Argument], Type, Union[Type, None], Union[TypeVarDef, None]],None]"
ctx,ClassDefContext
name,str
return_type,Type
create_ns_program_src,"Callable[[NSImportStyle],str]"
import_style,NSImportStyle
__init__,"Callable[[_, str],None]"
source_code,str
self._temp_dir,"Union[tempfile.TemporaryDirectory[str], None]"
create,"Callable[[_],None]"
cleanup,"Callable[[_],None]"
build_msg,"Callable[[_],str]"
msgs,Enum
check_mypy_run,"Callable[[_, str, List[Enum], str, int, Union[str, None]],None]"
python_executable,str
expected_err,str
expected_returncode,int
virtualenv,"Callable[[_, str],Generator[Tuple[str, str], None, None]]"
python_executable,str
install_package,"Callable[[_, str, str, bool, bool],None]"
pkg,str
python_executable,str
use_pip,bool
editable,bool
setUp,"Callable[[_],None]"
tearDown,"Callable[[_],None]"
test_get_pkg_dirs,"Callable[[_],None]"
test_typedpkg_stub_package,"Callable[[_],None]"
test_typedpkg,"Callable[[_],None]"
test_stub_and_typed_pkg,"Callable[[_],None]"
test_typedpkg_stubs_python2,"Callable[[_],None]"
test_typedpkg_python2,"Callable[[_],None]"
test_typedpkg_egg,"Callable[[_],None]"
test_typedpkg_editable,"Callable[[_],None]"
test_typedpkg_egg_editable,"Callable[[_],None]"
test_nested_and_namespace_from_import,"Callable[[_],None]"
test_nested_and_namespace_import_as,"Callable[[_],None]"
test_nested_and_namespace_regular_import,"Callable[[_],None]"
test_coherence,"Callable[[_],None]"
test_executable_inference,"Callable[[_],None]"
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
setUp,"Callable[[_],None]"
test_any,"Callable[[_],None]"
test_simple_unbound_type,"Callable[[_],None]"
test_generic_unbound_type,"Callable[[_],None]"
test_callable_type,"Callable[[_],None]"
test_callable_type_with_default_args,"Callable[[_],None]"
test_callable_type_with_var_args,"Callable[[_],None]"
test_tuple_type,"Callable[[_],None]"
test_type_variable_binding,"Callable[[_],None]"
test_generic_function_type,"Callable[[_],None]"
setUp,"Callable[[_],None]"
test_trivial_expand,"Callable[[_],None]"
test_expand_naked_type_var,"Callable[[_],None]"
test_expand_basic_generic_types,"Callable[[_],None]"
assert_expand,"Callable[[_, Type, List[Tuple[TypeVarId, Type]], Type],None]"
orig,Type
map_items,"List[Tuple[TypeVarId, Type]]"
result,Type
test_trivial_erase,"Callable[[_],None]"
test_erase_with_type_variable,"Callable[[_],None]"
test_erase_with_generic_type,"Callable[[_],None]"
test_erase_with_tuple_type,"Callable[[_],None]"
test_erase_with_function_type,"Callable[[_],None]"
test_erase_with_type_object,"Callable[[_],None]"
test_erase_with_type_type,"Callable[[_],None]"
assert_erase,"Callable[[_, Type, Type],None]"
orig,Type
result,Type
test_is_more_precise,"Callable[[_],None]"
test_is_proper_subtype,"Callable[[_],None]"
test_is_proper_subtype_covariance,"Callable[[_],None]"
test_is_proper_subtype_contravariance,"Callable[[_],None]"
test_is_proper_subtype_invariance,"Callable[[_],None]"
test_empty_tuple_always_false,"Callable[[_],None]"
test_nonempty_tuple_always_true,"Callable[[_],None]"
test_union_can_be_true_if_any_true,"Callable[[_],None]"
test_union_can_not_be_true_if_none_true,"Callable[[_],None]"
test_union_can_be_false_if_any_false,"Callable[[_],None]"
test_union_can_not_be_false_if_none_false,"Callable[[_],None]"
test_true_only_of_false_type_is_uninhabited,"Callable[[_],None]"
test_true_only_of_true_type_is_idempotent,"Callable[[_],None]"
test_true_only_of_instance,"Callable[[_],None]"
test_true_only_of_union,"Callable[[_],None]"
test_false_only_of_true_type_is_uninhabited,"Callable[[_],None]"
test_false_only_of_false_type_is_idempotent,"Callable[[_],None]"
test_false_only_of_instance,"Callable[[_],None]"
test_false_only_of_union,"Callable[[_],None]"
tuple,"Callable[[_],TupleType]"
a,Type
callable,"Callable[[_, List[str]],CallableType]"
a,Type
setUp,"Callable[[_],None]"
test_trivial_cases,"Callable[[_],None]"
test_class_subtyping,"Callable[[_],None]"
test_tuples,"Callable[[_],None]"
test_function_types,"Callable[[_],None]"
test_type_vars,"Callable[[_],None]"
test_none,"Callable[[_],None]"
test_unbound_type,"Callable[[_],None]"
test_any_type,"Callable[[_],None]"
test_mixed_truth_restricted_type_simple,"Callable[[_],None]"
test_mixed_truth_restricted_type,"Callable[[_],None]"
test_other_mixed_types,"Callable[[_],None]"
test_simple_generics,"Callable[[_],None]"
test_generics_with_multiple_args,"Callable[[_],None]"
test_generics_with_inheritance,"Callable[[_],None]"
test_generics_with_inheritance_and_shared_supertype,"Callable[[_],None]"
test_generic_types_and_any,"Callable[[_],None]"
test_callables_with_any,"Callable[[_],None]"
test_overloaded,"Callable[[_],None]"
ov,"Callable[[],Overloaded]"
items,CallableType
test_overloaded_with_any,"Callable[[_],None]"
ov,"Callable[[],Overloaded]"
items,CallableType
test_join_interface_types,"Callable[[_],None]"
test_join_interface_and_class_types,"Callable[[_],None]"
test_join_class_types_with_interface_result,"Callable[[_],None]"
test_generic_interfaces,"Callable[[_],None]"
test_simple_type_objects,"Callable[[_],None]"
test_type_type,"Callable[[_],None]"
assert_join,"Callable[[_, Type, Type, Type],None]"
s,Type
t,Type
join,Type
assert_simple_join,"Callable[[_, Type, Type, Type],None]"
s,Type
t,Type
join,Type
tuple,"Callable[[_],TupleType]"
a,Type
callable,"Callable[[_],CallableType]"
a,Type
type_callable,"Callable[[_],CallableType]"
a,Type
setUp,"Callable[[_],None]"
test_trivial_cases,"Callable[[_],None]"
test_class_subtyping,"Callable[[_],None]"
test_tuples,"Callable[[_],None]"
test_function_types,"Callable[[_],None]"
test_type_vars,"Callable[[_],None]"
test_none,"Callable[[_],None]"
test_unbound_type,"Callable[[_],None]"
test_dynamic_type,"Callable[[_],None]"
test_simple_generics,"Callable[[_],None]"
test_generics_with_multiple_args,"Callable[[_],None]"
test_generics_with_inheritance,"Callable[[_],None]"
test_generics_with_inheritance_and_shared_supertype,"Callable[[_],None]"
test_generic_types_and_dynamic,"Callable[[_],None]"
test_callables_with_dynamic,"Callable[[_],None]"
test_meet_interface_types,"Callable[[_],None]"
test_meet_interface_and_class_types,"Callable[[_],None]"
test_meet_class_types_with_shared_interfaces,"Callable[[_],None]"
test_meet_with_generic_interfaces,"Callable[[_],None]"
test_type_type,"Callable[[_],None]"
assert_meet,"Callable[[_, Type, Type, Type],None]"
s,Type
t,Type
meet,Type
assert_simple_meet,"Callable[[_, Type, Type, Type],None]"
s,Type
t,Type
meet,Type
tuple,"Callable[[_],TupleType]"
a,Type
callable,"Callable[[_],CallableType]"
a,Type
get_semanal_options,"Callable[[],Options]"
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
test_semanal,"Callable[[DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
test_semanal_error,"Callable[[DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
__str__,"Callable[[_],str]"
setUp,"Callable[[_],None]"
test_empty_input,"Callable[[_],None]"
test_simple_supertype_constraints,"Callable[[_],None]"
test_simple_subtype_constraints,"Callable[[_],None]"
test_both_kinds_of_constraints,"Callable[[_],None]"
test_unsatisfiable_constraints,"Callable[[_],None]"
test_exactly_specified_result,"Callable[[_],None]"
test_multiple_variables,"Callable[[_],None]"
test_no_constraints_for_var,"Callable[[_],None]"
test_simple_constraints_with_dynamic_type,"Callable[[_],None]"
test_both_normal_and_any_types_in_results,"Callable[[_],None]"
assert_solve,"Callable[[_, List[TypeVarId], List[Constraint], List[Union[None, Type, Tuple[Type, Type]]]],None]"
results,"List[Union[None, Type, Tuple[Type, Type]]]"
res,"List[Union[Type, None]]"
supc,"Callable[[_, TypeVarType, Type],Constraint]"
type_var,TypeVarType
bound,Type
subc,"Callable[[_, TypeVarType, Type],Constraint]"
type_var,TypeVarType
bound,Type
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
build,"Callable[[_, str, Options],Tuple[List[str], Union[Dict[str, MypyFile], None]]]"
source,str
options,Options
setup,"Callable[[_],None]"
self.id_mapper,IdMapper
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
build,"Callable[[_, str],Union[BuildResult, None]]"
source,str
build_increment,"Callable[[_, FineGrainedBuildManager, str, str],Tuple[MypyFile, Dict[Expression, Type]]]"
manager,FineGrainedBuildManager
module_id,str
path,str
dump,"Callable[[_, FineGrainedBuildManager, str],List[str]]"
manager,FineGrainedBuildManager
kind,str
dump_symbol_table,"Callable[[_, str, SymbolTable],List[str]]"
module_id,str
symtable,SymbolTable
format_symbol_table_node,"Callable[[_, SymbolTableNode],str]"
node,SymbolTableNode
dump_typeinfos_recursive,"Callable[[_, SymbolTable],List[str]]"
names,SymbolTable
dump_typeinfo,"Callable[[_, TypeInfo],List[str]]"
info,TypeInfo
dump_types,"Callable[[_, FineGrainedBuildManager],List[str]]"
manager,FineGrainedBuildManager
format_type,"Callable[[_, Type],str]"
typ,Type
is_dumped_module,"Callable[[str],bool]"
id,str
setUp,"Callable[[_],None]"
test_trivial_cases,"Callable[[_],None]"
test_instance_subtyping,"Callable[[_],None]"
test_simple_generic_instance_subtyping_invariant,"Callable[[_],None]"
test_simple_generic_instance_subtyping_covariant,"Callable[[_],None]"
test_simple_generic_instance_subtyping_contravariant,"Callable[[_],None]"
test_generic_subtyping_with_inheritance_invariant,"Callable[[_],None]"
test_generic_subtyping_with_inheritance_covariant,"Callable[[_],None]"
test_generic_subtyping_with_inheritance_contravariant,"Callable[[_],None]"
test_interface_subtyping,"Callable[[_],None]"
test_generic_interface_subtyping,"Callable[[_],None]"
test_basic_callable_subtyping,"Callable[[_],None]"
test_default_arg_callable_subtyping,"Callable[[_],None]"
test_var_arg_callable_subtyping_1,"Callable[[_],None]"
test_var_arg_callable_subtyping_2,"Callable[[_],None]"
test_var_arg_callable_subtyping_3,"Callable[[_],None]"
test_var_arg_callable_subtyping_4,"Callable[[_],None]"
test_var_arg_callable_subtyping_5,"Callable[[_],None]"
test_var_arg_callable_subtyping_6,"Callable[[_],None]"
test_var_arg_callable_subtyping_7,"Callable[[_],None]"
test_var_arg_callable_subtyping_8,"Callable[[_],None]"
test_var_arg_callable_subtyping_9,"Callable[[_],None]"
test_type_callable_subtyping,"Callable[[_],None]"
assert_subtype,"Callable[[_, Type, Type],None]"
s,Type
t,Type
assert_not_subtype,"Callable[[_, Type, Type],None]"
s,Type
t,Type
assert_strict_subtype,"Callable[[_, Type, Type],None]"
s,Type
t,Type
assert_equivalent,"Callable[[_, Type, Type],None]"
s,Type
t,Type
assert_unrelated,"Callable[[_, Type, Type],None]"
s,Type
t,Type
check_stubs,"Callable[[_, str],None]"
version,str
directories,str
test_2,"Callable[[_],None]"
test_3,"Callable[[_],None]"
test_34,"Callable[[_],None]"
test_35,"Callable[[_],None]"
test_36,"Callable[[_],None]"
test_37,"Callable[[_],None]"
test_samples,"Callable[[_],None]"
test_stdlibsamples,"Callable[[_],None]"
find_files,"Callable[[str, str, str],List[str]]"
base,str
prefix,str
suffix,str
file_to_module,"Callable[[str],str]"
file,str
parse_test_case,"Callable[[DataDrivenTestCase],None]"
case,DataDrivenTestCase
files,"List[Tuple[str, str]]"
output_files,"List[Tuple[str, str]]"
output2,"Dict[int, List[str]]"
deleted_paths,"Dict[int, Set[str]]"
stale_modules,"Dict[int, Set[str]]"
rechecked_modules,"Dict[int, Set[str]]"
output2,"Dict[int, List[str]]"
files,"List[Tuple[str, str]]"
expected_stale_modules,"Dict[int, Set[str]]"
expected_rechecked_modules,"Dict[int, Set[str]]"
clean_up,"List[Tuple[bool, str]]"
__init__,"Callable[[_, DataSuiteCollector, DataSuite, str, str, bool, str, bool, str, int],None]"
parent,DataSuiteCollector
suite,DataSuite
file,str
name,str
writescache,bool
only_when,str
skip,bool
data,str
line,int
self.tmpdir,"Union[tempfile.TemporaryDirectory[str], None]"
runtest,"Callable[[_],None]"
setup,"Callable[[_],None]"
add_dirs,"Callable[[_, str],List[str]]"
dir,str
teardown,"Callable[[_],None]"
repr_failure,"Callable[[_, Any],str]"
excinfo,Any
find_steps,"Callable[[_],List[List[FileOperation]]]"
steps,"Dict[int, List[FileOperation]]"
module_from_path,"Callable[[str],str]"
path,str
__init__,"Callable[[_, str, Union[str, None], List[str], int],None]"
id,str
line,int
parse_test_data,"Callable[[str, str],List[TestItem]]"
raw_data,str
name,str
expand_variables,"Callable[[str],str]"
s,str
expand_errors,"Callable[[List[str], List[str], str],None]"
fnam,str
fix_win_path,"Callable[[str],str]"
line,str
fix_cobertura_filename,"Callable[[str],str]"
line,str
pytest_addoption,"Callable[[Any],None]"
parser,Any
pytest_pycollect_makeitem,"Callable[[Any, str, object],Union[Any, None]]"
collector,Any
name,str
obj,object
split_test_cases,"Callable[[DataSuiteCollector, DataSuite, str],Iterator[DataDrivenTestCase]]"
parent,DataSuiteCollector
suite,DataSuite
file,str
collect,"Callable[[_],Iterator[pytest.Item]]"
suite,DataSuite
add_test_name_suffix,"Callable[[str, str],str]"
name,str
suffix,str
is_incremental,"Callable[[DataDrivenTestCase],bool]"
testcase,DataDrivenTestCase
has_stable_flags,"Callable[[DataDrivenTestCase],bool]"
testcase,DataDrivenTestCase
setup,"Callable[[_],None]"
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
should_skip,"Callable[[_, DataDrivenTestCase],bool]"
testcase,DataDrivenTestCase
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
get_options,"Callable[[_, str, DataDrivenTestCase, bool],Options]"
source,str
testcase,DataDrivenTestCase
build_cache,bool
run_check,"Callable[[_, Server, List[BuildSource]],List[str]]"
server,Server
build,"Callable[[_, Options, List[BuildSource]],List[str]]"
options,Options
format_triggered,"Callable[[_, List[List[str]]],List[str]]"
triggered,List[List[str]]
get_build_steps,"Callable[[_, str],int]"
program_text,str
parse_sources,"Callable[[_, str, int, Options],List[BuildSource]]"
program_text,str
incremental_step,int
options,Options
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
test_error_stream,"Callable[[DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
flush_errors,"Callable[[List[str], bool],None]"
serious,bool
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
test_python_evaluation,"Callable[[DataDrivenTestCase, str],None]"
testcase,DataDrivenTestCase
cache_dir,str
adapt_output,"Callable[[DataDrivenTestCase],List[str]]"
testcase,DataDrivenTestCase
__init__,"Callable[[_, int],None]"
variance,int
make_type_var,"Callable[[str, int, List[Type], Type, int],TypeVarType]"
name,str
id,int
upper_bound,Type
variance,int
callable,"Callable[[_],CallableType]"
a,Type
callable_type,"Callable[[_],CallableType]"
a,Type
callable_default,"Callable[[_, int],CallableType]"
min_args,int
a,Type
callable_var_arg,"Callable[[_, int],CallableType]"
min_args,int
a,Type
make_type_info,"Callable[[_, str, Union[str, None], bool, Union[List[TypeInfo], None], Union[List[Instance], None], Union[List[str], None], Union[List[int], None]],TypeInfo]"
name,str
is_abstract,bool
mro,"Union[List[TypeInfo], None]"
bases,"Union[List[Instance], None]"
typevars,"Union[List[str], None]"
variances,"Union[List[int], None]"
__init__,"Callable[[_],None]"
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
test_parser,"Callable[[DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
test_parse_error,"Callable[[DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
server,"Callable[[str, Queue[str]],None]"
msg,str
test_transaction_large,"Callable[[_],None]"
test_connect_twice,"Callable[[_],None]"
test_is_in_module_collection,"Callable[[_],None]"
test_walk_packages,"Callable[[_],None]"
test_parse_signature,"Callable[[_],None]"
test_parse_signature_with_args,"Callable[[_],None]"
test_parse_signature_with_optional_args,"Callable[[_],None]"
test_parse_signature_with_default_arg,"Callable[[_],None]"
test_parse_signature_with_qualified_function,"Callable[[_],None]"
test_parse_signature_with_kw_only_arg,"Callable[[_],None]"
test_parse_signature_with_star_arg,"Callable[[_],None]"
test_parse_signature_with_star_star_arg,"Callable[[_],None]"
assert_parse_signature,"Callable[[_, str, Tuple[str, List[str], List[str]]],None]"
sig,str
result,"Tuple[str, List[str], List[str]]"
test_build_signature,"Callable[[_],None]"
test_parse_all_signatures,"Callable[[_],None]"
test_find_unique_signatures,"Callable[[_],None]"
test_infer_sig_from_docstring,"Callable[[_],None]"
infer_prop_type_from_docstring,"Callable[[_],None]"
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
parse_flags,"Callable[[str],Options]"
program_text,str
test_stubgen,"Callable[[DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
reset_importlib_cache,"Callable[[str],None]"
entry,str
load_output,"Callable[[str],List[str]]"
dirname,str
add_file,"Callable[[str, List[str]],None]"
path,str
test_infer_hash_sig,"Callable[[_],None]"
test_infer_getitem_sig,"Callable[[_],None]"
test_infer_setitem_sig,"Callable[[_],None]"
test_infer_binary_op_sig,"Callable[[_],None]"
test_infer_unary_op_sig,"Callable[[_],None]"
test_generate_c_type_stub_no_crash_for_object,"Callable[[_],None]"
test_generate_c_type_stub_variable_type_annotation,"Callable[[_],None]"
test_generate_c_type_inheritance,"Callable[[_],None]"
test_generate_c_type_inheritance_same_module,"Callable[[_],None]"
test_generate_c_type_inheritance_other_module,"Callable[[_],None]"
test_generate_c_type_with_docstring,"Callable[[_],None]"
test,"Callable[[_, str],None]"
arg0,str
test_topsort,"Callable[[_],None]"
data,"Dict[AbstractSet[str], Set[AbstractSet[str]]]"
test_scc,"Callable[[_],None]"
edges,"Dict[str, List[str]]"
_make_manager,"Callable[[_],BuildManager]"
test_sorted_components,"Callable[[_],None]"
test_order_ascc,"Callable[[_],None]"
test_get_line_rate,"Callable[[_],None]"
test_as_xml,"Callable[[_],None]"
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
test_python_cmdline,"Callable[[DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
parse_args,"Callable[[str],List[str]]"
line,str
normalize_file_output,"Callable[[List[str], str],List[str]]"
current_abs_path,str
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
deps,"DefaultDict[str, Set[str]]"
build,"Callable[[_, str, Options],Tuple[List[str], Union[Dict[str, MypyFile], None], Union[Dict[Expression, Type], None]]]"
source,str
options,Options
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
test_daemon,"Callable[[DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
parse_script,"Callable[[List[str]],List[List[str]]]"
run_cmd,"Callable[[str],Tuple[int, str]]"
input,str
__init__,"Callable[[_],None]"
visit_mypy_file,"Callable[[_, MypyFile],None]"
f,MypyFile
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
s,AssignmentStmt
visit_name_expr,"Callable[[_, NameExpr],None]"
n,NameExpr
visit_int_expr,"Callable[[_, IntExpr],None]"
n,IntExpr
skip_if_typing,"Callable[[_, Expression],None]"
n,Expression
ignore_node,"Callable[[Expression],bool]"
node,Expression
type,"Callable[[_, Type],Type]"
type,Type
run_mypy,"Callable[[List[str]],None]"
assert_string_arrays_equal,"Callable[[List[str], List[str], str],None]"
msg,str
assert_module_equivalence,"Callable[[str, Union[Iterable[str], None], Iterable[str]],None]"
name,str
expected,"Union[Iterable[str], None]"
update_testcase_output,"Callable[[DataDrivenTestCase, List[str]],None]"
testcase,DataDrivenTestCase
mapping,"Dict[str, List[str]]"
show_align_message,"Callable[[str, str],None]"
s1,str
s2,str
num_skipped_prefix_lines,"Callable[[List[str], List[str]],int]"
num_skipped_suffix_lines,"Callable[[List[str], List[str]],int]"
testfile_pyversion,"Callable[[str],Tuple[int, int]]"
path,str
testcase_pyversion,"Callable[[str, str],Tuple[int, int]]"
path,str
testcase_name,str
retry_on_error,"Callable[[Callable[[],Any], float],None]"
func,"Callable[[],Any]"
max_wait,float
assert_true,"Callable[[bool, Union[str, None]],None]"
b,bool
assert_false,"Callable[[bool, Union[str, None]],None]"
b,bool
good_repr,"Callable[[object],str]"
obj,object
assert_equal,"Callable[[object, object, str],None]"
a,object
b,object
fmt,str
typename,"Callable[[type],str]"
t,type
assert_type,"Callable[[type, object],None]"
typ,type
value,object
parse_options,"Callable[[str, DataDrivenTestCase, int],Options]"
program_text,str
testcase,DataDrivenTestCase
incremental_step,int
streams,bytes
run_command,"Callable[[List[str]],Tuple[int, List[str]]]"
env,"Union[Dict[str, str], None]"
timeout,int
cwd,str
copy_and_fudge_mtime,"Callable[[str, str],None]"
source_path,str
target_path,str
test_basic,"Callable[[_],None]"
test_positional_only,"Callable[[_],None]"
test_optional,"Callable[[_],None]"
test_callee_star,"Callable[[_],None]"
test_caller_star,"Callable[[_],None]"
test_too_many_caller_args,"Callable[[_],None]"
test_tuple_star,"Callable[[_],None]"
tuple,"Callable[[_],TupleType]"
args,Type
test_named_args,"Callable[[_],None]"
test_some_named_args,"Callable[[_],None]"
test_missing_named_arg,"Callable[[_],None]"
test_duplicate_named_arg,"Callable[[_],None]"
test_varargs_and_bare_asterisk,"Callable[[_],None]"
test_keyword_varargs,"Callable[[_],None]"
test_both_kinds_of_varargs,"Callable[[_],None]"
test_special_cases,"Callable[[_],None]"
assert_map,"Callable[[_, List[Union[int, str]], List[Union[int, Tuple[int, str]]], List[List[int]]],None]"
caller_kinds_,"List[Union[int, str]]"
callee_kinds_,"List[Union[int, Tuple[int, str]]]"
expected,List[List[int]]
assert_vararg_map,"Callable[[_, List[int], List[int], List[List[int]], Type],None]"
expected,List[List[int]]
vararg_type,Type
expand_caller_kinds,"Callable[[List[Union[int, str]]],Tuple[List[int], List[Union[str, None]]]]"
kinds_or_names,"List[Union[int, str]]"
names,"List[Union[str, None]]"
expand_callee_kinds,"Callable[[List[Union[int, Tuple[int, str]]]],Tuple[List[int], List[Union[str, None]]]]"
kinds_and_names,"List[Union[int, Tuple[int, str]]]"
names,"List[Union[str, None]]"
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
run_case_once,"Callable[[_, DataDrivenTestCase, List[FileOperation], int],None]"
testcase,DataDrivenTestCase
incremental_step,int
verify_cache,"Callable[[_, List[Tuple[str, str, str]], List[str], build.BuildManager, Graph],None]"
module_data,"List[Tuple[str, str, str]]"
graph,Graph
parse_module,"Callable[[_, str, int],List[Tuple[str, str, str]]]"
program_text,str
incremental_step,int
run_case,"Callable[[_, DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
test_transform,"Callable[[DataDrivenTestCase],None]"
testcase,DataDrivenTestCase
module_prefix,"Callable[[Iterable[str], str],Union[str, None]]"
target,str
split_target,"Callable[[Iterable[str], str],Union[Tuple[str, str], None]]"
target,str
MAX_ITER,Final
__init__,"Callable[[_, BuildResult],None]"
result,BuildResult
self.blocking_error,"Union[Tuple[str, str], None]"
self.stale,"List[Tuple[str, str]]"
self.changed_modules,"List[Tuple[str, str]]"
update,"Callable[[_, List[Tuple[str, str]], List[Tuple[str, str]]],List[str]]"
changed_modules,"List[Tuple[str, str]]"
removed_modules,"List[Tuple[str, str]]"
update_one,"Callable[[_, List[Tuple[str, str]], Set[str], Set[str]],Tuple[List[Tuple[str, str]], Tuple[str, str], Union[List[str], None]]]"
changed_modules,"List[Tuple[str, str]]"
update_module,"Callable[[_, str, str, bool],Tuple[List[Tuple[str, str]], Tuple[str, str], Union[List[str], None]]]"
module,str
path,str
force_removed,bool
old_snapshots,"Dict[str, Dict[str, SnapshotItem]]"
find_unloaded_deps,"Callable[[BuildManager, Dict[str, State], Sequence[str]],List[str]]"
manager,BuildManager
ensure_trees_loaded,"Callable[[BuildManager, Dict[str, State], Sequence[str]],None]"
manager,BuildManager
get_all_dependencies,"Callable[[BuildManager, Dict[str, State]],Dict[str, Set[str]]]"
manager,BuildManager
deps,"Dict[str, Set[str]]"
update_module_isolated,"Callable[[str, str, BuildManager, Dict[str, str], Graph, bool],UpdateResult]"
module,str
path,str
manager,BuildManager
graph,Graph
force_removed,bool
restore,"Callable[[List[str]],None]"
new_modules_dict,"Dict[str, Union[MypyFile, None]]"
find_relative_leaf_module,"Callable[[List[Tuple[str, str]], Graph],Tuple[str, str]]"
modules,"List[Tuple[str, str]]"
graph,Graph
delete_module,"Callable[[str, str, Graph, BuildManager],None]"
module_id,str
path,str
graph,Graph
manager,BuildManager
dedupe_modules,"Callable[[List[Tuple[str, str]]],List[Tuple[str, str]]]"
modules,"List[Tuple[str, str]]"
get_module_to_path_map,"Callable[[Graph],Dict[str, str]]"
graph,Graph
get_sources,"Callable[[FileSystemCache, Dict[str, str], List[Tuple[str, str]]],List[BuildSource]]"
fscache,FileSystemCache
changed_modules,"List[Tuple[str, str]]"
collect_dependencies,"Callable[[Iterable[str], Dict[str, Set[str]], Dict[str, State]],None]"
deps,"Dict[str, Set[str]]"
calculate_active_triggers,"Callable[[BuildManager, Dict[str, Dict[str, SnapshotItem]], Dict[str, Union[MypyFile, None]]],Set[str]]"
manager,BuildManager
old_snapshots,"Dict[str, Dict[str, SnapshotItem]]"
new_modules,"Dict[str, Union[MypyFile, None]]"
replace_modules_with_new_variants,"Callable[[BuildManager, Dict[str, State], Dict[str, Union[MypyFile, None]], Dict[str, Union[MypyFile, None]]],None]"
manager,BuildManager
old_modules,"Dict[str, Union[MypyFile, None]]"
new_modules,"Dict[str, Union[MypyFile, None]]"
propagate_changes_using_dependencies,"Callable[[BuildManager, Dict[str, State], Dict[str, Set[str]], Set[str], Set[str], Set[str]],List[Tuple[str, str]]]"
manager,BuildManager
deps,"Dict[str, Set[str]]"
remaining_modules,"List[Tuple[str, str]]"
find_targets_recursive,"Callable[[BuildManager, Graph, Set[str], Dict[str, Set[str]], Set[str]],Tuple[Dict[str, Set[FineGrainedDeferredNode]], Set[str], Set[TypeInfo]]]"
manager,BuildManager
graph,Graph
deps,"Dict[str, Set[str]]"
result,"Dict[str, Set[FineGrainedDeferredNode]]"
reprocess_nodes,"Callable[[BuildManager, Dict[str, State], str, Set[FineGrainedDeferredNode], Dict[str, Set[str]]],Set[str]]"
manager,BuildManager
module_id,str
deps,"Dict[str, Set[str]]"
key,"Callable[[FineGrainedDeferredNode],int]"
node,FineGrainedDeferredNode
patches,"List[Tuple[int, Callable[[],None]]]"
find_symbol_tables_recursive,"Callable[[str, SymbolTable],Dict[str, SymbolTable]]"
prefix,str
symbols,SymbolTable
update_deps,"Callable[[str, List[FineGrainedDeferredNode], Dict[str, State], Dict[str, Set[str]], Options],None]"
module_id,str
deps,"Dict[str, Set[str]]"
options,Options
lookup_target,"Callable[[BuildManager, str],Tuple[List[FineGrainedDeferredNode], Union[TypeInfo, None]]]"
manager,BuildManager
target,str
not_found,"Callable[[],None]"
is_verbose,"Callable[[BuildManager],bool]"
manager,BuildManager
target_from_node,"Callable[[str, Union[FuncDef, MypyFile, OverloadedFuncDef]],Union[str, None]]"
module,str
get_subexpressions,"Callable[[Node],List[Expression]]"
node,Node
__init__,"Callable[[_],None]"
visit_int_expr,"Callable[[_, Expression],None]"
o,Expression
visit_name_expr,"Callable[[_, Expression],None]"
o,Expression
visit_float_expr,"Callable[[_, Expression],None]"
o,Expression
visit_str_expr,"Callable[[_, Expression],None]"
o,Expression
visit_bytes_expr,"Callable[[_, Expression],None]"
o,Expression
visit_unicode_expr,"Callable[[_, Expression],None]"
o,Expression
visit_complex_expr,"Callable[[_, Expression],None]"
o,Expression
visit_ellipsis,"Callable[[_, Expression],None]"
o,Expression
visit_super_expr,"Callable[[_, Expression],None]"
o,Expression
visit_type_var_expr,"Callable[[_, Expression],None]"
o,Expression
visit_type_alias_expr,"Callable[[_, Expression],None]"
o,Expression
visit_namedtuple_expr,"Callable[[_, Expression],None]"
o,Expression
visit_typeddict_expr,"Callable[[_, Expression],None]"
o,Expression
visit__promote_expr,"Callable[[_, Expression],None]"
o,Expression
visit_newtype_expr,"Callable[[_, Expression],None]"
o,Expression
visit_member_expr,"Callable[[_, MemberExpr],None]"
e,MemberExpr
visit_yield_from_expr,"Callable[[_, YieldFromExpr],None]"
e,YieldFromExpr
visit_yield_expr,"Callable[[_, YieldExpr],None]"
e,YieldExpr
visit_call_expr,"Callable[[_, CallExpr],None]"
e,CallExpr
visit_op_expr,"Callable[[_, OpExpr],None]"
e,OpExpr
visit_comparison_expr,"Callable[[_, ComparisonExpr],None]"
e,ComparisonExpr
visit_slice_expr,"Callable[[_, SliceExpr],None]"
e,SliceExpr
visit_cast_expr,"Callable[[_, CastExpr],None]"
e,CastExpr
visit_reveal_expr,"Callable[[_, RevealExpr],None]"
e,RevealExpr
visit_unary_expr,"Callable[[_, UnaryExpr],None]"
e,UnaryExpr
visit_list_expr,"Callable[[_, ListExpr],None]"
e,ListExpr
visit_tuple_expr,"Callable[[_, TupleExpr],None]"
e,TupleExpr
visit_dict_expr,"Callable[[_, DictExpr],None]"
e,DictExpr
visit_set_expr,"Callable[[_, SetExpr],None]"
e,SetExpr
visit_index_expr,"Callable[[_, IndexExpr],None]"
e,IndexExpr
visit_generator_expr,"Callable[[_, GeneratorExpr],None]"
e,GeneratorExpr
visit_dictionary_comprehension,"Callable[[_, DictionaryComprehension],None]"
e,DictionaryComprehension
visit_list_comprehension,"Callable[[_, ListComprehension],None]"
e,ListComprehension
visit_set_comprehension,"Callable[[_, SetComprehension],None]"
e,SetComprehension
visit_conditional_expr,"Callable[[_, ConditionalExpr],None]"
e,ConditionalExpr
visit_type_application,"Callable[[_, TypeApplication],None]"
e,TypeApplication
visit_lambda_expr,"Callable[[_, LambdaExpr],None]"
e,LambdaExpr
visit_star_expr,"Callable[[_, StarExpr],None]"
e,StarExpr
visit_backquote_expr,"Callable[[_, BackquoteExpr],None]"
e,BackquoteExpr
visit_await_expr,"Callable[[_, AwaitExpr],None]"
e,AwaitExpr
add,"Callable[[_, Expression],None]"
e,Expression
merge_asts,"Callable[[MypyFile, SymbolTable, MypyFile, SymbolTable],None]"
old,MypyFile
old_symbols,SymbolTable
new,MypyFile
new_symbols,SymbolTable
replacement_map_from_symbol_table,"Callable[[SymbolTable, SymbolTable, str],Dict[SymbolNode, SymbolNode]]"
old,SymbolTable
new,SymbolTable
prefix,str
replace_nodes_in_ast,"Callable[[SymbolNode, Dict[SymbolNode, SymbolNode]],SymbolNode]"
node,SymbolNode
__init__,"Callable[[_, Dict[SymbolNode, SymbolNode]],None]"
visit_mypy_file,"Callable[[_, MypyFile],None]"
node,MypyFile
visit_block,"Callable[[_, Block],None]"
node,Block
visit_func_def,"Callable[[_, FuncDef],None]"
node,FuncDef
visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
node,OverloadedFuncDef
visit_class_def,"Callable[[_, ClassDef],None]"
node,ClassDef
process_base_func,"Callable[[_, FuncBase],None]"
node,FuncBase
process_type_var_def,"Callable[[_, TypeVarDef],None]"
tv,TypeVarDef
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
node,AssignmentStmt
visit_name_expr,"Callable[[_, NameExpr],None]"
node,NameExpr
visit_member_expr,"Callable[[_, MemberExpr],None]"
node,MemberExpr
visit_ref_expr,"Callable[[_, RefExpr],None]"
node,RefExpr
visit_namedtuple_expr,"Callable[[_, NamedTupleExpr],None]"
node,NamedTupleExpr
visit_cast_expr,"Callable[[_, CastExpr],None]"
node,CastExpr
visit_super_expr,"Callable[[_, SuperExpr],None]"
node,SuperExpr
visit_call_expr,"Callable[[_, CallExpr],None]"
node,CallExpr
visit_newtype_expr,"Callable[[_, NewTypeExpr],None]"
node,NewTypeExpr
visit_lambda_expr,"Callable[[_, LambdaExpr],None]"
node,LambdaExpr
visit_typeddict_expr,"Callable[[_, TypedDictExpr],None]"
node,TypedDictExpr
visit_enum_call_expr,"Callable[[_, EnumCallExpr],None]"
node,EnumCallExpr
visit_type_alias_expr,"Callable[[_, TypeAliasExpr],None]"
node,TypeAliasExpr
visit_var,"Callable[[_, Var],None]"
node,Var
fixup,"Callable[[_, SN],SN]"
node,SN
fixup_and_reset_typeinfo,"Callable[[_, TypeInfo],TypeInfo]"
node,TypeInfo
fixup_type,"Callable[[_, Union[Type, None]],None]"
process_type_info,"Callable[[_, Union[TypeInfo, None]],None]"
process_synthetic_type_info,"Callable[[_, TypeInfo],None]"
info,TypeInfo
__init__,"Callable[[_, Dict[SymbolNode, SymbolNode]],None]"
visit_instance,"Callable[[_, Instance],None]"
typ,Instance
visit_any,"Callable[[_, AnyType],None]"
typ,AnyType
visit_none_type,"Callable[[_, NoneTyp],None]"
typ,NoneTyp
visit_callable_type,"Callable[[_, CallableType],None]"
typ,CallableType
visit_overloaded,"Callable[[_, Overloaded],None]"
t,Overloaded
visit_deleted_type,"Callable[[_, DeletedType],None]"
typ,DeletedType
visit_partial_type,"Callable[[_, PartialType],None]"
typ,PartialType
visit_tuple_type,"Callable[[_, TupleType],None]"
typ,TupleType
visit_type_type,"Callable[[_, TypeType],None]"
typ,TypeType
visit_type_var,"Callable[[_, TypeVarType],None]"
typ,TypeVarType
visit_typeddict_type,"Callable[[_, TypedDictType],None]"
typ,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],None]"
typ,LiteralType
visit_unbound_type,"Callable[[_, UnboundType],None]"
typ,UnboundType
visit_type_list,"Callable[[_, TypeList],None]"
typ,TypeList
visit_callable_argument,"Callable[[_, CallableArgument],None]"
typ,CallableArgument
visit_ellipsis_type,"Callable[[_, EllipsisType],None]"
typ,EllipsisType
visit_star_type,"Callable[[_, StarType],None]"
typ,StarType
visit_uninhabited_type,"Callable[[_, UninhabitedType],None]"
typ,UninhabitedType
visit_union_type,"Callable[[_, UnionType],None]"
typ,UnionType
fixup,"Callable[[_, SN],SN]"
node,SN
replace_nodes_in_symbol_table,"Callable[[SymbolTable, Dict[SymbolNode, SymbolNode]],None]"
symbols,SymbolTable
fixup_var,"Callable[[Var, Dict[SymbolNode, SymbolNode]],None]"
node,Var
DUMP_MISMATCH_NODES,Final
check_consistency,"Callable[[object],None]"
o,object
path_to_str,"Callable[[List[Tuple[object, object]]],str]"
path,"List[Tuple[object, object]]"
method_descriptor_type,Final
method_wrapper_type,Final
wrapper_descriptor_type,Final
FUNCTION_TYPES,Final
ATTR_BLACKLIST,Final
ATOMIC_TYPE_BLACKLIST,Final
COLLECTION_TYPE_BLACKLIST,Final
TYPE_BLACKLIST,Final
isproperty,"Callable[[object, str],bool]"
o,object
attr,str
get_edge_candidates,"Callable[[object],Iterator[Tuple[object, object]]]"
o,object
get_edges,"Callable[[object],Iterator[Tuple[object, object]]]"
o,object
get_reachable_graph,"Callable[[object],Tuple[Dict[int, object], Dict[int, Tuple[int, object]]]]"
root,object
find_all_reachable,"Callable[[object],List[object]]"
root,object
aggregate_by_type,"Callable[[List[object]],Dict[type, List[object]]]"
m,"Dict[type, List[object]]"
get_path,"Callable[[object, Dict[int, object], Dict[int, Tuple[int, object]]],List[Tuple[object, object]]]"
o,object
parents,"Dict[int, Tuple[int, object]]"
strip_target,"Callable[[Union[MypyFile, FuncDef, OverloadedFuncDef]],None]"
__init__,"Callable[[_],None]"
strip_file_top_level,"Callable[[_, MypyFile],None]"
file_node,MypyFile
visit_block,"Callable[[_, Block],None]"
b,Block
visit_class_def,"Callable[[_, ClassDef],None]"
node,ClassDef
strip_type_info,"Callable[[_, TypeInfo],List[SymbolNode]]"
info,TypeInfo
visit_func_def,"Callable[[_, FuncDef],None]"
node,FuncDef
visit_decorator,"Callable[[_, Decorator],None]"
node,Decorator
visit_overloaded_func_def,"Callable[[_, OverloadedFuncDef],None]"
node,OverloadedFuncDef
enter_class,"Callable[[_, TypeInfo],Iterator[None]]"
info,TypeInfo
enter_method,"Callable[[_, TypeInfo],Iterator[None]]"
info,TypeInfo
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
node,AssignmentStmt
process_lvalue_in_method,"Callable[[_, Node],None]"
lvalue,Node
visit_import_from,"Callable[[_, ImportFrom],None]"
node,ImportFrom
visit_import,"Callable[[_, Import],None]"
node,Import
visit_import_all,"Callable[[_, ImportAll],None]"
node,ImportAll
visit_for_stmt,"Callable[[_, ForStmt],None]"
node,ForStmt
visit_name_expr,"Callable[[_, NameExpr],None]"
node,NameExpr
visit_member_expr,"Callable[[_, MemberExpr],None]"
node,MemberExpr
_reset_var_final_flags,"Callable[[_, Var],None]"
v,Var
visit_index_expr,"Callable[[_, IndexExpr],None]"
node,IndexExpr
strip_class_attr,"Callable[[_, str],None]"
name,str
is_duplicate_attribute_def,"Callable[[_, MemberExpr],bool]"
node,MemberExpr
strip_ref_expr,"Callable[[_, RefExpr],None]"
node,RefExpr
visit_call_expr,"Callable[[_, CallExpr],None]"
node,CallExpr
visit_super_expr,"Callable[[_, SuperExpr],None]"
node,SuperExpr
is_self_member_ref,"Callable[[MemberExpr],bool]"
memberexpr,MemberExpr
compare_symbol_table_snapshots,"Callable[[str, Dict[str, SnapshotItem], Dict[str, SnapshotItem]],Set[str]]"
name_prefix,str
snapshot_symbol_table,"Callable[[str, SymbolTable],Dict[str, SnapshotItem]]"
name_prefix,str
table,SymbolTable
snapshot_type,"Callable[[Type],SnapshotItem]"
typ,Type
snapshot_types,"Callable[[Sequence[Type]],SnapshotItem]"
snapshot_simple_type,"Callable[[Type],SnapshotItem]"
typ,Type
visit_unbound_type,"Callable[[_, UnboundType],SnapshotItem]"
typ,UnboundType
visit_any,"Callable[[_, AnyType],SnapshotItem]"
typ,AnyType
visit_none_type,"Callable[[_, NoneTyp],SnapshotItem]"
typ,NoneTyp
visit_uninhabited_type,"Callable[[_, UninhabitedType],SnapshotItem]"
typ,UninhabitedType
visit_erased_type,"Callable[[_, ErasedType],SnapshotItem]"
typ,ErasedType
visit_deleted_type,"Callable[[_, DeletedType],SnapshotItem]"
typ,DeletedType
visit_instance,"Callable[[_, Instance],SnapshotItem]"
typ,Instance
visit_type_var,"Callable[[_, TypeVarType],SnapshotItem]"
typ,TypeVarType
visit_callable_type,"Callable[[_, CallableType],SnapshotItem]"
typ,CallableType
visit_tuple_type,"Callable[[_, TupleType],SnapshotItem]"
typ,TupleType
visit_typeddict_type,"Callable[[_, TypedDictType],SnapshotItem]"
typ,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],SnapshotItem]"
typ,LiteralType
visit_union_type,"Callable[[_, UnionType],SnapshotItem]"
typ,UnionType
visit_overloaded,"Callable[[_, Overloaded],SnapshotItem]"
typ,Overloaded
visit_partial_type,"Callable[[_, PartialType],SnapshotItem]"
typ,PartialType
visit_type_type,"Callable[[_, TypeType],SnapshotItem]"
typ,TypeType
get_dependencies,"Callable[[MypyFile, Dict[Expression, Type], Tuple[int, int], Options],Dict[str, Set[str]]]"
target,MypyFile
options,Options
get_dependencies_of_target,"Callable[[str, MypyFile, Node, Dict[Expression, Type], Tuple[int, int]],Dict[str, Set[str]]]"
module_id,str
module_tree,MypyFile
target,Node
__init__,"Callable[[_, Dict[Expression, Type], Tuple[int, int], DefaultDict[str, Set[str]], Union[Options, None]],None]"
alias_deps,"DefaultDict[str, Set[str]]"
self.map,"Dict[str, Set[str]]"
visit_mypy_file,"Callable[[_, MypyFile],None]"
o,MypyFile
visit_func_def,"Callable[[_, FuncDef],None]"
o,FuncDef
signature,Type
visit_decorator,"Callable[[_, Decorator],None]"
o,Decorator
visit_class_def,"Callable[[_, ClassDef],None]"
o,ClassDef
visit_newtype_expr,"Callable[[_, NewTypeExpr],None]"
o,NewTypeExpr
process_type_info,"Callable[[_, TypeInfo],None]"
info,TypeInfo
visit_import,"Callable[[_, Import],None]"
o,Import
visit_import_from,"Callable[[_, ImportFrom],None]"
o,ImportFrom
visit_import_all,"Callable[[_, ImportAll],None]"
o,ImportAll
visit_block,"Callable[[_, Block],None]"
o,Block
visit_assignment_stmt,"Callable[[_, AssignmentStmt],None]"
o,AssignmentStmt
process_lvalue,"Callable[[_, Expression],None]"
lvalue,Expression
is_self_member_ref,"Callable[[_, MemberExpr],bool]"
memberexpr,MemberExpr
get_non_partial_lvalue_type,"Callable[[_, RefExpr],Type]"
lvalue,RefExpr
visit_operator_assignment_stmt,"Callable[[_, OperatorAssignmentStmt],None]"
o,OperatorAssignmentStmt
visit_for_stmt,"Callable[[_, ForStmt],None]"
o,ForStmt
visit_with_stmt,"Callable[[_, WithStmt],None]"
o,WithStmt
visit_print_stmt,"Callable[[_, PrintStmt],None]"
o,PrintStmt
visit_del_stmt,"Callable[[_, DelStmt],None]"
o,DelStmt
process_global_ref_expr,"Callable[[_, RefExpr],None]"
o,RefExpr
visit_name_expr,"Callable[[_, NameExpr],None]"
o,NameExpr
visit_member_expr,"Callable[[_, MemberExpr],None]"
e,MemberExpr
get_unimported_fullname,"Callable[[_, MemberExpr, AnyType],Union[str, None]]"
e,MemberExpr
typ,AnyType
visit_super_expr,"Callable[[_, SuperExpr],None]"
e,SuperExpr
visit_call_expr,"Callable[[_, CallExpr],None]"
e,CallExpr
process_isinstance_call,"Callable[[_, CallExpr],None]"
e,CallExpr
visit_cast_expr,"Callable[[_, CastExpr],None]"
e,CastExpr
visit_type_application,"Callable[[_, TypeApplication],None]"
e,TypeApplication
visit_index_expr,"Callable[[_, IndexExpr],None]"
e,IndexExpr
visit_unary_expr,"Callable[[_, UnaryExpr],None]"
e,UnaryExpr
visit_op_expr,"Callable[[_, OpExpr],None]"
e,OpExpr
visit_comparison_expr,"Callable[[_, ComparisonExpr],None]"
e,ComparisonExpr
process_binary_op,"Callable[[_, str, Expression, Expression],None]"
op,str
left,Expression
right,Expression
add_operator_method_dependency,"Callable[[_, Expression, str],None]"
e,Expression
method,str
add_operator_method_dependency_for_type,"Callable[[_, Type, str],None]"
typ,Type
method,str
visit_generator_expr,"Callable[[_, GeneratorExpr],None]"
e,GeneratorExpr
visit_dictionary_comprehension,"Callable[[_, DictionaryComprehension],None]"
e,DictionaryComprehension
visit_star_expr,"Callable[[_, StarExpr],None]"
e,StarExpr
visit_yield_from_expr,"Callable[[_, YieldFromExpr],None]"
e,YieldFromExpr
visit_await_expr,"Callable[[_, AwaitExpr],None]"
e,AwaitExpr
add_type_alias_deps,"Callable[[_, str],None]"
target,str
add_dependency,"Callable[[_, str, Union[str, None]],None]"
trigger,str
add_type_dependencies,"Callable[[_, Type, Union[str, None]],None]"
typ,Type
add_attribute_dependency,"Callable[[_, Type, str],None]"
typ,Type
name,str
attribute_triggers,"Callable[[_, Type, str],List[str]]"
typ,Type
name,str
add_attribute_dependency_for_expr,"Callable[[_, Expression, str],None]"
e,Expression
name,str
add_iter_dependency,"Callable[[_, Expression],None]"
node,Expression
use_logical_deps,"Callable[[_],bool]"
get_type_triggers,"Callable[[_, Type],List[str]]"
typ,Type
get_type_triggers,"Callable[[Type, bool],List[str]]"
typ,Type
use_logical_deps,bool
__init__,"Callable[[_, bool],None]"
use_logical_deps,bool
get_type_triggers,"Callable[[_, Type],List[str]]"
typ,Type
visit_instance,"Callable[[_, Instance],List[str]]"
typ,Instance
visit_any,"Callable[[_, AnyType],List[str]]"
typ,AnyType
visit_none_type,"Callable[[_, NoneTyp],List[str]]"
typ,NoneTyp
visit_callable_type,"Callable[[_, CallableType],List[str]]"
typ,CallableType
visit_overloaded,"Callable[[_, Overloaded],List[str]]"
typ,Overloaded
visit_deleted_type,"Callable[[_, DeletedType],List[str]]"
typ,DeletedType
visit_partial_type,"Callable[[_, PartialType],List[str]]"
typ,PartialType
visit_tuple_type,"Callable[[_, TupleType],List[str]]"
typ,TupleType
visit_type_type,"Callable[[_, TypeType],List[str]]"
typ,TypeType
visit_forwardref_type,"Callable[[_, ForwardRef],List[str]]"
typ,ForwardRef
visit_type_var,"Callable[[_, TypeVarType],List[str]]"
typ,TypeVarType
visit_typeddict_type,"Callable[[_, TypedDictType],List[str]]"
typ,TypedDictType
visit_literal_type,"Callable[[_, LiteralType],List[str]]"
typ,LiteralType
visit_unbound_type,"Callable[[_, UnboundType],List[str]]"
typ,UnboundType
visit_uninhabited_type,"Callable[[_, UninhabitedType],List[str]]"
typ,UninhabitedType
visit_union_type,"Callable[[_, UnionType],List[str]]"
typ,UnionType
non_trivial_bases,"Callable[[TypeInfo],List[TypeInfo]]"
info,TypeInfo
has_user_bases,"Callable[[TypeInfo],bool]"
info,TypeInfo
dump_all_dependencies,"Callable[[Dict[str, MypyFile], Dict[Expression, Type], Tuple[int, int], Options],None]"
options,Options
all_deps,"Dict[str, Set[str]]"
WILDCARD_TAG,Final
make_trigger,"Callable[[str],str]"
name,str
make_wildcard_trigger,"Callable[[str],str]"
module,str
__init__,"Callable[[_],None]"
deny_assignment_name,str
principal_id,str
gdpr_export_principal_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
deny_assignment_name,str
description,str
scope,str
do_not_apply_to_child_scopes,bool
is_system_protected,bool
__init__,"Callable[[_],None]"
id,str
name,str
type,str
email_address,str
role,str
__init__,"Callable[[_],None]"
name,str
display_name,str
description,str
origin,str
is_data_action,bool
__init__,"Callable[[_],None]"
id,str
name,str
type,str
display_name,str
__init__,"Callable[[_],None]"
role_definition_id,str
principal_id,str
can_delegate,bool
__init__,"Callable[[_],None]"
principal_id,str
can_delegate,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
scope,str
role_definition_id,str
principal_id,str
can_delegate,bool
__init__,"Callable[[_],None]"
role_name,str
type,str
__init__,"Callable[[_],None]"
role_name,str
description,str
role_type,str
__init__,"Callable[[_],None]"
name,str
display_name,str
__init__,"Callable[[_],None]"
role_definition_id,str
principal_id,str
can_delegate,bool
__init__,"Callable[[_],None]"
principal_id,str
can_delegate,bool
__init__,"Callable[[_],None]"
scope,str
role_definition_id,str
principal_id,str
can_delegate,bool
__init__,"Callable[[_],None]"
role_name,str
description,str
type,str
__init__,"Callable[[_],None]"
name,str
display_name,str
description,str
origin,str
__init__,"Callable[[_],None]"
id,str
name,str
type,str
display_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
principal_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
role_definition_id,str
principal_id,str
__init__,"Callable[[_],None]"
role_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
__init__,"Callable[[_],None]"
scope,str
role_definition_id,str
principal_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
context_path,str
context_access_token,str
is_push_enabled,bool
no_cache,bool
docker_file_path,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
task_name,str
is_archive_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
context_path,str
context_access_token,str
encoded_task_content,str
encoded_values_content,str
__init__,"Callable[[_],None]"
service_uri,str
scope,str
__init__,"Callable[[_],None]"
location,str
service_uri,str
scope,str
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
internal_metric_name,str
__init__,"Callable[[_],None]"
method,str
request_uri,str
version,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
run_id,str
task,str
is_archive_enabled,bool
__init__,"Callable[[_],None]"
repository_url,str
branch,str
__init__,"Callable[[_],None]"
docker_file_path,str
is_archive_enabled,bool
is_push_enabled,bool
no_cache,bool
timeout,int
source_location,str
__init__,"Callable[[_],None]"
registry,str
repository,str
tag,str
digest,str
__init__,"Callable[[_],None]"
timeout,int
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
is_secret,bool
__init__,"Callable[[_],None]"
id,str
event_type,str
commit_id,str
pull_request_id,str
repository_url,str
branch_name,str
provider_type,str
__init__,"Callable[[_],None]"
is_archive_enabled,bool
__init__,"Callable[[_],None]"
registry,str
repository,str
tag,str
digest,str
__init__,"Callable[[_],None]"
location,str
timeout,int
__init__,"Callable[[_],None]"
repository_url,str
branch,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
service_uri,str
__init__,"Callable[[_],None]"
context_path,str
context_access_token,str
__init__,"Callable[[_],None]"
context_path,str
context_access_token,str
task_file_path,str
values_file_path,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
origin,str
name,str
__init__,"Callable[[_],None]"
addr,str
instance_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
encoded_task_content,str
context_path,str
context_access_token,str
encoded_values_content,str
__init__,"Callable[[_],None]"
docker_file_path,str
context_path,str
context_access_token,str
is_push_enabled,bool
no_cache,bool
__init__,"Callable[[_],None]"
is_archive_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
source_image,str
resource_id,str
registry_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
is_secret,bool
__init__,"Callable[[_],None]"
media_type,str
size,int
digest,str
length,int
repository,str
url,str
tag,str
__init__,"Callable[[_],None]"
log_link,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
scope,str
__init__,"Callable[[_],None]"
name_available,bool
reason,str
message,str
__init__,"Callable[[_],None]"
token,str
refresh_token,str
scope,str
expires_in,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
limit,int
current_value,int
__init__,"Callable[[_],None]"
context_path,str
context_access_token,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
run_id,str
output_image_manifests,str
is_archive_enabled,bool
task_name,str
__init__,"Callable[[_],None]"
task_file_path,str
context_path,str
context_access_token,str
values_file_path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
username,str
__init__,"Callable[[_],None]"
admin_user_enabled,bool
__init__,"Callable[[_],None]"
upload_url,str
relative_path,str
__init__,"Callable[[_],None]"
task_file_path,str
is_archive_enabled,bool
values_file_path,str
timeout,int
source_location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
admin_user_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
password,str
username,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
encoded_task_content,str
is_archive_enabled,bool
encoded_values_content,str
timeout,int
source_location,str
__init__,"Callable[[_],None]"
token,str
refresh_token,str
scope,str
expires_in,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
addr,str
host,str
method,str
useragent,str
__init__,"Callable[[_],None]"
id,str
action,str
__init__,"Callable[[_],None]"
cpu,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
content,str
reason_phrase,str
status_code,str
version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
branch,str
is_push_enabled,bool
no_cache,bool
docker_file_path,str
context_path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
service_uri,str
scope,str
__init__,"Callable[[_],None]"
location,str
service_uri,str
scope,str
__init__,"Callable[[_],None]"
location,str
alias,str
timeout,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
internal_metric_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_archive_enabled,bool
__init__,"Callable[[_],None]"
method,str
request_uri,str
version,str
__init__,"Callable[[_],None]"
registry,str
repository,str
tag,str
digest,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
build_id,str
build_task,str
is_archive_enabled,bool
__init__,"Callable[[_],None]"
name,str
value,str
is_secret,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
registry,str
repository,str
tag,str
digest,str
__init__,"Callable[[_],None]"
alias,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
service_uri,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
origin,str
name,str
__init__,"Callable[[_],None]"
addr,str
instance_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
branch,str
is_push_enabled,bool
no_cache,bool
docker_file_path,str
context_path,str
__init__,"Callable[[_],None]"
source_image,str
resource_id,str
registry_uri,str
__init__,"Callable[[_],None]"
is_commit_trigger_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
media_type,str
size,int
digest,str
length,int
repository,str
url,str
tag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
scope,str
__init__,"Callable[[_],None]"
name_available,bool
reason,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
repository_url,str
is_commit_trigger_enabled,bool
__init__,"Callable[[_],None]"
token,str
refresh_token,str
scope,str
expires_in,int
__init__,"Callable[[_],None]"
name,str
limit,int
current_value,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
source_location,str
docker_file_path,str
is_push_enabled,bool
no_cache,bool
timeout,int
__init__,"Callable[[_],None]"
username,str
__init__,"Callable[[_],None]"
admin_user_enabled,bool
__init__,"Callable[[_],None]"
build_task_name,str
__init__,"Callable[[_],None]"
upload_url,str
relative_path,str
__init__,"Callable[[_],None]"
id,str
commit_id,str
repository_url,str
branch_name,str
provider_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
admin_user_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
alias,str
timeout,int
__init__,"Callable[[_],None]"
password,str
username,str
__init__,"Callable[[_],None]"
build_id,str
output_image_manifests,str
is_archive_enabled,bool
build_task_name,str
__init__,"Callable[[_],None]"
log_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
addr,str
host,str
method,str
useragent,str
__init__,"Callable[[_],None]"
id,str
action,str
__init__,"Callable[[_],None]"
cpu,int
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
content,str
reason_phrase,str
status_code,str
version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
service_uri,str
scope,str
__init__,"Callable[[_],None]"
location,str
service_uri,str
scope,str
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
internal_metric_name,str
__init__,"Callable[[_],None]"
method,str
request_uri,str
version,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
service_uri,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
origin,str
name,str
__init__,"Callable[[_],None]"
addr,str
instance_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
source_image,str
resource_id,str
registry_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
media_type,str
size,int
digest,str
length,int
repository,str
url,str
tag,str
__init__,"Callable[[_],None]"
location,str
scope,str
__init__,"Callable[[_],None]"
name_available,bool
reason,str
message,str
__init__,"Callable[[_],None]"
name,str
limit,int
current_value,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
username,str
__init__,"Callable[[_],None]"
admin_user_enabled,bool
__init__,"Callable[[_],None]"
location,str
admin_user_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
password,str
username,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
addr,str
host,str
method,str
useragent,str
__init__,"Callable[[_],None]"
id,str
action,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
content,str
reason_phrase,str
status_code,str
version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
location,str
admin_user_enabled,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name_available,bool
reason,str
message,str
__init__,"Callable[[_],None]"
name,str
access_key,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
username,str
__init__,"Callable[[_],None]"
admin_user_enabled,bool
__init__,"Callable[[_],None]"
location,str
admin_user_enabled,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
certificate,bytearray
friendly_name,str
issuer,str
resource_id,int
subject,str
thumbprint,str
__init__,"Callable[[_],None]"
failed_jobs,int
suspended_jobs,int
in_progress_jobs,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
quota_period,str
current_value,int
limit,int
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
e_tag,str
location,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
e_tag,str
location,str
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate,bytearray
__init__,"Callable[[_],None]"
e_tag,str
integrity_key,str
encryption_key,str
encryption_key_thumbprint,str
algorithm,str
__init__,"Callable[[_],None]"
global_acs_namespace,str
global_acs_host_name,str
global_acs_rp_realm,str
certificate,bytearray
friendly_name,str
issuer,str
resource_id,int
subject,str
thumbprint,str
__init__,"Callable[[_],None]"
aad_authority,str
aad_tenant_id,str
service_principal_client_id,str
service_principal_object_id,str
azure_management_endpoint_audience,str
certificate,bytearray
friendly_name,str
issuer,str
resource_id,int
subject,str
thumbprint,str
__init__,"Callable[[_],None]"
e_tag,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
un_healthy_vm_count,int
un_healthy_provider_count,int
events_count,int
deprecated_provider_count,int
supported_provider_count,int
unsupported_provider_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
protected_item_count,int
recovery_plan_count,int
registered_servers_count,int
recovery_services_provider_auth_type,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
odatacontext,str
odatacount,int
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
odataid,str
odatacontext,str
resource_id,str
policy_assignment_id,str
policy_definition_id,str
effective_parameters,str
is_compliant,bool
subscription_id,str
resource_type,str
resource_location,str
resource_group,str
resource_tags,str
policy_assignment_name,str
policy_assignment_owner,str
policy_assignment_parameters,str
policy_assignment_scope,str
policy_definition_name,str
policy_definition_action,str
policy_definition_category,str
policy_set_definition_id,str
policy_set_definition_name,str
policy_set_definition_owner,str
policy_set_definition_category,str
policy_set_definition_parameters,str
management_group_ids,str
policy_definition_reference_id,str
__init__,"Callable[[_],None]"
policy_assignment_id,str
policy_set_definition_id,str
__init__,"Callable[[_],None]"
query_results_uri,str
non_compliant_resources,int
non_compliant_policies,int
__init__,"Callable[[_],None]"
odataid,str
odatacontext,str
resource_id,str
policy_assignment_id,str
policy_definition_id,str
effective_parameters,str
is_compliant,bool
subscription_id,str
resource_type,str
resource_location,str
resource_group,str
resource_tags,str
policy_assignment_name,str
policy_assignment_owner,str
policy_assignment_parameters,str
policy_assignment_scope,str
policy_definition_name,str
policy_definition_action,str
policy_definition_category,str
policy_set_definition_id,str
policy_set_definition_name,str
policy_set_definition_owner,str
policy_set_definition_category,str
policy_set_definition_parameters,str
management_group_ids,str
policy_definition_reference_id,str
tenant_id,str
principal_oid,str
__init__,"Callable[[_],None]"
policy_definition_id,str
policy_definition_reference_id,str
effect,str
__init__,"Callable[[_],None]"
odatacontext,str
odatacount,int
__init__,"Callable[[_],None]"
odatacontext,str
odatacount,int
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
odataid,str
odatacontext,str
__init__,"Callable[[_],None]"
top,int
order_by,str
select,str
filter,str
apply,str
__init__,"Callable[[_],None]"
odatacount,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
display_name,str
subdomain,str
template,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
display_name,str
subdomain,str
template,str
__init__,"Callable[[_],None]"
column,str
operator,str
__init__,"Callable[[_],None]"
id,str
key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
category,str
display_name,str
query,str
version,int
e_tag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
indexed,bool
stored,bool
facet,bool
name,str
display_name,str
type,str
__init__,"Callable[[_],None]"
query,str
top,int
__init__,"Callable[[_],None]"
pre,str
post,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
customer_id,str
display_name,str
workspace_name,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
unit,str
current_value,float
limit,float
quota_period,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
table,str
__init__,"Callable[[_],None]"
location,str
source,str
customer_id,str
portal_url,str
retention_in_days,int
e_tag,str
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
operation_id,str
__init__,"Callable[[_],None]"
e_tag,str
__init__,"Callable[[_],None]"
primary_shared_key,str
secondary_shared_key,str
__init__,"Callable[[_],None]"
name,str
enabled,bool
display_name,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
__init__,"Callable[[_],None]"
resource_id,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
version,int
__init__,"Callable[[_],None]"
type,str
message,str
__init__,"Callable[[_],None]"
search_id,str
result_type,str
total,int
top,int
id,str
status,str
e_tag,str
request_time,int
aggregated_value_field,str
aggregated_grouping_fields,str
sum,int
max,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
server_count,int
is_gateway,bool
name,str
id,str
version,str
sku,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
e_tag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
number_of_documents,int
status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
expression,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
original_query,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
time,str
utc_offset,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
provider,str
operation,str
resource,str
description,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
type,str
name,str
__init__,"Callable[[_],None]"
name_available,bool
reason,str
message,str
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
fill_gap_with_zero,str
category,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
size,str
family,str
capacity,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
host_name_prefix,str
version,str
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
to_be_exported_for_shoebox,bool
__init__,"Callable[[_],None]"
primary_key,str
secondary_key,str
primary_connection_string,str
secondary_connection_string,str
__init__,"Callable[[_],None]"
host_name_prefix,str
__init__,"Callable[[_],None]"
id,str
current_value,int
limit,int
unit,str
__init__,"Callable[[_],None]"
code,str
message,str
details,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provisioning_state,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
connection_string,str
location,str
apply_allocation_policy,bool
allocation_weight,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name_available,bool
message,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
key_name,str
primary_key,str
secondary_key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
verification_code,str
subject,str
expiry,str
thumbprint,str
is_verified,bool
created,str
updated,str
__init__,"Callable[[_],None]"
certificate_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
zone_resilient,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
lun,int
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
placement_group_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_customer_initiated_maintenance_allowed,bool
last_operation_message,str
__init__,"Callable[[_],None]"
code,str
display_status,str
message,str
__init__,"Callable[[_],None]"
lun,int
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
publisher,str
name,str
product,str
__init__,"Callable[[_],None]"
name,str
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
location,str
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
number_of_cores,int
os_disk_size_in_mb,int
resource_disk_size_in_mb,int
memory_in_mb,int
max_data_disk_count,int
__init__,"Callable[[_],None]"
lun,int
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
vhd_prefix,str
destination_container_name,str
overwrite_vhds,bool
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
ultra_ssd_enabled,bool
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
primary,bool
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
publisher,str
offer,str
sku,str
version,str
__init__,"Callable[[_],None]"
max_batch_instance_percent,int
max_unhealthy_instance_percent,int
max_unhealthy_upgraded_instance_percent,int
pause_time_between_batches,str
__init__,"Callable[[_],None]"
exceptiontype,str
errordetail,str
__init__,"Callable[[_],None]"
provision_vm_agent,bool
enable_automatic_updates,bool
time_zone,str
__init__,"Callable[[_],None]"
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
domain_name_label,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
name,str
tier,str
capacity,int
__init__,"Callable[[_],None]"
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
location,str
force_update_tag,str
publisher,str
virtual_machine_extension_type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
location,str
overprovision,bool
single_placement_group,bool
zone_balance,bool
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
command_id,str
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
__init__,"Callable[[_],None]"
computer_name,str
admin_username,str
admin_password,str
custom_data,str
allow_extension_operations,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
vm_agent_version,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disable_password_authentication,bool
provision_vm_agent,bool
__init__,"Callable[[_],None]"
name,str
type,str
default_value,str
required,bool
__init__,"Callable[[_],None]"
enabled,bool
storage_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
computer_name_prefix,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
__init__,"Callable[[_],None]"
overprovision,bool
single_placement_group,bool
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
automatic_os_upgrade_supported,bool
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
computer_name,str
os_name,str
os_version,str
rdp_thumb_print,str
__init__,"Callable[[_],None]"
path,str
key_data,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_url,str
certificate_store,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
__init__,"Callable[[_],None]"
enable_automatic_os_upgrade,bool
disable_automatic_rollback,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
operating_system,str
compute_role,str
handler_schema,str
vm_scale_set_enabled,bool
supports_multiple_extensions,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
zone_resilient,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
disk_size_gb,int
__init__,"Callable[[_],None]"
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
lun,int
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
placement_group_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_customer_initiated_maintenance_allowed,bool
last_operation_message,str
__init__,"Callable[[_],None]"
code,str
display_status,str
message,str
__init__,"Callable[[_],None]"
lun,int
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
storage_account_id,str
source_uri,str
source_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
publisher,str
name,str
product,str
__init__,"Callable[[_],None]"
name,str
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
location,str
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
number_of_cores,int
os_disk_size_in_mb,int
resource_disk_size_in_mb,int
memory_in_mb,int
max_data_disk_count,int
__init__,"Callable[[_],None]"
lun,int
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
vhd_prefix,str
destination_container_name,str
overwrite_vhds,bool
__init__,"Callable[[_],None]"
name,str
regional_replica_count,int
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
ultra_ssd_enabled,bool
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
primary,bool
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
publisher,str
offer,str
sku,str
version,str
__init__,"Callable[[_],None]"
max_batch_instance_percent,int
max_unhealthy_instance_percent,int
max_unhealthy_upgraded_instance_percent,int
pause_time_between_batches,str
__init__,"Callable[[_],None]"
exceptiontype,str
errordetail,str
__init__,"Callable[[_],None]"
provision_vm_agent,bool
enable_automatic_updates,bool
time_zone,str
__init__,"Callable[[_],None]"
disable_auto_rollback,bool
__init__,"Callable[[_],None]"
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
domain_name_label,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
name,str
tier,str
capacity,int
__init__,"Callable[[_],None]"
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
location,str
description,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
replica_count,int
exclude_from_latest,bool
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
force_update_tag,str
publisher,str
virtual_machine_extension_type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
min,int
max,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
automatic_os_upgrade,bool
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
location,str
overprovision,bool
single_placement_group,bool
zone_balance,bool
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
command_id,str
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
location,str
description,str
eula,str
privacy_statement_uri,str
release_note_uri,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
__init__,"Callable[[_],None]"
computer_name,str
admin_username,str
admin_password,str
custom_data,str
allow_extension_operations,bool
__init__,"Callable[[_],None]"
disk_size_gb,int
disk_iops_read_write,int
disk_mbps_read_write,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
vm_agent_version,str
__init__,"Callable[[_],None]"
id,str
lun,int
__init__,"Callable[[_],None]"
publisher,str
offer,str
sku,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
disk_size_gb,int
disk_iops_read_write,int
disk_mbps_read_write,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disable_password_authentication,bool
provision_vm_agent,bool
__init__,"Callable[[_],None]"
name,str
type,str
default_value,str
required,bool
__init__,"Callable[[_],None]"
enabled,bool
storage_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
computer_name_prefix,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
overprovision,bool
single_placement_group,bool
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
computer_name,str
os_name,str
os_version,str
rdp_thumb_print,str
__init__,"Callable[[_],None]"
path,str
key_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
duration_in_seconds,int
__init__,"Callable[[_],None]"
certificate_url,str
certificate_store,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
operating_system,str
compute_role,str
handler_schema,str
vm_scale_set_enabled,bool
supports_multiple_extensions,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_url,str
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
location,str
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
enable_accelerated_networking,bool
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
lun,int
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
placement_group_id,str
__init__,"Callable[[_],None]"
is_customer_initiated_maintenance_allowed,bool
last_operation_message,str
__init__,"Callable[[_],None]"
code,str
display_status,str
message,str
__init__,"Callable[[_],None]"
lun,int
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
storage_account_id,str
source_uri,str
source_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
publisher,str
name,str
product,str
__init__,"Callable[[_],None]"
name,str
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
location,str
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
number_of_cores,int
os_disk_size_in_mb,int
resource_disk_size_in_mb,int
memory_in_mb,int
max_data_disk_count,int
__init__,"Callable[[_],None]"
lun,int
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
vhd_prefix,str
destination_container_name,str
overwrite_vhds,bool
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
primary,bool
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
publisher,str
offer,str
sku,str
version,str
__init__,"Callable[[_],None]"
max_batch_instance_percent,int
max_unhealthy_instance_percent,int
max_unhealthy_upgraded_instance_percent,int
pause_time_between_batches,str
__init__,"Callable[[_],None]"
exceptiontype,str
errordetail,str
__init__,"Callable[[_],None]"
provision_vm_agent,bool
enable_automatic_updates,bool
time_zone,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
domain_name_label,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
name,str
tier,str
capacity,int
__init__,"Callable[[_],None]"
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
location,str
force_update_tag,str
publisher,str
virtual_machine_extension_type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
automatic_os_upgrade,bool
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
location,str
overprovision,bool
single_placement_group,bool
__init__,"Callable[[_],None]"
command_id,str
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
__init__,"Callable[[_],None]"
computer_name,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
vm_agent_version,str
__init__,"Callable[[_],None]"
id,str
lun,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disable_password_authentication,bool
__init__,"Callable[[_],None]"
name,str
type,str
default_value,str
required,bool
__init__,"Callable[[_],None]"
enabled,bool
storage_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
computer_name_prefix,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
__init__,"Callable[[_],None]"
overprovision,bool
single_placement_group,bool
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
__init__,"Callable[[_],None]"
path,str
key_data,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
duration_in_seconds,int
__init__,"Callable[[_],None]"
certificate_url,str
certificate_store,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
enable_accelerated_networking,bool
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
location,str
operating_system,str
compute_role,str
handler_schema,str
vm_scale_set_enabled,bool
supports_multiple_extensions,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
zone_resilient,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
location,str
disk_size_gb,int
__init__,"Callable[[_],None]"
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
lun,int
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
placement_group_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_customer_initiated_maintenance_allowed,bool
last_operation_message,str
__init__,"Callable[[_],None]"
code,str
display_status,str
message,str
__init__,"Callable[[_],None]"
lun,int
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
storage_account_id,str
source_uri,str
source_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
publisher,str
name,str
product,str
__init__,"Callable[[_],None]"
name,str
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
location,str
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
number_of_cores,int
os_disk_size_in_mb,int
resource_disk_size_in_mb,int
memory_in_mb,int
max_data_disk_count,int
__init__,"Callable[[_],None]"
lun,int
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
vhd_prefix,str
destination_container_name,str
overwrite_vhds,bool
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
primary,bool
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
publisher,str
offer,str
sku,str
version,str
__init__,"Callable[[_],None]"
max_batch_instance_percent,int
max_unhealthy_instance_percent,int
max_unhealthy_upgraded_instance_percent,int
pause_time_between_batches,str
__init__,"Callable[[_],None]"
exceptiontype,str
errordetail,str
__init__,"Callable[[_],None]"
provision_vm_agent,bool
enable_automatic_updates,bool
time_zone,str
__init__,"Callable[[_],None]"
disable_auto_rollback,bool
__init__,"Callable[[_],None]"
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
domain_name_label,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
name,str
tier,str
capacity,int
__init__,"Callable[[_],None]"
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
location,str
force_update_tag,str
publisher,str
virtual_machine_extension_type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
automatic_os_upgrade,bool
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
location,str
overprovision,bool
single_placement_group,bool
zone_balance,bool
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
command_id,str
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
__init__,"Callable[[_],None]"
computer_name,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
vm_agent_version,str
__init__,"Callable[[_],None]"
id,str
lun,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disable_password_authentication,bool
__init__,"Callable[[_],None]"
name,str
type,str
default_value,str
required,bool
__init__,"Callable[[_],None]"
enabled,bool
storage_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
computer_name_prefix,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
overprovision,bool
single_placement_group,bool
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
computer_name,str
os_name,str
os_version,str
rdp_thumb_print,str
__init__,"Callable[[_],None]"
path,str
key_data,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
duration_in_seconds,int
__init__,"Callable[[_],None]"
certificate_url,str
certificate_store,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
location,str
operating_system,str
compute_role,str
handler_schema,str
vm_scale_set_enabled,bool
supports_multiple_extensions,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_url,str
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
location,str
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
lun,int
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
placement_group_id,str
__init__,"Callable[[_],None]"
code,str
display_status,str
message,str
__init__,"Callable[[_],None]"
lun,int
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
storage_account_id,str
source_uri,str
source_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
publisher,str
name,str
product,str
__init__,"Callable[[_],None]"
name,str
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
platform_update_domain_count,int
platform_fault_domain_count,int
managed,bool
__init__,"Callable[[_],None]"
name,str
number_of_cores,int
os_disk_size_in_mb,int
resource_disk_size_in_mb,int
memory_in_mb,int
max_data_disk_count,int
__init__,"Callable[[_],None]"
lun,int
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
vhd_prefix,str
destination_container_name,str
overwrite_vhds,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
primary,bool
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
publisher,str
offer,str
sku,str
version,str
__init__,"Callable[[_],None]"
exceptiontype,str
errordetail,str
__init__,"Callable[[_],None]"
provision_vm_agent,bool
enable_automatic_updates,bool
time_zone,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
tier,str
capacity,int
__init__,"Callable[[_],None]"
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
location,str
force_update_tag,str
publisher,str
virtual_machine_extension_type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
location,str
over_provision,bool
single_placement_group,bool
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
name,str
id,str
__init__,"Callable[[_],None]"
computer_name,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
vm_agent_version,str
__init__,"Callable[[_],None]"
id,str
lun,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disable_password_authentication,bool
__init__,"Callable[[_],None]"
enabled,bool
storage_uri,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
computer_name_prefix,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
__init__,"Callable[[_],None]"
path,str
key_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
duration_in_seconds,int
__init__,"Callable[[_],None]"
certificate_url,str
certificate_store,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
operating_system,str
compute_role,str
handler_schema,str
vm_scale_set_enabled,bool
supports_multiple_extensions,bool
__init__,"Callable[[_],None]"
certificate_url,str
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
__init__,"Callable[[_],None]"
code,str
display_status,str
message,str
__init__,"Callable[[_],None]"
lun,int
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
publisher,str
name,str
product,str
__init__,"Callable[[_],None]"
name,str
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
name,str
number_of_cores,int
os_disk_size_in_mb,int
resource_disk_size_in_mb,int
memory_in_mb,int
max_data_disk_count,int
__init__,"Callable[[_],None]"
vhd_prefix,str
destination_container_name,str
overwrite_vhds,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
primary,bool
__init__,"Callable[[_],None]"
publisher,str
offer,str
sku,str
version,str
__init__,"Callable[[_],None]"
exceptiontype,str
errordetail,str
__init__,"Callable[[_],None]"
provision_vm_agent,bool
enable_automatic_updates,bool
time_zone,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
tier,str
capacity,int
__init__,"Callable[[_],None]"
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
location,str
force_update_tag,str
publisher,str
virtual_machine_extension_type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
location,str
over_provision,bool
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
name,str
id,str
__init__,"Callable[[_],None]"
computer_name,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
vm_agent_version,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disable_password_authentication,bool
__init__,"Callable[[_],None]"
enabled,bool
storage_uri,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
computer_name_prefix,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
__init__,"Callable[[_],None]"
path,str
key_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_url,str
certificate_store,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
operating_system,str
compute_role,str
handler_schema,str
vm_scale_set_enabled,bool
supports_multiple_extensions,bool
__init__,"Callable[[_],None]"
certificate_url,str
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
provisioning_state,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
__init__,"Callable[[_],None]"
code,str
display_status,str
message,str
__init__,"Callable[[_],None]"
lun,int
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
publisher,str
name,str
product,str
__init__,"Callable[[_],None]"
name,str
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
name,str
number_of_cores,int
os_disk_size_in_mb,int
resource_disk_size_in_mb,int
memory_in_mb,int
max_data_disk_count,int
__init__,"Callable[[_],None]"
vhd_prefix,str
destination_container_name,str
overwrite_vhds,bool
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
primary,bool
__init__,"Callable[[_],None]"
publisher,str
offer,str
sku,str
version,str
__init__,"Callable[[_],None]"
exceptiontype,str
errordetail,str
__init__,"Callable[[_],None]"
provision_vm_agent,bool
enable_automatic_updates,bool
time_zone,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
tier,str
capacity,int
__init__,"Callable[[_],None]"
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
location,str
force_update_tag,str
publisher,str
virtual_machine_extension_type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
location,str
provisioning_state,str
over_provision,bool
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
name,str
id,str
__init__,"Callable[[_],None]"
computer_name,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
vm_agent_version,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disable_password_authentication,bool
__init__,"Callable[[_],None]"
enabled,bool
storage_uri,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
computer_name_prefix,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
__init__,"Callable[[_],None]"
path,str
key_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_url,str
certificate_store,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
operating_system,str
compute_role,str
handler_schema,str
vm_scale_set_enabled,bool
supports_multiple_extensions,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
zone_resilient,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
lun,int
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
rdp_thumb_print,str
placement_group_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_customer_initiated_maintenance_allowed,bool
last_operation_message,str
__init__,"Callable[[_],None]"
code,str
display_status,str
message,str
__init__,"Callable[[_],None]"
lun,int
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
publisher,str
name,str
product,str
__init__,"Callable[[_],None]"
name,str
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
schema,str
id,str
label,str
description,str
__init__,"Callable[[_],None]"
location,str
platform_update_domain_count,int
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
number_of_cores,int
os_disk_size_in_mb,int
resource_disk_size_in_mb,int
memory_in_mb,int
max_data_disk_count,int
__init__,"Callable[[_],None]"
lun,int
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
vhd_prefix,str
destination_container_name,str
overwrite_vhds,bool
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
name,str
location,str
id,str
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
primary,bool
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
publisher,str
offer,str
sku,str
version,str
__init__,"Callable[[_],None]"
max_batch_instance_percent,int
max_unhealthy_instance_percent,int
max_unhealthy_upgraded_instance_percent,int
pause_time_between_batches,str
__init__,"Callable[[_],None]"
exceptiontype,str
errordetail,str
__init__,"Callable[[_],None]"
provision_vm_agent,bool
enable_automatic_updates,bool
time_zone,str
__init__,"Callable[[_],None]"
disable_auto_rollback,bool
__init__,"Callable[[_],None]"
write_accelerator_enabled,bool
__init__,"Callable[[_],None]"
domain_name_label,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
name,str
tier,str
capacity,int
__init__,"Callable[[_],None]"
type,str
type_handler_version,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
location,str
force_update_tag,str
publisher,str
virtual_machine_extension_type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
idle_timeout_in_minutes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
automatic_os_upgrade,bool
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
name,str
write_accelerator_enabled,bool
disk_size_gb,int
__init__,"Callable[[_],None]"
name,str
write_accelerator_enabled,bool
__init__,"Callable[[_],None]"
location,str
overprovision,bool
single_placement_group,bool
zone_balance,bool
platform_fault_domain_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
command_id,str
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
__init__,"Callable[[_],None]"
computer_name,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
vm_agent_version,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disable_password_authentication,bool
__init__,"Callable[[_],None]"
name,str
type,str
default_value,str
required,bool
__init__,"Callable[[_],None]"
enabled,bool
storage_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
computer_name_prefix,str
admin_username,str
admin_password,str
custom_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
blob_uri,str
disk_size_gb,int
__init__,"Callable[[_],None]"
force_update_tag,str
publisher,str
type,str
type_handler_version,str
auto_upgrade_minor_version,bool
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
id,str
name,str
primary,bool
__init__,"Callable[[_],None]"
overprovision,bool
single_placement_group,bool
__init__,"Callable[[_],None]"
key_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
platform_update_domain,int
platform_fault_domain,int
computer_name,str
os_name,str
os_version,str
rdp_thumb_print,str
__init__,"Callable[[_],None]"
path,str
key_data,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_url,str
certificate_store,str
__init__,"Callable[[_],None]"
name,str
id,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
blob_container_sas_uri,str
group_by_throttle_policy,bool
group_by_operation_name,bool
group_by_resource_name,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
license_type,str
__init__,"Callable[[_],None]"
license_type,str
__init__,"Callable[[_],None]"
location,str
operating_system,str
compute_role,str
handler_schema,str
vm_scale_set_enabled,bool
supports_multiple_extensions,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tenant_id,str
object_id,str
application_id,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tenant_id,str
vault_uri,str
enabled_for_deployment,bool
enabled_for_disk_encryption,bool
enabled_for_template_deployment,bool
enable_soft_delete,bool
enable_purge_protection,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tenant_id,str
enabled_for_deployment,bool
enabled_for_disk_encryption,bool
enabled_for_template_deployment,bool
enable_soft_delete,bool
enable_purge_protection,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tenant_id,str
object_id,str
application_id,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tenant_id,str
vault_uri,str
enabled_for_deployment,bool
enabled_for_disk_encryption,bool
enabled_for_template_deployment,bool
enable_soft_delete,bool
enable_purge_protection,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tenant_id,str
enabled_for_deployment,bool
enabled_for_disk_encryption,bool
enabled_for_template_deployment,bool
enable_soft_delete,bool
enable_purge_protection,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
left,float
top,float
width,float
height,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
name,str
is_default,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
image_id,str
tag_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
tag_id,str
left,float
top,float
width,float
height,float
__init__,"Callable[[_],None]"
image_id,str
tag_id,str
left,float
top,float
width,float
height,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
domain_id,str
__init__,"Callable[[_],None]"
url,str
__init__,"Callable[[_],None]"
session,str
continuation,str
max_count,int
iteration_id,str
application,str
__init__,"Callable[[_],None]"
left,float
top,float
width,float
height,float
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
tag_id,str
left,float
top,float
width,float
height,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
contents,bytearray
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tag_id,str
left,float
top,float
width,float
height,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
container_id,str
state,str
error,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
select,str
expand,str
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key,str
value,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
blob_source,str
file_path,str
file_mode,str
__init__,"Callable[[_],None]"
image_name,str
container_run_options,str
__init__,"Callable[[_],None]"
pool_id,str
__init__,"Callable[[_],None]"
url,str
read_iops,int
write_iops,int
read_io_gi_b,float
write_io_gi_b,float
num_succeeded_tasks,int
num_failed_tasks,int
num_task_retries,int
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
affinity_id,str
node_url,str
pool_id,str
node_id,str
task_root_directory,str
task_root_directory_url,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
ocp_range,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
public_ip_address,str
public_fqdn,str
frontend_port,int
backend_port,int
__init__,"Callable[[_],None]"
results,str
__init__,"Callable[[_],None]"
max_task_retry_count,int
__init__,"Callable[[_],None]"
select,str
expand,str
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
auto_scale_formula,str
__init__,"Callable[[_],None]"
priority,int
display_name,str
uses_task_dependencies,bool
__init__,"Callable[[_],None]"
target_dedicated_nodes,int
target_low_priority_nodes,int
__init__,"Callable[[_],None]"
filter,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
os_family,str
target_os_version,str
__init__,"Callable[[_],None]"
url,str
read_iops,int
write_iops,int
read_io_gi_b,float
write_io_gi_b,float
__init__,"Callable[[_],None]"
avg_cpu_percentage,float
avg_memory_gi_b,float
peak_memory_gi_b,float
avg_disk_gi_b,float
peak_disk_gi_b,float
disk_read_iops,int
disk_write_iops,int
disk_read_gi_b,float
disk_write_gi_b,float
network_read_gi_b,float
network_write_gi_b,float
__init__,"Callable[[_],None]"
filter,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
remote_login_ip_address,str
remote_login_port,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
content_length,int
content_type,str
file_mode,str
__init__,"Callable[[_],None]"
name,str
is_admin,bool
password,str
ssh_public_key,str
__init__,"Callable[[_],None]"
retry_count,int
task_root_directory,str
task_root_directory_url,str
exit_code,int
__init__,"Callable[[_],None]"
auto_pool_id_prefix,str
keep_alive,bool
__init__,"Callable[[_],None]"
lun,int
disk_size_gb,int
__init__,"Callable[[_],None]"
user_name,str
__init__,"Callable[[_],None]"
select,str
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
id,str
url,str
ip_address,str
affinity_id,str
vm_size,str
total_tasks_run,int
running_tasks_count,int
total_tasks_succeeded,int
is_dedicated,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
code,int
__init__,"Callable[[_],None]"
uid,int
gid,int
ssh_private_key,str
__init__,"Callable[[_],None]"
url,str
read_iops,int
write_iops,int
read_io_gi_b,float
write_io_gi_b,float
num_succeeded_tasks,int
num_failed_tasks,int
num_task_retries,int
__init__,"Callable[[_],None]"
id,str
display_name,str
__init__,"Callable[[_],None]"
filter,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
node_agent_sku_id,str
license_type,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
thumbprint,str
thumbprint_algorithm,str
store_name,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
start,int
end,int
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
target_os_version,str
__init__,"Callable[[_],None]"
coordination_command_line,str
number_of_instances,int
__init__,"Callable[[_],None]"
retry_count,int
requeue_count,int
exit_code,int
__init__,"Callable[[_],None]"
name,str
backend_port,int
frontend_port_range_start,int
frontend_port_range_end,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
task_url,str
job_id,str
task_id,str
subtask_id,int
__init__,"Callable[[_],None]"
publisher,str
offer,str
sku,str
version,str
virtual_machine_image_id,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
id,int
exit_code,int
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
id,str
display_name,str
url,str
e_tag,str
vm_size,str
current_dedicated_nodes,int
current_low_priority_nodes,int
target_dedicated_nodes,int
target_low_priority_nodes,int
enable_auto_scale,bool
auto_scale_formula,str
enable_inter_node_communication,bool
max_tasks_per_node,int
__init__,"Callable[[_],None]"
enable_automatic_updates,bool
__init__,"Callable[[_],None]"
id,str
command_line,str
display_name,str
kill_job_on_completion,bool
run_exclusive,bool
allow_low_priority_node,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
id,str
display_name,str
url,str
e_tag,str
command_line,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
filter,str
select,str
expand,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
thumbprint,str
thumbprint_algorithm,str
url,str
public_data,str
__init__,"Callable[[_],None]"
application_id,str
version,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
priority,int
__init__,"Callable[[_],None]"
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
filter,str
select,str
expand,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
user_name,str
password,str
registry_server,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
terminate_reason,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
filter,str
select,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
task_root_directory,str
task_root_directory_url,str
exit_code,int
__init__,"Callable[[_],None]"
priority,int
source_address_prefix,str
__init__,"Callable[[_],None]"
id,str
display_name,str
url,str
e_tag,str
__init__,"Callable[[_],None]"
name,str
url,str
is_directory,bool
__init__,"Callable[[_],None]"
pool_id,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
creating,int
idle,int
offline,int
preempted,int
rebooting,int
reimaging,int
running,int
starting,int
start_task_failed,int
leaving_pool,int
unknown,int
unusable,int
waiting_for_start_task,int
total,int
__init__,"Callable[[_],None]"
container_url,str
path,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
lang,str
value,str
__init__,"Callable[[_],None]"
start,int
end,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
file_pattern,str
__init__,"Callable[[_],None]"
password,str
ssh_public_key,str
__init__,"Callable[[_],None]"
filter,str
select,str
expand,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
filter,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
filter,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
virtual_directory_name,str
number_of_files_uploaded,int
__init__,"Callable[[_],None]"
version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
ocp_range,str
__init__,"Callable[[_],None]"
priority,int
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
select,str
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
subnet_id,str
__init__,"Callable[[_],None]"
affinity_id,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
task_id,str
e_tag,str
location,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
select,str
expand,str
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
auto_scale_formula,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
select,str
expand,str
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
url,str
__init__,"Callable[[_],None]"
pool_id,str
node_id,str
node_url,str
__init__,"Callable[[_],None]"
filter,str
select,str
expand,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
select,str
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
filter,str
select,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
active,int
running,int
completed,int
succeeded,int
failed,int
__init__,"Callable[[_],None]"
command_line,str
id,str
__init__,"Callable[[_],None]"
id,str
command_line,str
display_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
retry_count,int
exit_code,int
__init__,"Callable[[_],None]"
thumbprint,str
thumbprint_algorithm,str
data,str
password,str
__init__,"Callable[[_],None]"
filter,str
select,str
expand,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
max_task_retry_count,int
__init__,"Callable[[_],None]"
name,str
password,str
__init__,"Callable[[_],None]"
vm_size,str
display_name,str
max_tasks_per_node,int
target_dedicated_nodes,int
target_low_priority_nodes,int
enable_auto_scale,bool
auto_scale_formula,str
enable_inter_node_communication,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
filter,str
select,str
max_results,int
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
display_name,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
vm_size,str
display_name,str
target_dedicated_nodes,int
target_low_priority_nodes,int
enable_auto_scale,bool
auto_scale_formula,str
enable_inter_node_communication,bool
max_tasks_per_node,int
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
container_url,str
__init__,"Callable[[_],None]"
id,str
display_name,str
priority,int
uses_task_dependencies,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
id,str
url,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
command_line,str
id,str
wait_for_success,bool
rerun_on_node_reboot_after_success,bool
__init__,"Callable[[_],None]"
command_line,str
max_task_retry_count,int
wait_for_success,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
if_match,str
if_none_match,str
__init__,"Callable[[_],None]"
id,str
display_name,str
uses_task_dependencies,bool
url,str
e_tag,str
priority,int
__init__,"Callable[[_],None]"
timeout,int
client_request_id,str
return_client_request_id,bool
__init__,"Callable[[_],None]"
pool_id,str
terminate_reason,str
__init__,"Callable[[_],None]"
pool_id,str
vm_size,str
total_core_hours,float
data_ingress_gi_b,float
data_egress_gi_b,float
__init__,"Callable[[_],None]"
predicate_expression,str
storage_endpoint,str
storage_account_access_key,str
retention_days,int
storage_account_subscription_id,str
is_storage_secondary_key_in_use,bool
is_azure_monitor_target_enabled,bool
__init__,"Callable[[_],None]"
max_size_bytes,int
zone_redundant,bool
__init__,"Callable[[_],None]"
schema_name,str
table_name,str
column_name,str
alias_name,str
number_from,str
number_to,str
prefix_size,str
suffix_size,str
replacement_string,str
__init__,"Callable[[_],None]"
target_group,str
credential,str
step_id,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
private_blob,str
cert_password,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
server_key_name,str
__init__,"Callable[[_],None]"
storage_key,str
storage_uri,str
administrator_login,str
administrator_login_password,str
__init__,"Callable[[_],None]"
failover_with_data_loss_grace_period_minutes,int
__init__,"Callable[[_],None]"
server_name,str
database_name,str
table_name,str
credential,str
subscription_id,str
resource_group_name,str
schema_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
retention_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
min_capacity,float
max_capacity,float
__init__,"Callable[[_],None]"
storage_key,str
storage_uri,str
administrator_login,str
administrator_login_password,str
name,str
type,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
partner_server,str
__init__,"Callable[[_],None]"
email_account_admins,bool
storage_endpoint,str
storage_account_access_key,str
retention_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
weekly_retention,str
monthly_retention,str
yearly_retention,str
week_of_year,int
__init__,"Callable[[_],None]"
retention_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
username,str
password,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
collation,str
storage_container_uri,str
source_database_id,str
storage_container_sas_token,str
__init__,"Callable[[_],None]"
name,str
tier,str
size,str
family,str
capacity,int
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
collation,str
storage_container_uri,str
source_database_id,str
storage_container_sas_token,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
predicate_expression,str
storage_endpoint,str
storage_account_access_key,str
retention_days,int
storage_account_subscription_id,str
is_storage_secondary_key_in_use,bool
is_azure_monitor_target_enabled,bool
__init__,"Callable[[_],None]"
current_attempts,int
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
kind,str
uri,str
thumbprint,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
quoted_name,str
data_size,str
data_type,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
restore_point_label,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
storage_endpoint,str
storage_account_access_key,str
retention_days,int
storage_account_subscription_id,str
is_storage_secondary_key_in_use,bool
is_azure_monitor_target_enabled,bool
__init__,"Callable[[_],None]"
location,str
administrator_login,str
administrator_login_password,str
subnet_id,str
license_type,str
v_cores,int
storage_size_in_gb,int
collation,str
dns_zone_partner,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
dtu,float
database_dtu_min,float
database_dtu_max,float
storage_mb,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sync_agent_id,str
sql_server_database_id,str
server_name,str
database_name,str
user_name,str
password,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
collation,str
max_size_bytes,int
elastic_pool_id,str
source_database_id,str
recovery_services_recovery_point_id,str
long_term_retention_backup_resource_id,str
recoverable_database_id,str
restorable_dropped_database_id,str
zone_redundant,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sync_database_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
virtual_network_subnet_id,str
ignore_missing_vnet_service_endpoint,bool
__init__,"Callable[[_],None]"
location,str
collation,str
max_size_bytes,int
elastic_pool_id,str
source_database_id,str
recovery_services_recovery_point_id,str
long_term_retention_backup_resource_id,str
recoverable_database_id,str
restorable_dropped_database_id,str
zone_redundant,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
quoted_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
failover_with_data_loss_grace_period_minutes,int
__init__,"Callable[[_],None]"
administrator_login,str
administrator_login_password,str
version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
administrator_login,str
administrator_login_password,str
subnet_id,str
license_type,str
v_cores,int
storage_size_in_gb,int
collation,str
dns_zone_partner,str
__init__,"Callable[[_],None]"
location,str
administrator_login,str
administrator_login_password,str
version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
storage_endpoint,str
storage_account_access_key,str
retention_days,int
storage_account_subscription_id,str
is_storage_secondary_key_in_use,bool
is_azure_monitor_target_enabled,bool
__init__,"Callable[[_],None]"
is_enabled,bool
email_subscription_admins,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
master_sync_member_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
server_name,str
database_name,str
elastic_pool_name,str
shard_map_name,str
refresh_credential,str
__init__,"Callable[[_],None]"
location,str
disabled_alerts,str
email_addresses,str
storage_endpoint,str
storage_account_access_key,str
retention_days,int
__init__,"Callable[[_],None]"
enabled,bool
interval,str
__init__,"Callable[[_],None]"
old_server_dns_alias_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
interval,int
sync_database_id,str
hub_database_user_name,str
hub_database_password,str
__init__,"Callable[[_],None]"
storage_container_path,str
storage_container_sas_key,str
storage_account_access_key,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
location,str
max_size_bytes,int
zone_redundant,bool
__init__,"Callable[[_],None]"
exempt_principals,str
__init__,"Callable[[_],None]"
dtu,float
size_gb,float
__init__,"Callable[[_],None]"
login,str
sid,str
tenant_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
server_key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
last_backup_name,str
__init__,"Callable[[_],None]"
primary_managed_instance_id,str
partner_managed_instance_id,str
__init__,"Callable[[_],None]"
location,str
database_id,str
__init__,"Callable[[_],None]"
storage_key,str
storage_uri,str
administrator_login,str
administrator_login_password,str
database_name,str
max_size_bytes,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
timeout_seconds,int
retry_attempts,int
initial_retry_interval_seconds,int
maximum_retry_interval_seconds,int
retry_interval_backoff_multiplier,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
title,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
original_query,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
title,str
__init__,"Callable[[_],None]"
pivot,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
storage_account_resource_id,str
blob_container,str
archive_name_format,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name_available,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
location,str
is_auto_inflate_enabled,bool
maximum_throughput_units,int
kafka_enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
partner_namespace,str
alternate_name,str
__init__,"Callable[[_],None]"
enabled,bool
interval_in_seconds,int
size_limit_in_bytes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
user_metadata,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message_retention_in_days,int
partition_count,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
managed_resource_group_id,str
kind,str
location,str
managed_by,str
application_definition_id,str
ui_definition_uri,str
__init__,"Callable[[_],None]"
location,str
managed_by,str
__init__,"Callable[[_],None]"
principal_id,str
role_definition_id,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
version,str
promotion_code,str
__init__,"Callable[[_],None]"
name,str
tier,str
size,str
family,str
model,str
capacity,int
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
version,str
__init__,"Callable[[_],None]"
name,str
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
managed_by,str
display_name,str
is_enabled,str
description,str
package_file_uri,str
__init__,"Callable[[_],None]"
http_status,str
error_code,str
error_message,str
__init__,"Callable[[_],None]"
location,str
managed_by,str
managed_resource_group_id,str
application_definition_id,str
ui_definition_uri,str
kind,str
__init__,"Callable[[_],None]"
tag_value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
kind,str
managed_by,str
__init__,"Callable[[_],None]"
target_resource_group,str
__init__,"Callable[[_],None]"
deployment_name,str
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
id,str
resource_name,str
resource_type,str
__init__,"Callable[[_],None]"
deployment_name,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
tag_name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
resource_type,str
tagname,str
tagvalue,str
__init__,"Callable[[_],None]"
detail_level,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
path,str
__init__,"Callable[[_],None]"
name,str
managed_by,str
__init__,"Callable[[_],None]"
publisher,str
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
version,str
__init__,"Callable[[_],None]"
name,str
tier,str
size,str
family,str
model,str
capacity,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tag_name,str
tag_value,str
__init__,"Callable[[_],None]"
options,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
provisioning_state,str
__init__,"Callable[[_],None]"
namespace,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
location,str
name,str
managed_by,str
__init__,"Callable[[_],None]"
type,str
value,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tag_value,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
kind,str
managed_by,str
__init__,"Callable[[_],None]"
target_resource_group,str
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
id,str
resource_name,str
resource_type,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
tag_name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
resource_type,str
tagname,str
tagvalue,str
__init__,"Callable[[_],None]"
detail_level,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
path,str
__init__,"Callable[[_],None]"
publisher,str
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
name,str
tier,str
size,str
family,str
model,str
capacity,int
__init__,"Callable[[_],None]"
code,str
message,str
target,str
__init__,"Callable[[_],None]"
provisioning_state,str
service_request_id,str
status_code,str
__init__,"Callable[[_],None]"
tag_name,str
tag_value,str
__init__,"Callable[[_],None]"
options,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
provisioning_state,str
__init__,"Callable[[_],None]"
id,str
namespace,str
registration_state,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
location,str
name,str
__init__,"Callable[[_],None]"
type,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
operation_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provisioning_state,str
correlation_id,str
__init__,"Callable[[_],None]"
tag_value,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
kind,str
managed_by,str
__init__,"Callable[[_],None]"
target_resource_group,str
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
id,str
resource_name,str
resource_type,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
tag_name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
resource_type,str
tagname,str
tagvalue,str
__init__,"Callable[[_],None]"
detail_level,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
path,str
__init__,"Callable[[_],None]"
name,str
managed_by,str
__init__,"Callable[[_],None]"
publisher,str
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
version,str
__init__,"Callable[[_],None]"
name,str
tier,str
size,str
family,str
model,str
capacity,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tag_name,str
tag_value,str
__init__,"Callable[[_],None]"
options,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
provisioning_state,str
__init__,"Callable[[_],None]"
namespace,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
location,str
name,str
managed_by,str
__init__,"Callable[[_],None]"
type,str
value,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tag_value,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
kind,str
managed_by,str
__init__,"Callable[[_],None]"
target_resource_group,str
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
id,str
resource_name,str
resource_type,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
tag_name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
resource_type,str
tagname,str
tagvalue,str
__init__,"Callable[[_],None]"
detail_level,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
path,str
__init__,"Callable[[_],None]"
publisher,str
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
__init__,"Callable[[_],None]"
name,str
tier,str
size,str
family,str
model,str
capacity,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tag_name,str
tag_value,str
__init__,"Callable[[_],None]"
options,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
provisioning_state,str
__init__,"Callable[[_],None]"
namespace,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
location,str
name,str
managed_by,str
__init__,"Callable[[_],None]"
type,str
value,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tag_value,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
kind,str
managed_by,str
__init__,"Callable[[_],None]"
target_resource_group,str
__init__,"Callable[[_],None]"
deployment_name,str
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
id,str
resource_name,str
resource_type,str
__init__,"Callable[[_],None]"
deployment_name,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
tag_name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
resource_type,str
tagname,str
tagvalue,str
__init__,"Callable[[_],None]"
detail_level,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
path,str
__init__,"Callable[[_],None]"
name,str
managed_by,str
__init__,"Callable[[_],None]"
publisher,str
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
name,str
publisher,str
product,str
promotion_code,str
version,str
__init__,"Callable[[_],None]"
name,str
tier,str
size,str
family,str
model,str
capacity,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tag_name,str
tag_value,str
__init__,"Callable[[_],None]"
options,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
__init__,"Callable[[_],None]"
provisioning_state,str
__init__,"Callable[[_],None]"
namespace,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
resource_type,str
resource_name,str
__init__,"Callable[[_],None]"
location,str
name,str
managed_by,str
__init__,"Callable[[_],None]"
type,str
value,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_id,str
notes,str
__init__,"Callable[[_],None]"
target_id,str
__init__,"Callable[[_],None]"
authorization_source,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
display_name,str
description,str
name,str
__init__,"Callable[[_],None]"
display_name,str
policy_definition_id,str
scope,str
id,str
type,str
name,str
__init__,"Callable[[_],None]"
display_name,str
description,str
name,str
__init__,"Callable[[_],None]"
display_name,str
policy_definition_id,str
scope,str
id,str
type,str
name,str
__init__,"Callable[[_],None]"
display_name,str
description,str
__init__,"Callable[[_],None]"
display_name,str
policy_definition_id,str
scope,str
description,str
type,str
name,str
__init__,"Callable[[_],None]"
display_name,str
description,str
__init__,"Callable[[_],None]"
name,str
tier,str
__init__,"Callable[[_],None]"
display_name,str
policy_definition_id,str
scope,str
description,str
__init__,"Callable[[_],None]"
policy_definition_id,str
__init__,"Callable[[_],None]"
display_name,str
description,str
__init__,"Callable[[_],None]"
http_status,str
error_code,str
error_message,str
__init__,"Callable[[_],None]"
display_name,str
description,str
__init__,"Callable[[_],None]"
name,str
tier,str
__init__,"Callable[[_],None]"
display_name,str
policy_definition_id,str
scope,str
description,str
__init__,"Callable[[_],None]"
policy_definition_id,str
__init__,"Callable[[_],None]"
display_name,str
description,str
__init__,"Callable[[_],None]"
http_status,str
error_code,str
error_message,str
__init__,"Callable[[_],None]"
name,str
id,str
type,str
__init__,"Callable[[_],None]"
state,str
__init__,"Callable[[_],None]"
notes,str
name,str
__init__,"Callable[[_],None]"
notes,str
name,str
__init__,"Callable[[_],None]"
application_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
avg_latency_in_ms,int
min_latency_in_ms,int
max_latency_in_ms,int
probes_sent,int
probes_failed,int
__init__,"Callable[[_],None]"
id,str
routing_weight,int
connection_bandwidth,int
shared_key,str
enable_bgp,bool
enable_rate_limiting,bool
enable_internet_security,bool
name,str
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
description,str
service,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
id,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
vpn_client_connections_count,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
id,str
location,str
disable_vpn_encryption,bool
security_provider_name,str
allow_branch_to_branch_traffic,bool
allow_vnet_to_vnet_traffic,bool
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
output_blob_sas_url,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
data,str
keyvault_secret_id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
custom_error_page_url,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
name,str
description,str
translated_address,str
translated_port,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
bandwidth_in_gbps,float
provisioning_state,str
gateway_manager_etag,str
allow_global_reach,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
network_security_group_id,str
applied_to,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
min,int
max,int
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
service_name,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
workspace_id,str
workspace_region,str
workspace_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
idle_timeout_in_minutes,int
enable_floating_ip,bool
enable_tcp_reset,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
enable_tcp_reset,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
enable_tcp_reset,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
allow_hub_to_remote_vnet_transit,bool
allow_remote_vnet_to_use_hub_vnet_gateways,bool
enable_internet_security,bool
name,str
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
name,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
profile_url,str
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
id,str
location,str
fqdn,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
authorization_key,str
routing_weight,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
action,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
peering_location,str
bandwidth_in_mbps,int
service_provider_notes,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
etag,str
location,str
auto_start,bool
monitoring_interval_in_seconds,int
monitoring_status,str
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
vpn_gateway_scale_unit,int
__init__,"Callable[[_],None]"
match_variable,str
selector_match_operator,str
selector,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
location,str
destination_port,int
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
prefix_length,int
ip_prefix,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
url,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
id,str
location,str
address_prefix,str
__init__,"Callable[[_],None]"
neighbor,str
asn,int
up_down,str
state_or_prefixes_received,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
port,int
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
request_body_check,bool
max_request_body_size,int
max_request_body_size_in_kb,int
file_upload_limit_in_mb,int
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
shared_key,str
vlan_id,int
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
p2_svpn_server_configuration_properties_name,str
radius_server_address,str
radius_server_secret,str
p2_svpn_server_configuration_properties_etag,str
name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
express_route_gateway_bypass,bool
etag,str
__init__,"Callable[[_],None]"
protocol,str
source,str
destination,str
destination_port,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
express_route_gateway_bypass,bool
etag,str
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
device_vendor,str
device_model,str
link_speed_in_mbps,int
__init__,"Callable[[_],None]"
id,str
location,str
peering_location,str
bandwidth_in_gbps,int
resource_guid,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
protocol_matched,bool
source_matched,bool
source_port_matched,bool
destination_matched,bool
destination_port_matched,bool
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
id,str
type,str
service_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
vpn_gateway_scale_unit,int
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
min_capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_http2,bool
enable_fips,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
enable_tcp_reset,bool
idle_timeout_in_minutes,int
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
site_key,str
is_security_site,bool
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
location,str
disable_bgp_route_propagation,bool
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
authorization_key,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
avg_latency_in_ms,int
min_latency_in_ms,int
max_latency_in_ms,int
probes_sent,int
probes_failed,int
__init__,"Callable[[_],None]"
id,str
location,str
routing_weight,int
shared_key,str
enable_bgp,bool
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
description,str
service,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
id,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
id,str
location,str
disable_vpn_encryption,bool
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
allow_branch_to_branch_traffic,bool
allow_vnet_to_vnet_traffic,bool
__init__,"Callable[[_],None]"
output_blob_sas_url,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
allow_global_reach,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
network_security_group_id,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
workspace_id,str
workspace_region,str
workspace_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
idle_timeout_in_minutes,int
enable_floating_ip,bool
enable_tcp_reset,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
enable_tcp_reset,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
enable_tcp_reset,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
allow_hub_to_remote_vnet_transit,bool
allow_remote_vnet_to_use_hub_vnet_gateways,bool
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
min,int
max,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
action,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
peering_location,str
bandwidth_in_mbps,int
service_provider_notes,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
etag,str
location,str
auto_start,bool
monitoring_interval_in_seconds,int
monitoring_status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
location,str
prefix_length,int
ip_prefix,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
id,str
location,str
address_prefix,str
__init__,"Callable[[_],None]"
neighbor,str
asn,int
up_down,str
state_or_prefixes_received,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
port,int
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
request_body_check,bool
max_request_body_size,int
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
shared_key,str
vlan_id,int
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
express_route_gateway_bypass,bool
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
express_route_gateway_bypass,bool
etag,str
__init__,"Callable[[_],None]"
device_vendor,str
device_model,str
link_speed_in_mbps,int
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
protocol_matched,bool
source_matched,bool
source_port_matched,bool
destination_matched,bool
destination_port_matched,bool
__init__,"Callable[[_],None]"
location,str
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_http2,bool
enable_fips,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
enable_tcp_reset,bool
idle_timeout_in_minutes,int
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
site_key,str
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
disable_bgp_route_propagation,bool
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
protocol,str
source,str
destination,str
destination_port,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
authorization_key,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
avg_latency_in_ms,int
min_latency_in_ms,int
max_latency_in_ms,int
probes_sent,int
probes_failed,int
__init__,"Callable[[_],None]"
id,str
routing_weight,int
connection_bandwidth,int
shared_key,str
enable_bgp,bool
enable_rate_limiting,bool
enable_internet_security,bool
name,str
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
description,str
service,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
id,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
vpn_client_connections_count,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
id,str
location,str
disable_vpn_encryption,bool
security_provider_name,str
allow_branch_to_branch_traffic,bool
allow_vnet_to_vnet_traffic,bool
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
version,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
output_blob_sas_url,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
data,str
key_vault_secret_id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
custom_error_page_url,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
name,str
description,str
translated_address,str
translated_port,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
bandwidth_in_gbps,float
provisioning_state,str
gateway_manager_etag,str
allow_global_reach,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
network_security_group_id,str
applied_to,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
min,int
max,int
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
service_name,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
workspace_id,str
workspace_region,str
workspace_resource_id,str
traffic_analytics_interval,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
idle_timeout_in_minutes,int
enable_floating_ip,bool
enable_tcp_reset,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
enable_tcp_reset,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
enable_tcp_reset,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
allow_hub_to_remote_vnet_transit,bool
allow_remote_vnet_to_use_hub_vnet_gateways,bool
enable_internet_security,bool
name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
profile_url,str
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
id,str
location,str
fqdn,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
authorization_key,str
routing_weight,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
action,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
peering_location,str
bandwidth_in_mbps,int
service_provider_notes,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
etag,str
location,str
auto_start,bool
monitoring_interval_in_seconds,int
monitoring_status,str
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
header_name,str
header_value,str
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
vpn_gateway_scale_unit,int
__init__,"Callable[[_],None]"
match_variable,str
selector_match_operator,str
selector,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
location,str
destination_port,int
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
prefix_length,int
ip_prefix,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
url,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
id,str
location,str
address_prefix,str
__init__,"Callable[[_],None]"
neighbor,str
asn,int
up_down,str
state_or_prefixes_received,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
port,int
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
request_body_check,bool
max_request_body_size,int
max_request_body_size_in_kb,int
file_upload_limit_in_mb,int
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
shared_key,str
vlan_id,int
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
p2_svpn_server_configuration_properties_name,str
radius_server_address,str
radius_server_secret,str
p2_svpn_server_configuration_properties_etag,str
name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
express_route_gateway_bypass,bool
etag,str
__init__,"Callable[[_],None]"
protocol,str
source,str
destination,str
destination_port,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
express_route_gateway_bypass,bool
etag,str
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
device_vendor,str
device_model,str
link_speed_in_mbps,int
__init__,"Callable[[_],None]"
id,str
location,str
peering_location,str
bandwidth_in_gbps,int
resource_guid,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
protocol_matched,bool
source_matched,bool
source_port_matched,bool
destination_matched,bool
destination_port_matched,bool
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
id,str
type,str
service_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
vpn_gateway_scale_unit,int
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
min_capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_http2,bool
enable_fips,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
enable_tcp_reset,bool
idle_timeout_in_minutes,int
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
site_key,str
is_security_site,bool
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
key_vault_secret_id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
location,str
disable_bgp_route_propagation,bool
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
authorization_key,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
etag,str
location,str
auto_start,bool
monitoring_interval_in_seconds,int
monitoring_status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_http2,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
disable_bgp_route_propagation,bool
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
avg_latency_in_ms,int
min_latency_in_ms,int
max_latency_in_ms,int
probes_sent,int
probes_failed,int
__init__,"Callable[[_],None]"
id,str
location,str
routing_weight,int
shared_key,str
enable_bgp,bool
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
id,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
id,str
location,str
disable_vpn_encryption,bool
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
allow_branch_to_branch_traffic,bool
allow_vnet_to_vnet_traffic,bool
__init__,"Callable[[_],None]"
output_blob_sas_url,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
network_security_group_id,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
workspace_id,str
workspace_region,str
workspace_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
allow_hub_to_remote_vnet_transit,bool
allow_remote_vnet_to_use_hub_vnet_gateways,bool
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
min,int
max,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
action,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
peering_location,str
bandwidth_in_mbps,int
service_provider_notes,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
etag,str
location,str
auto_start,bool
monitoring_interval_in_seconds,int
monitoring_status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
id,str
location,str
address_prefix,str
__init__,"Callable[[_],None]"
neighbor,str
asn,int
up_down,str
state_or_prefixes_received,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
port,int
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
request_body_check,bool
max_request_body_size,int
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
shared_key,str
vlan_id,int
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
device_vendor,str
device_model,str
link_speed_in_mbps,int
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
protocol_matched,bool
source_matched,bool
source_port_matched,bool
destination_matched,bool
destination_port_matched,bool
__init__,"Callable[[_],None]"
location,str
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_http2,bool
enable_fips,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
site_key,str
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
disable_bgp_route_propagation,bool
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
protocol,str
source,str
destination,str
destination_port,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
authorization_key,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
routing_weight,int
shared_key,str
enable_bgp,bool
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
id,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
id,str
location,str
disable_vpn_encryption,bool
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
allow_branch_to_branch_traffic,bool
allow_vnet_to_vnet_traffic,bool
__init__,"Callable[[_],None]"
output_blob_sas_url,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
workspace_id,str
workspace_region,str
workspace_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
allow_hub_to_remote_vnet_transit,bool
allow_remote_vnet_to_use_hub_vnet_gateways,bool
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
min,int
max,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
peering_location,str
bandwidth_in_mbps,int
service_provider_notes,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
etag,str
location,str
auto_start,bool
monitoring_interval_in_seconds,int
monitoring_status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
id,str
priority,int
name,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
id,str
location,str
address_prefix,str
__init__,"Callable[[_],None]"
neighbor,str
asn,int
up_down,str
state_or_prefixes_received,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
port,int
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
request_body_check,bool
max_request_body_size,int
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
shared_key,str
vlan_id,int
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
device_vendor,str
device_model,str
link_speed_in_mbps,int
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_http2,bool
enable_fips,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
site_key,str
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
disable_bgp_route_propagation,bool
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
authorization_key,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
etag,str
location,str
auto_start,bool
monitoring_interval_in_seconds,int
monitoring_status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_http2,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
disable_bgp_route_propagation,bool
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
source_address_prefix,str
destination_address_prefix,str
id,str
description,str
source_port_range,str
destination_port_range,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
source_address_prefix,str
destination_address_prefix,str
id,str
description,str
source_port_range,str
destination_port_range,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
workspace_id,str
workspace_region,str
workspace_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
etag,str
location,str
auto_start,bool
monitoring_interval_in_seconds,int
monitoring_status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
request_body_check,bool
max_request_body_size,int
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_http2,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
disable_bgp_route_propagation,bool
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
source_address_prefix,str
destination_address_prefix,str
id,str
description,str
source_port_range,str
destination_port_range,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
etag,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
peering_location,str
bandwidth_in_mbps,int
service_provider_notes,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
etag,str
location,str
auto_start,bool
monitoring_interval_in_seconds,int
monitoring_status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
ip_tag_type,str
tag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
neighbor,str
asn,int
up_down,str
state_or_prefixes_received,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
request_body_check,bool
max_request_body_size,int
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
shared_key,str
vlan_id,int
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
auto_start,bool
monitoring_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_http2,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
disable_bgp_route_propagation,bool
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
authorization_key,str
name,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
source_address_prefix,str
destination_address_prefix,str
id,str
description,str
source_port_range,str
destination_port_range,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
bytes_in,int
bytes_out,int
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
address_prefix,str
next_hop_ip,str
as_path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
egress_bytes_transferred,int
ingress_bytes_transferred,int
enable_bgp,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
etag,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
service_supported_region,str
community_name,str
community_value,str
is_authorized_to_use,bool
service_group,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
storage_path,str
__init__,"Callable[[_],None]"
id,str
description,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
domain_name_label,str
fqdn,str
reverse_fqdn,str
__init__,"Callable[[_],None]"
id,str
authorization_key,str
provisioning_state,str
name,str
__init__,"Callable[[_],None]"
port,int
id,str
interval_in_seconds,int
number_of_probes,int
request_path,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
name,str
resource_id,str
__init__,"Callable[[_],None]"
time_grain,str
retention,str
blob_duration,str
__init__,"Callable[[_],None]"
state_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
public_cert_data,str
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
inner_error,str
__init__,"Callable[[_],None]"
enabled,bool
drain_timeout_in_sec,int
__init__,"Callable[[_],None]"
city_name,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
target_url,str
include_path,bool
include_query_string,bool
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
mac_address,str
primary,bool
enable_accelerated_networking,bool
enable_ip_forwarding,bool
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
name,str
id,str
stop_reason,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
resource_id,str
address,str
port,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
enable_regional_mdm_account,bool
fill_gap_with_zero,bool
metric_filter_pattern,str
is_internal,bool
source_mdm_account,str
source_mdm_namespace,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
target_resource_id,str
local_port,str
remote_port,str
local_ip_address,str
remote_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
linked_resource_type,str
link,str
name,str
__init__,"Callable[[_],None]"
target_resource_id,str
source_ip_address,str
destination_ip_address,str
target_nic_resource_id,str
__init__,"Callable[[_],None]"
radius_server_auth_certificate,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
primary,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
allow_classic_operations,bool
circuit_provisioning_state,str
service_key,str
service_provider_notes,str
provisioning_state,str
gateway_manager_etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
thumbprint,str
name,str
etag,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
id,str
address_prefix,str
next_hop_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
port,int
request_timeout,int
host_name,str
pick_host_name_from_backend_address,bool
affinity_cookie_name,str
probe_enabled,bool
path,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
reason_type,str
summary,str
detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
frontend_port_range_start,int
frontend_port_range_end,int
backend_port,int
id,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sa_life_time_seconds,int
sa_data_size_kilobytes,int
__init__,"Callable[[_],None]"
resource_id,str
port,int
__init__,"Callable[[_],None]"
id,str
frontend_port,int
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
target_resource_id,str
storage_id,str
enabled,bool
__init__,"Callable[[_],None]"
id,str
address_prefix,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
score,int
__init__,"Callable[[_],None]"
frontend_port,int
id,str
backend_port,int
idle_timeout_in_minutes,int
enable_floating_ip,bool
disable_outbound_snat,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
provider,str
azure_location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
legacy_mode,int
customer_asn,int
routing_registry_name,str
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_group_name,str
__init__,"Callable[[_],None]"
service,str
provisioning_state,str
__init__,"Callable[[_],None]"
aggregation_level,str
__init__,"Callable[[_],None]"
internal_dns_name_label,str
internal_fqdn,str
internal_domain_name_suffix,str
__init__,"Callable[[_],None]"
offer_name,str
value_in_mbps,int
__init__,"Callable[[_],None]"
name,str
source_port_range,str
destination_port_range,str
source_address_prefix,str
destination_address_prefix,str
priority,int
__init__,"Callable[[_],None]"
age,int
interface,str
ip_address,str
mac_address,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
target,str
bytes_to_capture_per_packet,int
total_bytes_per_session,int
time_limit_in_seconds,int
__init__,"Callable[[_],None]"
id,str
host_name,str
require_server_name_indication,bool
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
name,str
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
id,str
name,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
etag,str
__init__,"Callable[[_],None]"
asn,int
bgp_peering_address,str
peer_weight,int
__init__,"Callable[[_],None]"
code,str
target,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
target_resource_id,str
__init__,"Callable[[_],None]"
neighbor,str
v,int
as_property,int
up_down,str
state_pfx_rcd,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
days,int
enabled,bool
__init__,"Callable[[_],None]"
id,str
azure_asn,int
peer_asn,int
primary_peer_address_prefix,str
secondary_peer_address_prefix,str
primary_azure_port,str
secondary_azure_port,str
shared_key,str
vlan_id,int
provisioning_state,str
gateway_manager_etag,str
last_modified_by,str
name,str
__init__,"Callable[[_],None]"
id,str
location,str
service_name,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
enable_ddos_protection,bool
enable_vm_protection,bool
etag,str
__init__,"Callable[[_],None]"
storage_id,str
storage_path,str
file_path,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
fqdn,str
ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
rule_set_type,str
rule_set_version,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_name,str
__init__,"Callable[[_],None]"
id,str
host,str
path,str
interval,int
timeout,int
unhealthy_threshold,int
pick_host_name_from_backend_http_settings,bool
min_servers,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
primarybytes_in,int
primarybytes_out,int
secondarybytes_in,int
secondarybytes_out,int
__init__,"Callable[[_],None]"
country_name,str
__init__,"Callable[[_],None]"
id,str
allow_virtual_network_access,bool
allow_forwarded_traffic,bool
allow_gateway_transit,bool
use_remote_gateways,bool
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
port,int
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
rule_id,int
description,str
__init__,"Callable[[_],None]"
network,str
next_hop,str
loc_prf,str
weight,int
path,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
radius_server_address,str
radius_server_secret,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
allocated_outbound_ports,int
provisioning_state,str
name,str
etag,str
__init__,"Callable[[_],None]"
id,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
id,str
location,str
ip_address,str
idle_timeout_in_minutes,int
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
action_id,str
action_text,str
action_uri,str
action_uri_text,str
__init__,"Callable[[_],None]"
id,str
location,str
authorization_key,str
routing_weight,int
shared_key,str
enable_bgp,bool
use_policy_based_traffic_selectors,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
id,str
location,str
gateway_ip_address,str
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
vendor,str
device_family,str
firmware_version,str
__init__,"Callable[[_],None]"
service_provider_name,str
peering_location,str
bandwidth_in_mbps,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
private_ip_address,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
enable_bgp,bool
active_active,bool
resource_guid,str
etag,str
__init__,"Callable[[_],None]"
id,str
location,str
__init__,"Callable[[_],None]"
rule_group_name,str
description,str
__init__,"Callable[[_],None]"
target_resource_group_name,str
__init__,"Callable[[_],None]"
next_hop_ip_address,str
route_table_id,str
__init__,"Callable[[_],None]"
local_ip_address,str
remote_ip_address,str
local_port,str
remote_port,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
location,str
resource_guid,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
__init__,"Callable[[_],None]"
available,bool
__init__,"Callable[[_],None]"
id,str
name,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rule_set_type,str
rule_set_version,str
id,str
location,str
provisioning_state,str
__init__,"Callable[[_],None]"
country,str
state,str
city,str
__init__,"Callable[[_],None]"
id,str
data,str
password,str
public_cert_data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
location,str
provisioning_state,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_length,int
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
id,str
data,str
provisioning_state,str
name,str
etag,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
data_source,str
user_name,str
password,str
encrypt_connection,bool
additional_settings,str
trust_server_certificate,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
error_message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
target_database_name,str
make_source_db_read_only,bool
__init__,"Callable[[_],None]"
wait_type,str
wait_time_ms,float
wait_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
restore_database_name,str
backup_and_restore_folder,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
database_name,str
id,str
logical_name,str
physical_full_name,str
restore_full_name,str
size_mb,float
__init__,"Callable[[_],None]"
query_text,str
statements_in_batch,int
__init__,"Callable[[_],None]"
name,str
target_database_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
bytes_copied,int
documents_copied,int
elapsed_time,str
events_pending,int
events_replayed,int
total_bytes,int
total_documents,int
name,str
qualified_name,str
__init__,"Callable[[_],None]"
name,str
restore_database_name,str
__init__,"Callable[[_],None]"
average_document_size,int
data_size,int
document_count,int
name,str
qualified_name,str
supports_sharding,bool
__init__,"Callable[[_],None]"
uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
min_free_cpu,int
min_free_memory_mb,int
max_parallelism,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
path,str
user_name,str
password,str
__init__,"Callable[[_],None]"
source_database_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
target_database_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
family,str
size,str
tier,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name_available,bool
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
boost_rus,int
__init__,"Callable[[_],None]"
execution_count,int
cpu_time_ms,float
elapsed_time_ms,float
has_errors,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_database_name,str
project_name,str
project_location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
is_unique,bool
__init__,"Callable[[_],None]"
id,str
name,str
target_database_name,str
schema_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
can_delete,bool
target_rus,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
bytes_copied,int
documents_copied,int
elapsed_time,str
events_pending,int
events_replayed,int
total_bytes,int
total_documents,int
name,str
qualified_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
error_message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_unique,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
project_name,str
project_location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
average_document_size,int
data_size,int
document_count,int
name,str
qualified_name,str
__init__,"Callable[[_],None]"
source_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
report_url,str
__init__,"Callable[[_],None]"
code,str
count,int
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
average_document_size,int
data_size,int
document_count,int
name,str
qualified_name,str
database_name,str
is_capped,bool
is_system_collection,bool
is_view,bool
supports_sharding,bool
view_of,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable_schema_validation,bool
enable_data_integrity_validation,bool
enable_query_analysis_validation,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
server_name,str
port,int
user_name,str
password,str
database_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
bytes_copied,int
documents_copied,int
elapsed_time,str
events_pending,int
events_replayed,int
total_bytes,int
total_documents,int
name,str
qualified_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
error_message,str
__init__,"Callable[[_],None]"
object_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
extension,str
file_path,str
media_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
agent_version,str
status,str
vm_size,str
__init__,"Callable[[_],None]"
current_value,float
id,str
limit,float
unit,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
file_id,str
__init__,"Callable[[_],None]"
message,str
actionable_message,str
file_path,str
line_number,str
h_result,int
stack_trace,str
__init__,"Callable[[_],None]"
location,str
virtual_subnet_id,str
etag,str
kind,str
public_key,str
__init__,"Callable[[_],None]"
object_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
target_database_name,str
__init__,"Callable[[_],None]"
id,str
name,str
collation,str
server_name,str
fqdn,str
install_id,str
server_version,str
server_edition,str
server_level,str
server_default_data_path,str
server_default_log_path,str
server_default_backup_path,str
server_core_count,int
server_visible_online_core_count,int
server_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
bytes_copied,int
documents_copied,int
elapsed_time,str
events_pending,int
events_replayed,int
total_bytes,int
total_documents,int
name,str
qualified_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
localized_value,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
database_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
sas_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
connection_string,str
user_name,str
password,str
__init__,"Callable[[_],None]"
minimum,int
maximum,int
default,int
__init__,"Callable[[_],None]"
supports_sharding,bool
version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
immediate,bool
object_name,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
server_name,str
port,int
user_name,str
password,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
tier,str
family,str
size,str
capacity,int
__init__,"Callable[[_],None]"
collect_logins,bool
collect_agent_jobs,bool
collect_tde_certificate_info,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
user_name,str
password,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
logical_name,str
physical_full_name,str
restore_full_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_name,str
password,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_rus,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
language,str
text_angle,float
orientation,str
__init__,"Callable[[_],None]"
name,str
confidence,float
__init__,"Callable[[_],None]"
dominant_color_foreground,str
dominant_color_background,str
accent_color,str
is_bw_img,bool
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
bounding_box,str
text,str
__init__,"Callable[[_],None]"
age,int
__init__,"Callable[[_],None]"
name,str
confidence,float
hint,str
__init__,"Callable[[_],None]"
name,str
confidence,float
__init__,"Callable[[_],None]"
left,int
top,int
width,int
height,int
__init__,"Callable[[_],None]"
bounding_box,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
request_id,str
__init__,"Callable[[_],None]"
is_adult_content,bool
is_racy_content,bool
adult_score,float
racy_score,float
__init__,"Callable[[_],None]"
request_id,str
__init__,"Callable[[_],None]"
request_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
bounding_box,str
__init__,"Callable[[_],None]"
request_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
confidence,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
width,int
height,int
format,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
name,str
score,float
__init__,"Callable[[_],None]"
url,str
__init__,"Callable[[_],None]"
request_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
request_id,str
__init__,"Callable[[_],None]"
request_id,str
__init__,"Callable[[_],None]"
clip_art_type,float
line_drawing_type,float
__init__,"Callable[[_],None]"
name,str
type,str
name_available,bool
reason,str
message,str
__init__,"Callable[[_],None]"
relative_name,str
ttl,int
__init__,"Callable[[_],None]"
source_ip,str
latitude,float
longitude,float
__init__,"Callable[[_],None]"
id,str
name,str
type,str
__init__,"Callable[[_],None]"
code,str
name,str
__init__,"Callable[[_],None]"
min,int
max,int
__init__,"Callable[[_],None]"
id,str
name,str
type,str
location,str
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
id,str
name,str
type,str
__init__,"Callable[[_],None]"
id,str
name,str
type,str
location,str
__init__,"Callable[[_],None]"
resource_id,str
endpoint_id,int
__init__,"Callable[[_],None]"
endpoint_id,int
query_count,int
latency,float
__init__,"Callable[[_],None]"
id,str
name,str
type,str
__init__,"Callable[[_],None]"
id,str
name,str
type,str
__init__,"Callable[[_],None]"
port,int
path,str
interval_in_seconds,int
timeout_in_seconds,int
tolerated_number_of_failures,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
id,str
name,str
type,str
target_resource_id,str
target,str
weight,int
priority,int
endpoint_location,str
min_child_endpoints,int
__init__,"Callable[[_],None]"
name,str
storage_account_resource_id,str
blob_container,str
archive_name_format,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
max_size_in_megabytes,int
requires_duplicate_detection,bool
requires_session,bool
dead_lettering_on_message_expiration,bool
max_delivery_count,int
enable_batched_operations,bool
enable_partitioning,bool
enable_express,bool
forward_to,str
forward_dead_lettered_messages_to,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name_available,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
partner_namespace,str
alternate_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
enabled,bool
interval_in_seconds,int
size_limit_in_bytes,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
correlation_id,str
message_id,str
to,str
reply_to,str
label,str
session_id,str
reply_to_session_id,str
content_type,str
requires_preprocessing,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
requires_session,bool
dead_lettering_on_filter_evaluation_exceptions,bool
dead_lettering_on_message_expiration,bool
max_delivery_count,int
enable_batched_operations,bool
forward_to,str
forward_dead_lettered_messages_to,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message_retention_in_days,int
partition_count,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
max_size_in_megabytes,int
requires_duplicate_detection,bool
enable_batched_operations,bool
support_ordering,bool
enable_partitioning,bool
enable_express,bool
__init__,"Callable[[_],None]"
sql_expression,str
compatibility_level,int
requires_preprocessing,bool
__init__,"Callable[[_],None]"
sql_expression,str
compatibility_level,int
requires_preprocessing,bool
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
target_namespace,str
post_migration_name,str
__init__,"Callable[[_],None]"
sql_expression,str
requires_preprocessing,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_rservices_enabled,bool
backup_permissions_for_azure_backup_svc,bool
__init__,"Callable[[_],None]"
port,int
sql_auth_update_user_name,str
sql_auth_update_password,str
__init__,"Callable[[_],None]"
location,str
sql_image_offer,str
__init__,"Callable[[_],None]"
domain_fqdn,str
ou_path,str
cluster_bootstrap_account,str
cluster_operator_account,str
sql_service_account,str
file_share_witness_path,str
storage_account_url,str
storage_account_primary_key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ip_address,str
subnet_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disk_count,int
__init__,"Callable[[_],None]"
location,str
virtual_machine_resource_id,str
sql_virtual_machine_group_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable,bool
maintenance_window_starting_hour,int
maintenance_window_duration,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable,bool
enable_encryption,bool
retention_period,int
storage_account_url,str
storage_access_key,str
password,str
backup_system_dbs,bool
full_backup_start_time,int
full_backup_window_hours,int
log_backup_frequency,int
__init__,"Callable[[_],None]"
public_ip_address_resource_id,str
load_balancer_resource_id,str
probe_port,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
availability_group_name,str
create_default_availability_group_if_not_exist,bool
port,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
cluster_bootstrap_account_password,str
cluster_operator_account_password,str
sql_service_account_password,str
__init__,"Callable[[_],None]"
enable,bool
credential_name,str
azure_key_vault_url,str
service_principal_name,str
service_principal_secret,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
namespace_name,str
request_uri,str
entity_type,str
queue_name,str
topic_name,str
subscription_name,str
__init__,"Callable[[_],None]"
id,str
action,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tenant_id,str
subscription_id,str
resource_group,str
resource_provider,str
resource_uri,str
operation_name,str
status,str
authorization,str
claims,str
correlation_id,str
http_request,str
__init__,"Callable[[_],None]"
tenant_id,str
subscription_id,str
resource_group,str
resource_provider,str
resource_uri,str
operation_name,str
status,str
authorization,str
claims,str
correlation_id,str
http_request,str
__init__,"Callable[[_],None]"
tenant_id,str
subscription_id,str
resource_group,str
resource_provider,str
resource_uri,str
operation_name,str
status,str
authorization,str
claims,str
correlation_id,str
http_request,str
__init__,"Callable[[_],None]"
primary_thumbprint,str
secondary_thumbprint,str
__init__,"Callable[[_],None]"
media_type,str
size,int
digest,str
length,int
repository,str
url,str
tag,str
__init__,"Callable[[_],None]"
id,str
addr,str
host,str
method,str
useragent,str
__init__,"Callable[[_],None]"
authentication_type,str
cloud_to_device_message_count,float
connection_state,str
device_id,str
etag,str
last_activity_time,str
status,str
status_update_time,str
version,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
api,str
client_request_id,str
request_id,str
e_tag,str
content_type,str
content_length,int
blob_type,str
url,str
sequencer,str
__init__,"Callable[[_],None]"
device_id,str
module_id,str
hub_name,str
__init__,"Callable[[_],None]"
device_id,str
hub_name,str
__init__,"Callable[[_],None]"
fileurl,str
file_type,str
partition_id,str
size_in_bytes,int
event_count,int
first_sequence_number,int
last_sequence_number,int
__init__,"Callable[[_],None]"
device_id,str
hub_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
action,str
__init__,"Callable[[_],None]"
id,str
subject,str
event_type,str
data_version,str
topic,str
__init__,"Callable[[_],None]"
tenant_id,str
subscription_id,str
resource_group,str
resource_provider,str
resource_uri,str
operation_name,str
status,str
authorization,str
claims,str
correlation_id,str
http_request,str
__init__,"Callable[[_],None]"
tenant_id,str
subscription_id,str
resource_group,str
resource_provider,str
resource_uri,str
operation_name,str
status,str
authorization,str
claims,str
correlation_id,str
http_request,str
__init__,"Callable[[_],None]"
tenant_id,str
subscription_id,str
resource_group,str
resource_provider,str
resource_uri,str
operation_name,str
status,str
authorization,str
claims,str
correlation_id,str
http_request,str
__init__,"Callable[[_],None]"
namespace_name,str
request_uri,str
entity_type,str
queue_name,str
topic_name,str
subscription_name,str
__init__,"Callable[[_],None]"
device_id,str
module_id,str
hub_name,str
__init__,"Callable[[_],None]"
last_updated,str
__init__,"Callable[[_],None]"
addr,str
instance_id,str
__init__,"Callable[[_],None]"
tenant_id,str
subscription_id,str
resource_group,str
resource_provider,str
resource_uri,str
operation_name,str
status,str
authorization,str
claims,str
correlation_id,str
http_request,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
device_id,str
hub_name,str
__init__,"Callable[[_],None]"
tenant_id,str
subscription_id,str
resource_group,str
resource_provider,str
resource_uri,str
operation_name,str
status,str
authorization,str
claims,str
correlation_id,str
http_request,str
__init__,"Callable[[_],None]"
id,str
action,str
__init__,"Callable[[_],None]"
api,str
client_request_id,str
request_id,str
content_type,str
blob_type,str
url,str
sequencer,str
__init__,"Callable[[_],None]"
tenant_id,str
subscription_id,str
resource_group,str
resource_provider,str
resource_uri,str
operation_name,str
status,str
authorization,str
claims,str
correlation_id,str
http_request,str
__init__,"Callable[[_],None]"
version,float
__init__,"Callable[[_],None]"
sequence_number,str
__init__,"Callable[[_],None]"
device_id,str
module_id,str
hub_name,str
__init__,"Callable[[_],None]"
validation_response,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
count,int
low_key,str
high_key,str
__init__,"Callable[[_],None]"
thumbprint,str
thumbprint_secondary,str
__init__,"Callable[[_],None]"
max_percent_delta_unhealthy_nodes,int
max_percent_upgrade_domain_delta_unhealthy_nodes,int
max_percent_delta_unhealthy_applications,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
placement_constraints,str
__init__,"Callable[[_],None]"
id,str
name,str
type,str
code_version,str
support_expiry_utc,str
__init__,"Callable[[_],None]"
placement_constraints,str
__init__,"Callable[[_],None]"
location,str
placement_constraints,str
__init__,"Callable[[_],None]"
placement_constraints,str
service_type_name,str
__init__,"Callable[[_],None]"
location,str
type_version,str
minimum_nodes,int
maximum_nodes,int
remove_application_capacity,bool
__init__,"Callable[[_],None]"
cluster_code_version,str
__init__,"Callable[[_],None]"
max_percent_unhealthy_partitions_per_service,int
max_percent_unhealthy_replicas_per_partition,int
max_percent_unhealthy_services,int
__init__,"Callable[[_],None]"
tenant_id,str
cluster_application,str
client_application,str
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
type_version,str
minimum_nodes,int
maximum_nodes,int
remove_application_capacity,bool
type_name,str
__init__,"Callable[[_],None]"
placement_constraints,str
service_type_name,str
instance_count,int
__init__,"Callable[[_],None]"
count,int
__init__,"Callable[[_],None]"
name,str
client_connection_endpoint_port,int
http_gateway_endpoint_port,int
is_primary,bool
vm_instance_count,int
reverse_proxy_endpoint_port,int
__init__,"Callable[[_],None]"
location,str
management_endpoint,str
cluster_code_version,str
vm_image,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
health_check_wait_duration,str
health_check_stable_duration,str
health_check_retry_timeout,str
upgrade_timeout,str
upgrade_domain_timeout,str
__init__,"Callable[[_],None]"
upgrade_replica_set_check_timeout,str
health_check_wait_duration,str
health_check_stable_duration,str
health_check_retry_timeout,str
upgrade_timeout,str
upgrade_domain_timeout,str
force_restart,bool
__init__,"Callable[[_],None]"
location,str
placement_constraints,str
service_type_name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
key,str
value,str
__init__,"Callable[[_],None]"
is_admin,bool
certificate_thumbprint,str
__init__,"Callable[[_],None]"
is_admin,bool
certificate_common_name,str
certificate_issuer_thumbprint,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
placement_constraints,str
instance_count,int
__init__,"Callable[[_],None]"
max_percent_delta_unhealthy_services,int
__init__,"Callable[[_],None]"
code_version,str
support_expiry_utc,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
maximum_capacity,int
reservation_capacity,int
total_application_capacity,int
__init__,"Callable[[_],None]"
upgrade_replica_set_check_timeout,int
force_restart,bool
__init__,"Callable[[_],None]"
max_percent_unhealthy_nodes,int
max_percent_unhealthy_applications,int
__init__,"Callable[[_],None]"
storage_account_name,str
protected_account_key_name,str
blob_endpoint,str
queue_endpoint,str
table_endpoint,str
__init__,"Callable[[_],None]"
start_port,int
end_port,int
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
service_name,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
primary_default_load,int
secondary_default_load,int
default_load,int
__init__,"Callable[[_],None]"
location,str
app_package_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
placement_constraints,str
target_replica_set_size,int
min_replica_set_size,int
__init__,"Callable[[_],None]"
placement_constraints,str
service_type_name,str
has_persisted_state,bool
target_replica_set_size,int
min_replica_set_size,int
__init__,"Callable[[_],None]"
consider_warning_as_error,bool
max_percent_unhealthy_deployed_applications,int
__init__,"Callable[[_],None]"
name,str
origin,str
next_link,str
__init__,"Callable[[_],None]"
name,str
min_instance_count,int
target_instance_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
blueprint,str
kind,str
__init__,"Callable[[_],None]"
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
location,str
destination_port,int
public_port,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
uri,str
parameters,str
__init__,"Callable[[_],None]"
name,str
is_default,bool
container,str
file_system,str
key,str
__init__,"Callable[[_],None]"
id,str
subnet,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
application_type,str
additional_properties,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
vm_size,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
disks_per_node,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
persist_on_success,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
username,str
password,str
__init__,"Callable[[_],None]"
name,str
protocol,str
location,str
port,int
__init__,"Callable[[_],None]"
unit,str
current_value,int
limit,int
__init__,"Callable[[_],None]"
location,str
etag,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
cluster_monitoring_enabled,bool
workspace_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
region_name,str
cores_used,int
cores_available,int
__init__,"Callable[[_],None]"
name,str
uri,str
parameters,str
application_name,str
__init__,"Callable[[_],None]"
friendly_name,str
display_name,str
is_default,str
__init__,"Callable[[_],None]"
cluster_version,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
uri,str
parameters,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
__init__,"Callable[[_],None]"
filter_mode,str
__init__,"Callable[[_],None]"
location,str
destination_port,int
public_port,int
__init__,"Callable[[_],None]"
workspace_id,str
primary_key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
uri,str
parameters,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate_data,str
__init__,"Callable[[_],None]"
domain,str
organizational_unit_dn,str
domain_username,str
domain_user_password,str
__init__,"Callable[[_],None]"
cores_used,int
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
workspace_id,str
primary_key,str
__init__,"Callable[[_],None]"
cluster_version,str
created_date,str
cluster_state,str
__init__,"Callable[[_],None]"
target_instance_count,int
__init__,"Callable[[_],None]"
face_id,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
face_id,str
person_id,str
person_group_id,str
large_person_group_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
confidence,float
__init__,"Callable[[_],None]"
moustache,float
beard,float
sideburns,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
x,float
y,float
__init__,"Callable[[_],None]"
person_group_id,str
large_person_group_id,str
max_num_of_candidates_returned,int
confidence_threshold,float
__init__,"Callable[[_],None]"
eye_makeup,bool
lip_makeup,bool
__init__,"Callable[[_],None]"
large_person_group_id,str
name,str
user_data,str
__init__,"Callable[[_],None]"
width,int
height,int
left,int
top,int
__init__,"Callable[[_],None]"
name,str
user_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
user_data,str
__init__,"Callable[[_],None]"
bald,float
invisible,bool
__init__,"Callable[[_],None]"
value,float
__init__,"Callable[[_],None]"
persisted_face_id,str
user_data,str
__init__,"Callable[[_],None]"
person_group_id,str
name,str
user_data,str
__init__,"Callable[[_],None]"
confidence,float
face_id,str
persisted_face_id,str
__init__,"Callable[[_],None]"
value,float
__init__,"Callable[[_],None]"
face_list_id,str
name,str
user_data,str
__init__,"Callable[[_],None]"
roll,float
yaw,float
pitch,float
__init__,"Callable[[_],None]"
forehead_occluded,bool
eye_occluded,bool
mouth_occluded,bool
__init__,"Callable[[_],None]"
anger,float
contempt,float
disgust,float
fear,float
happiness,float
neutral,float
sadness,float
surprise,float
__init__,"Callable[[_],None]"
url,str
__init__,"Callable[[_],None]"
face_id1,str
face_id2,str
__init__,"Callable[[_],None]"
face_id,str
__init__,"Callable[[_],None]"
confidence,float
__init__,"Callable[[_],None]"
age,float
smile,float
__init__,"Callable[[_],None]"
face_id,str
face_list_id,str
large_face_list_id,str
max_num_of_candidates_returned,int
__init__,"Callable[[_],None]"
value,float
__init__,"Callable[[_],None]"
is_identical,bool
confidence,float
__init__,"Callable[[_],None]"
large_face_list_id,str
name,str
user_data,str
__init__,"Callable[[_],None]"
person_id,str
name,str
user_data,str
__init__,"Callable[[_],None]"
person_id,str
confidence,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
disk_size_gb,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
baidu_api_key,str
baidu_end_point,str
baidu_secret_key,str
__init__,"Callable[[_],None]"
gcm_endpoint,str
google_api_key,str
__init__,"Callable[[_],None]"
name,str
location,str
is_availiable,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
namespace_resource_name,str
provisioning_state,str
region,str
status,str
service_bus_endpoint,str
subscription_id,str
scale_unit,str
enabled,bool
critical,bool
data_center,str
__init__,"Callable[[_],None]"
package_sid,str
secret_key,str
windows_live_endpoint,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
client_id,str
client_secret,str
auth_token_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tier,str
size,str
family,str
capacity,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
location,str
notification_hub_resource_name,str
registration_ttl,str
__init__,"Callable[[_],None]"
apns_certificate,str
certificate_key,str
endpoint,str
thumbprint,str
key_id,str
app_name,str
app_id,str
token,str
__init__,"Callable[[_],None]"
location,str
notification_hub_create_or_update_parameters_name,str
registration_ttl,str
__init__,"Callable[[_],None]"
location,str
is_availiable,bool
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
policy_key,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
primary_connection_string,str
secondary_connection_string,str
primary_key,str
secondary_key,str
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
mpns_certificate,str
certificate_key,str
thumbprint,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
namespace_create_or_update_parameters_name,str
provisioning_state,str
region,str
status,str
service_bus_endpoint,str
subscription_id,str
scale_unit,str
enabled,bool
critical,bool
data_center,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
need_mdn,bool
sign_mdn,bool
send_mdn_asynchronously,bool
sign_outbound_mdn_if_optional,bool
send_inbound_mdn_to_message_box,bool
receipt_delivery_url,str
disposition_notification_to,str
mdn_text,str
__init__,"Callable[[_],None]"
need_technical_acknowledgement,bool
batch_technical_acknowledgements,bool
need_functional_acknowledgement,bool
batch_functional_acknowledgements,bool
need_loop_for_valid_messages,bool
send_synchronous_acknowledgement,bool
acknowledgement_control_number_lower_bound,int
acknowledgement_control_number_upper_bound,int
rollover_acknowledgement_control_number,bool
acknowledgement_control_number_prefix,str
acknowledgement_control_number_suffix,str
__init__,"Callable[[_],None]"
validate_character_set,bool
check_duplicate_interchange_control_number,bool
interchange_control_number_validity_days,int
check_duplicate_group_control_number,bool
check_duplicate_transaction_set_control_number,bool
validate_edi_types,bool
validate_xsd_types,bool
allow_leading_and_trailing_spaces_and_zeroes,bool
trim_leading_and_trailing_spaces_and_zeroes,bool
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
client_tracking_id,str
__init__,"Callable[[_],None]"
location,str
target_namespace,str
document_name,str
file_name,str
content,str
content_type,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
data_element_separator,int
component_separator,int
replace_separators_in_payload,bool
replace_character,int
segment_terminator,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ref,str
__init__,"Callable[[_],None]"
item_index,int
scope_name,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
target_schema_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
override_message_properties,bool
encrypt_message,bool
sign_message,bool
compress_message,bool
check_duplicate_message,bool
interchange_duplicates_validity_days,int
check_certificate_revocation_list_on_send,bool
check_certificate_revocation_list_on_receive,bool
__init__,"Callable[[_],None]"
content_type,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
batch_group_name,str
__init__,"Callable[[_],None]"
mask_security_info,bool
convert_implied_decimal,bool
preserve_interchange,bool
suspend_interchange_on_error,bool
create_empty_xml_tags_for_trailing_separators,bool
use_dot_as_decimal_separator,bool
__init__,"Callable[[_],None]"
skip_token,str
__init__,"Callable[[_],None]"
authorization_qualifier,str
security_qualifier,str
authorization_value,str
password_value,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
message_id,str
schema_version,str
schema_name,str
sender_application_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ignore_certificate_name_mismatch,bool
support_http_status_code_continue,bool
keep_http_connection_alive,bool
unfold_http_headers,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message_id,str
message_version,str
message_release,str
schema_name,str
sender_application_id,str
sender_application_qualifier,str
association_assigned_code,str
__init__,"Callable[[_],None]"
message_id,str
message_version,str
message_release,str
message_association_assigned_code,str
target_namespace,str
functional_group_id,str
sender_application_qualifier,str
sender_application_id,str
receiver_application_qualifier,str
receiver_application_id,str
controlling_agency_code,str
group_header_message_version,str
group_header_message_release,str
association_assigned_code,str
application_password,str
__init__,"Callable[[_],None]"
location,str
content,str
content_type,str
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
message_id,str
validate_edi_types,bool
validate_xsd_types,bool
allow_leading_and_trailing_spaces_and_zeroes,bool
validate_character_set,bool
trim_leading_and_trailing_spaces_and_zeroes,bool
__init__,"Callable[[_],None]"
location,str
code,str
iteration_count,int
__init__,"Callable[[_],None]"
message_id,str
enforce_character_set,bool
validate_edi_types,bool
validate_xsd_types,bool
allow_leading_and_trailing_spaces_and_zeroes,bool
trim_leading_and_trailing_spaces_and_zeroes,bool
__init__,"Callable[[_],None]"
assembly_name,str
content_type,str
assembly_version,str
assembly_culture,str
assembly_public_key_token,str
__init__,"Callable[[_],None]"
client_tracking_id,str
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ignore_certificate_name_mismatch,bool
support_http_status_code_continue,bool
keep_http_connection_alive,bool
unfold_http_headers,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
interval,int
start_time,str
end_time,str
time_zone,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
validate_character_set,bool
check_duplicate_interchange_control_number,bool
interchange_control_number_validity_days,int
check_duplicate_group_control_number,bool
check_duplicate_transaction_set_control_number,bool
validate_edi_types,bool
validate_xsd_types,bool
allow_leading_and_trailing_spaces_and_zeroes,bool
trim_leading_and_trailing_spaces_and_zeroes,bool
__init__,"Callable[[_],None]"
message_count,int
batch_size,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
title,str
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
source_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
mask_security_info,bool
preserve_interchange,bool
suspend_interchange_on_error,bool
create_empty_xml_tags_for_trailing_separators,bool
use_dot_as_decimal_separator,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
path,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
__init__,"Callable[[_],None]"
override_group_signing_certificate,bool
enable_nrr_for_inbound_encoded_messages,bool
enable_nrr_for_inbound_decoded_messages,bool
enable_nrr_for_outbound_mdn,bool
enable_nrr_for_outbound_encoded_messages,bool
enable_nrr_for_outbound_decoded_messages,bool
enable_nrr_for_inbound_mdn,bool
signing_certificate_name,str
encryption_certificate_name,str
sha2_algorithm_format,str
__init__,"Callable[[_],None]"
location,str
public_certificate,str
__init__,"Callable[[_],None]"
uri,str
content_version,str
content_size,int
__init__,"Callable[[_],None]"
message_id,str
__init__,"Callable[[_],None]"
client_tracking_id,str
action_tracking_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_namespace,str
protocol_version,str
message_id,str
responsible_agency_code,str
header_version,str
sender_application_id,str
receiver_application_id,str
functional_identifier_code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
apply_delimiter_string_advice,bool
create_grouping_segments,bool
enable_default_group_headers,bool
interchange_control_number_lower_bound,int
interchange_control_number_upper_bound,int
rollover_interchange_control_number,bool
group_control_number_lower_bound,int
group_control_number_upper_bound,int
rollover_group_control_number,bool
overwrite_existing_transaction_set_control_number,bool
transaction_set_control_number_lower_bound,int
transaction_set_control_number_upper_bound,int
rollover_transaction_set_control_number,bool
is_test_interchange,bool
group_association_assigned_code,str
communication_agreement_id,str
recipient_reference_password_value,str
recipient_reference_password_qualifier,str
application_reference_id,str
processing_priority_code,str
interchange_control_number_prefix,str
interchange_control_number_suffix,str
sender_reverse_routing_address,str
receiver_reverse_routing_address,str
functional_group_id,str
group_controlling_agency_code,str
group_message_version,str
group_message_release,str
group_control_number_prefix,str
group_control_number_suffix,str
group_application_receiver_qualifier,str
group_application_receiver_id,str
group_application_sender_qualifier,str
group_application_sender_id,str
group_application_password,str
transaction_set_control_number_prefix,str
transaction_set_control_number_suffix,str
sender_internal_identification,str
sender_internal_sub_identification,str
receiver_internal_identification,str
receiver_internal_sub_identification,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
control_standards_id,int
use_control_standards_id_as_repetition_character,bool
sender_application_id,str
receiver_application_id,str
control_version_number,str
interchange_control_number_lower_bound,int
interchange_control_number_upper_bound,int
rollover_interchange_control_number,bool
enable_default_group_headers,bool
group_control_number_lower_bound,int
group_control_number_upper_bound,int
rollover_group_control_number,bool
group_header_agency_code,str
group_header_version,str
transaction_set_control_number_lower_bound,int
transaction_set_control_number_upper_bound,int
rollover_transaction_set_control_number,bool
overwrite_existing_transaction_set_control_number,bool
functional_group_id,str
transaction_set_control_number_prefix,str
transaction_set_control_number_suffix,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
suspend_duplicate_message,bool
resend_if_mdn_not_received,bool
__init__,"Callable[[_],None]"
key_name,str
key_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
need_technical_acknowledgement,bool
batch_technical_acknowledgements,bool
need_functional_acknowledgement,bool
batch_functional_acknowledgements,bool
need_implementation_acknowledgement,bool
batch_implementation_acknowledgements,bool
need_loop_for_valid_messages,bool
send_synchronous_acknowledgement,bool
acknowledgement_control_number_lower_bound,int
acknowledgement_control_number_upper_bound,int
rollover_acknowledgement_control_number,bool
functional_acknowledgement_version,str
implementation_acknowledgement_version,str
acknowledgement_control_number_prefix,str
acknowledgement_control_number_suffix,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kid,str
__init__,"Callable[[_],None]"
qualifier,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
client_request_id,str
service_request_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
api_version,str
sp,str
sv,str
sig,str
se,str
__init__,"Callable[[_],None]"
host_partner,str
guest_partner,str
location,str
__init__,"Callable[[_],None]"
enabled,bool
created,int
updated,int
__init__,"Callable[[_],None]"
algorithm,str
value,str
__init__,"Callable[[_],None]"
data_element_separator,int
component_separator,int
segment_terminator,int
replace_character,int
replace_separators_in_payload,bool
protocol_version,str
message_id,str
target_namespace,str
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
protocol_version,int
data_element_separator,int
component_separator,int
segment_terminator,int
release_indicator,int
repetition_separator,int
service_code_list_directory_version,str
character_encoding,str
__init__,"Callable[[_],None]"
message_content_type,str
transmit_file_name_in_mime_header,bool
file_name_template,str
suspend_message_on_file_name_generation_error,bool
autogenerate_file_name,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
iteration_count,int
__init__,"Callable[[_],None]"
occurrence,int
__init__,"Callable[[_],None]"
data_element_separator,int
component_separator,int
segment_terminator,int
repetition_separator,int
release_indicator,int
message_id,str
message_version,str
message_release,str
message_association_assigned_code,str
target_namespace,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rating_value,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
caption,str
data_source_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
left,float
top,float
right,float
bottom,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rating_value,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
title,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
pivot,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
x,float
y,float
__init__,"Callable[[_],None]"
rating_value,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
top,float
bottom,float
left,float
right,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
rating_value,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
image_insights_token,str
url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
site,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
kind,str
worker_tier_name,str
admin_site_name,str
per_site_scaling,bool
is_spot,bool
reserved,bool
is_xenon,bool
hyper_v,bool
target_worker_count,int
target_worker_size_id,int
__init__,"Callable[[_],None]"
kind,str
recommendation_name,str
display_name,str
message,str
recommendation_id,str
description,str
action_name,str
is_dynamic,bool
extension_name,str
blade_name,str
forward_link,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
sku,str
product,str
vendor,str
marketplace_publisher,str
marketplace_offer,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
distinguished_name,str
validity_in_years,int
key_size,int
auto_renew,bool
csr,str
__init__,"Callable[[_],None]"
message,str
source,str
priority,float
__init__,"Callable[[_],None]"
validation,str
validation_key,str
decryption,str
decryption_key,str
__init__,"Callable[[_],None]"
sas_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
column_name,str
data_type,str
column_type,str
__init__,"Callable[[_],None]"
password,str
kind,str
pfx_blob,bytearray
key_vault_id,str
key_vault_secret_name,str
server_farm_id,str
__init__,"Callable[[_],None]"
storage_account_url,str
kind,str
backup_name,str
enabled,bool
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
keywords,str
max_domain_recommendations,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,float
display_name,str
order,float
description,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
storage_account_url,str
overwrite,bool
kind,str
blob_name,str
site_name,str
ignore_conflicting_host_names,bool
ignore_databases,bool
app_service_plan,str
adjust_connection_strings,bool
hosting_environment,str
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
id,str
subnet,str
__init__,"Callable[[_],None]"
kind,str
entity_name,str
entity_connection_string,str
resource_type,str
resource_connection_string,str
hostname,str
port,int
biztalk_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
account_name,str
share_name,str
access_key,str
mount_path,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
kind,str
key,str
trigger_url,str
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
email_id,str
__init__,"Callable[[_],None]"
kind,str
number_of_workers,int
net_framework_version,str
php_version,str
python_version,str
node_version,str
linux_fx_version,str
windows_fx_version,str
request_tracing_enabled,bool
remote_debugging_enabled,bool
remote_debugging_version,str
http_logging_enabled,bool
logs_directory_size_limit,int
detailed_error_logging_enabled,bool
publishing_username,str
document_root,str
use32_bit_worker_process,bool
web_sockets_enabled,bool
always_on,bool
java_version,str
java_container,str
java_container_version,str
app_command_line,str
auto_heal_enabled,bool
tracing_options,str
vnet_name,str
auto_swap_slot_name,str
local_my_sql_enabled,bool
managed_service_identity_id,int
x_managed_service_identity_id,int
http20_enabled,bool
reserved_instance_count,int
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
supports_instance_level_aggregation,bool
enable_regional_mdm_account,bool
source_mdm_account,str
source_mdm_namespace,str
metric_filter_pattern,str
fill_gap_with_zero,bool
is_internal,bool
category,str
__init__,"Callable[[_],None]"
time_grain,str
blob_duration,str
__init__,"Callable[[_],None]"
kind,str
deleted_site_id,str
recover_configuration,bool
snapshot_time,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
enabled,bool
runtime_version,str
token_store_enabled,bool
token_refresh_extension_hours,float
client_id,str
client_secret,str
issuer,str
validate_issuer,bool
google_client_id,str
google_client_secret,str
facebook_app_id,str
facebook_app_secret,str
twitter_consumer_key,str
twitter_consumer_secret,str
microsoft_account_client_id,str
microsoft_account_client_secret,str
__init__,"Callable[[_],None]"
kind,str
worker_tier_name,str
admin_site_name,str
per_site_scaling,bool
is_spot,bool
reserved,bool
is_xenon,bool
hyper_v,bool
target_worker_count,int
target_worker_size_id,int
__init__,"Callable[[_],None]"
source_web_app_id,str
correlation_id,str
overwrite,bool
clone_custom_host_names,bool
clone_source_control,bool
hosting_environment,str
configure_load_balancing,bool
traffic_manager_profile_id,str
traffic_manager_profile_name,str
__init__,"Callable[[_],None]"
kind,str
identifier_id,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
is_push_enabled,bool
kind,str
tag_whitelist_json,str
tags_requiring_auth,str
dynamic_tags_json,str
__init__,"Callable[[_],None]"
kind,str
web_job_id,str
web_job_name,str
duration,str
output_url,str
error_url,str
url,str
job_name,str
trigger,str
__init__,"Callable[[_],None]"
kind,str
category,str
signal_availability,bool
__init__,"Callable[[_],None]"
publishing_user_name,str
kind,str
publishing_password,str
publishing_password_hash,str
publishing_password_hash_salt,str
scm_uri,str
__init__,"Callable[[_],None]"
kind,str
package_uri,str
connection_string,str
db_type,str
set_parameters_xml_file_uri,str
skip_app_data,bool
app_offline,bool
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
kind,str
enabled,bool
server_farm_id,str
reserved,bool
is_xenon,bool
hyper_v,bool
scm_site_also_stopped,bool
client_affinity_enabled,bool
client_cert_enabled,bool
host_names_disabled,bool
container_size,int
daily_memory_time_quota,int
https_only,bool
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
ownership_id,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
app_service_environment_patch_resource_name,str
location,str
kind,str
vnet_name,str
vnet_resource_group_name,str
vnet_subnet_name,str
multi_size,str
multi_role_count,int
ipssl_address_count,int
dns_suffix,str
front_end_scale_factor,int
api_management_account_id,str
suspended,bool
dynamic_cache_enabled,bool
has_linux_workers,bool
ssl_cert_key_vault_id,str
ssl_cert_key_vault_secret_name,str
__init__,"Callable[[_],None]"
kind,str
enabled,bool
server_farm_id,str
reserved,bool
is_xenon,bool
hyper_v,bool
scm_site_also_stopped,bool
client_affinity_enabled,bool
client_cert_enabled,bool
host_names_disabled,bool
container_size,int
daily_memory_time_quota,int
https_only,bool
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
time_taken,str
count,int
time_interval,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
status,int
sub_status,int
win32_status,int
count,int
time_interval,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
issue_detected,bool
__init__,"Callable[[_],None]"
name,str
connection_string_name,str
connection_string,str
__init__,"Callable[[_],None]"
kind,str
key_size,int
csr,str
is_private_key_external,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_resource_group,str
__init__,"Callable[[_],None]"
kind,str
key_vault_id,str
key_vault_secret_name,str
__init__,"Callable[[_],None]"
kind,str
function_app_id,str
script_root_path_href,str
script_href,str
config_href,str
secrets_file_href,str
href,str
test_data,str
__init__,"Callable[[_],None]"
html,str
__init__,"Callable[[_],None]"
name,str
location,str
__init__,"Callable[[_],None]"
ip_address,str
subnet_mask,str
action,str
priority,int
name,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
blob,bytearray
__init__,"Callable[[_],None]"
name,str
available,bool
__init__,"Callable[[_],None]"
instance_name,str
value,float
__init__,"Callable[[_],None]"
display_version,str
runtime_version,str
is_default,bool
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
location,str
kind,str
sku,str
product,str
vendor,str
marketplace_publisher,str
marketplace_offer,str
__init__,"Callable[[_],None]"
kind,str
vnet_resource_id,str
cert_blob,bytearray
dns_servers,str
__init__,"Callable[[_],None]"
sas_url,str
retention_in_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
meter_id,str
billing_location,str
short_name,str
friendly_name,str
resource_type,str
os_type,str
__init__,"Callable[[_],None]"
service_ip_address,str
internal_ip_address,str
__init__,"Callable[[_],None]"
location,str
password,str
kind,str
pfx_blob,bytearray
key_vault_id,str
key_vault_secret_name,str
server_farm_id,str
__init__,"Callable[[_],None]"
kind,str
href,str
process,str
start_address,str
current_priority,int
priority_level,str
base_priority,int
total_processor_time,str
user_processor_time,str
priviledged_processor_time,str
state,str
wait_reason,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
max_percentage_cpu,float
max_memory_in_mb,int
max_disk_size_in_mb,int
__init__,"Callable[[_],None]"
location,str
app_service_environment_resource_name,str
app_service_environment_resource_location,str
kind,str
vnet_name,str
vnet_resource_group_name,str
vnet_subnet_name,str
multi_size,str
multi_role_count,int
ipssl_address_count,int
dns_suffix,str
front_end_scale_factor,int
api_management_account_id,str
suspended,bool
dynamic_cache_enabled,bool
has_linux_workers,bool
ssl_cert_key_vault_id,str
ssl_cert_key_vault_secret_name,str
__init__,"Callable[[_],None]"
virtual_ip,str
internal_http_port,int
internal_https_port,int
in_use,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
deployment_name,str
href,str
minidump,str
is_profile_running,bool
is_iis_profile_running,bool
iis_profile_timeout_in_seconds,float
parent,str
file_name,str
command_line,str
user_name,str
handle_count,int
module_count,int
thread_count,int
total_cpu_time,str
user_cpu_time,str
privileged_cpu_time,str
working_set,int
peak_working_set,int
private_memory,int
virtual_memory,int
peak_virtual_memory,int
paged_system_memory,int
non_paged_system_memory,int
paged_memory,int
peak_paged_memory,int
is_scm_site,bool
is_webjob,bool
description,str
__init__,"Callable[[_],None]"
azurefiles_connection_string,str
azurefiles_share,str
kind,str
switch_site_after_migration,bool
block_write_access_to_site,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
email,str
name_first,str
name_last,str
phone,str
fax,str
job_title,str
name_middle,str
organization,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
extension,str
script_processor,str
arguments,str
__init__,"Callable[[_],None]"
kind,str
subnet_resource_id,str
swift_supported,bool
__init__,"Callable[[_],None]"
min_process_execution_time,str
__init__,"Callable[[_],None]"
action_host_name,str
reroute_percentage,float
change_step,float
change_interval_in_minutes,int
min_reroute_percentage,float
max_reroute_percentage,float
change_decision_callback_url,str
name,str
__init__,"Callable[[_],None]"
kind,str
repo_url,str
branch,str
is_manual_integration,bool
deployment_rollback_enabled,bool
is_mercurial,bool
__init__,"Callable[[_],None]"
url,str
__init__,"Callable[[_],None]"
source,str
__init__,"Callable[[_],None]"
name,str
location,str
server_farm_id,str
sku_name,str
need_linux_workers,bool
is_spot,bool
capacity,int
hosting_environment,str
is_xenon,bool
__init__,"Callable[[_],None]"
name,str
time_grain,str
__init__,"Callable[[_],None]"
count,int
time_interval,str
__init__,"Callable[[_],None]"
worker_size_id,int
worker_size,str
worker_count,int
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
name,str
location,str
vnet_name,str
vnet_resource_group_name,str
vnet_subnet_name,str
multi_size,str
multi_role_count,int
ipssl_address_count,int
dns_suffix,str
front_end_scale_factor,int
api_management_account_id,str
suspended,bool
dynamic_cache_enabled,bool
has_linux_workers,bool
ssl_cert_key_vault_id,str
ssl_cert_key_vault_secret_name,str
__init__,"Callable[[_],None]"
virtual_path,str
physical_path,str
preload_enabled,bool
__init__,"Callable[[_],None]"
name,str
key,int
resource_id,str
__init__,"Callable[[_],None]"
sas_url,str
retention_in_days,int
enabled,bool
__init__,"Callable[[_],None]"
time_grain,str
retention,str
__init__,"Callable[[_],None]"
agreement_key,str
title,str
content,str
url,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
location,str
kind,str
key_vault_id,str
key_vault_secret_name,str
__init__,"Callable[[_],None]"
kind,str
failed,bool
__init__,"Callable[[_],None]"
name,str
virtual_ip,str
thumbprint,str
to_update,bool
__init__,"Callable[[_],None]"
name,str
diagnosics_output,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
light_theme,bool
locale,str
__init__,"Callable[[_],None]"
name,str
connection_string,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
address1,str
city,str
country,str
postal_code,str
state,str
address2,str
__init__,"Callable[[_],None]"
kind,str
token,str
token_secret,str
refresh_token,str
__init__,"Callable[[_],None]"
frequency_interval,int
keep_at_least_one_backup,bool
retention_period_in_days,int
__init__,"Callable[[_],None]"
name,str
is_fqdn,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
table_name,str
__init__,"Callable[[_],None]"
exe,str
parameters,str
__init__,"Callable[[_],None]"
location,str
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
privacy,bool
auto_renew,bool
dns_zone_id,str
auth_code,str
__init__,"Callable[[_],None]"
overwrite,bool
kind,str
snapshot_time,str
recover_configuration,bool
ignore_conflicting_host_names,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
unit,str
time_grain,str
__init__,"Callable[[_],None]"
name,str
available_capacity,int
total_capacity,int
unit,str
worker_size_id,int
exclude_from_capacity_allocation,bool
is_applicable_for_all_compute_modes,bool
site_mode,str
is_linux,bool
__init__,"Callable[[_],None]"
kind,str
base_address,str
file_name,str
href,str
file_path,str
module_memory_size,int
file_version,str
file_description,str
product,str
product_version,str
is_debug,bool
language,str
__init__,"Callable[[_],None]"
kind,str
privacy,bool
__init__,"Callable[[_],None]"
name,str
key,int
__init__,"Callable[[_],None]"
kind,str
history_url,str
scheduler_logs_url,str
run_command,str
url,str
extra_info_url,str
error,str
using_sdk,bool
__init__,"Callable[[_],None]"
connection_string,str
kind,str
__init__,"Callable[[_],None]"
kind,str
recommendation_id,str
resource_id,str
rule_name,str
display_name,str
message,str
action_name,str
enabled,int
score,float
is_dynamic,bool
extension_name,str
blade_name,str
forward_link,str
__init__,"Callable[[_],None]"
name_available,bool
message,str
__init__,"Callable[[_],None]"
kind,str
site_name,str
domain_id,str
azure_resource_name,str
thumbprint,str
__init__,"Callable[[_],None]"
include_privacy,bool
for_transfer,bool
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
title,str
description,str
__init__,"Callable[[_],None]"
location,str
kind,str
__init__,"Callable[[_],None]"
name,str
azure_resource_name,str
__init__,"Callable[[_],None]"
name,str
display,str
dependency,str
__init__,"Callable[[_],None]"
kind,str
extension_id,str
title,str
summary,str
description,str
version,str
extension_url,str
project_url,str
icon_url,str
license_url,str
feed_url,str
installer_command_line_params,str
download_count,int
local_is_latest_version,bool
local_path,str
provisioning_state,str
comment,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
key_vault_id,str
key_vault_secret_name,str
__init__,"Callable[[_],None]"
description,str
order,int
remote_subnet,str
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
kind,str
sku,str
product,str
vendor,str
promo_code_required,bool
quota,int
privacy_policy_url,str
legal_terms_url,str
marketplace_publisher,str
marketplace_offer,str
__init__,"Callable[[_],None]"
id,str
name,str
geo_master_operation_id,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
status,str
__init__,"Callable[[_],None]"
name,str
tier,str
size,str
family,str
__init__,"Callable[[_],None]"
private_bytes_in_kb,int
__init__,"Callable[[_],None]"
target_slot,str
preserve_vnet,bool
__init__,"Callable[[_],None]"
number_of_workers,int
net_framework_version,str
php_version,str
python_version,str
node_version,str
linux_fx_version,str
windows_fx_version,str
request_tracing_enabled,bool
remote_debugging_enabled,bool
remote_debugging_version,str
http_logging_enabled,bool
logs_directory_size_limit,int
detailed_error_logging_enabled,bool
publishing_username,str
document_root,str
use32_bit_worker_process,bool
web_sockets_enabled,bool
always_on,bool
java_version,str
java_container,str
java_container_version,str
app_command_line,str
auto_heal_enabled,bool
tracing_options,str
vnet_name,str
auto_swap_slot_name,str
local_my_sql_enabled,bool
managed_service_identity_id,int
x_managed_service_identity_id,int
http20_enabled,bool
reserved_instance_count,int
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
detailed_status,str
log_url,str
run_command,str
url,str
extra_info_url,str
error,str
using_sdk,bool
__init__,"Callable[[_],None]"
kind,str
start_address,str
end_address,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
location,str
kind,str
distinguished_name,str
validity_in_years,int
key_size,int
auto_renew,bool
csr,str
__init__,"Callable[[_],None]"
kind,str
vnet_resource_group,str
vnet_name,str
vnet_subnet_name,str
__init__,"Callable[[_],None]"
role_instance,str
total,float
maximum,float
minimum,float
is_aggregated,bool
__init__,"Callable[[_],None]"
agreed_by,str
__init__,"Callable[[_],None]"
location,str
kind,str
privacy,bool
auto_renew,bool
dns_zone_id,str
auth_code,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
unit,str
current_value,int
limit,int
__init__,"Callable[[_],None]"
name,str
display_name,str
internal_name,str
to_be_exported_for_shoebox,bool
__init__,"Callable[[_],None]"
kind,str
local_log_errors,str
master_log_errors,str
local_log_errors_max_length,str
master_log_errors_max_length,str
__init__,"Callable[[_],None]"
kind,str
run_command,str
url,str
extra_info_url,str
error,str
using_sdk,bool
__init__,"Callable[[_],None]"
kind,str
worker_size_id,int
worker_size,str
worker_count,int
__init__,"Callable[[_],None]"
kind,str
test_name,str
details,str
__init__,"Callable[[_],None]"
virtual_path,str
physical_path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key,str
value,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
vpn_package_uri,str
kind,str
vnet_name,str
__init__,"Callable[[_],None]"
include_disaster_recovery_endpoints,bool
__init__,"Callable[[_],None]"
minimum,int
maximum,int
default,int
scale_type,str
__init__,"Callable[[_],None]"
name,str
value,str
reason,str
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
display_version,str
runtime_version,str
is_default,bool
__init__,"Callable[[_],None]"
name,str
tier,str
size,str
family,str
capacity,int
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
kind,str
enabled,bool
__init__,"Callable[[_],None]"
kind,str
service_bus_namespace,str
relay_name,str
relay_arm_uri,str
hostname,str
port,int
send_key_name,str
send_key_value,str
service_bus_suffix,str
__init__,"Callable[[_],None]"
kind,str
status,int
message,str
author,str
deployer,str
author_email,str
active,bool
details,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
extended_code,str
message_template,str
code,str
message,str
__init__,"Callable[[_],None]"
kind,str
key_size,int
delay_existing_revoke_in_hours,int
csr,str
is_private_key_external,bool
__init__,"Callable[[_],None]"
retention_in_mb,int
retention_in_days,int
enabled,bool
__init__,"Callable[[_],None]"
nsdname,str
__init__,"Callable[[_],None]"
etag,str
ttl,int
__init__,"Callable[[_],None]"
ipv4_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
preference,int
exchange,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
priority,int
weight,int
port,int
target,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ipv6_address,str
__init__,"Callable[[_],None]"
location,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
flags,int
tag,str
value,str
__init__,"Callable[[_],None]"
ptrdname,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
cname,str
__init__,"Callable[[_],None]"
host,str
email,str
serial_number,int
refresh_time,int
retry_time,int
expire_time,int
minimum_ttl,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
nsdname,str
__init__,"Callable[[_],None]"
id,str
name,str
type,str
etag,str
ttl,int
__init__,"Callable[[_],None]"
ipv4_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
preference,int
exchange,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
priority,int
weight,int
port,int
target,str
__init__,"Callable[[_],None]"
ipv6_address,str
__init__,"Callable[[_],None]"
location,str
etag,str
max_number_of_record_sets,int
number_of_record_sets,int
__init__,"Callable[[_],None]"
ptrdname,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
cname,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
azure_async_operation,str
request_id,str
__init__,"Callable[[_],None]"
host,str
email,str
serial_number,int
refresh_time,int
retry_time,int
expire_time,int
minimum_ttl,int
__init__,"Callable[[_],None]"
nsdname,str
__init__,"Callable[[_],None]"
etag,str
ttl,int
__init__,"Callable[[_],None]"
ipv4_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
preference,int
exchange,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
priority,int
weight,int
port,int
target,str
__init__,"Callable[[_],None]"
ipv6_address,str
__init__,"Callable[[_],None]"
location,str
etag,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
flags,int
tag,str
value,str
__init__,"Callable[[_],None]"
ptrdname,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
cname,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
host,str
email,str
serial_number,int
refresh_time,int
retry_time,int
expire_time,int
minimum_ttl,int
self.vault_client,azure.mgmt.recoveryservices.RecoveryServicesClient
self.backup_client,azure.mgmt.recoveryservicesbackup.RecoveryServicesBackupClient
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
sub_workload_item_count,int
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
source_resource_id,str
item_id,str
policy_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
error_string,str
__init__,"Callable[[_],None]"
encryption_enabled,bool
kek_url,str
secret_key_url,str
kek_vault_id,str
secret_key_vault_id,str
__init__,"Callable[[_],None]"
dynamic_error_message,str
__init__,"Callable[[_],None]"
expand,str
__init__,"Callable[[_],None]"
source_resource_id,str
__init__,"Callable[[_],None]"
container_id,str
database_name,str
__init__,"Callable[[_],None]"
protected_items_count,int
instant_rp_retention_range_in_days,int
time_zone,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
sub_workload_item_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
protected,bool
is_present_on_cloud,bool
last_backup_status,str
recovery_point_count,int
on_premise_recovery_point_count,int
is_collocated,bool
protection_group_name,str
disk_storage_used_in_bytes,str
total_disk_storage_size_in_bytes,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
task_id,str
status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
task_id,str
instance_id,str
status,str
progress_percentage,float
__init__,"Callable[[_],None]"
source_resource_id,str
item_id,str
policy_id,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
computer_name,str
last_backup_status,str
protection_state,str
is_scheduled_for_deferred_delete,bool
deferred_delete_sync_time_in_utc,int
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
parent_unique_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
subprotectableitemcount,int
__init__,"Callable[[_],None]"
script_content,str
script_extension,str
os_type,str
url,str
script_name_suffix,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
can_re_register,bool
container_id,int
protected_item_count,int
agent_version,str
container_health_state,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
__init__,"Callable[[_],None]"
recovery_point_type,str
file_share_snapshot_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_container_fabric_id,str
parent_container_friendly_name,str
__init__,"Callable[[_],None]"
recovery_point_count,int
policy_state,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
virtual_machine_id,str
virtual_machine_version,str
resource_group,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
parent_unique_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
subprotectableitemcount,int
__init__,"Callable[[_],None]"
encryption_mechanism,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
virtual_machine_id,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
can_re_register,bool
container_id,str
protected_item_count,int
dpm_agent_version,str
upgrade_available,bool
protection_status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
job_id,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
progress_percentage,float
dynamic_error_message,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
parent_unique_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
subprotectableitemcount,int
__init__,"Callable[[_],None]"
source_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
entity_friendly_name,str
operation,str
status,str
activity_id,str
dpm_server_name,str
container_name,str
container_type,str
workload_type,str
__init__,"Callable[[_],None]"
schedule_frequency_in_mins,int
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
parent_unique_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
subprotectableitemcount,int
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
protected_item_data_id,str
__init__,"Callable[[_],None]"
recovery_point_id,str
source_resource_id,str
target_virtual_machine_id,str
target_resource_group_id,str
storage_account_id,str
virtual_network_id,str
subnet_id,str
target_domain_name_id,str
region,str
affinity_group,str
create_new_cloud_service,bool
original_storage_account_option,bool
__init__,"Callable[[_],None]"
fabric_name,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
friendly_name,str
expand,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
protected_items_count,int
__init__,"Callable[[_],None]"
name,str
target_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
parent_unique_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
subprotectableitemcount,int
__init__,"Callable[[_],None]"
dynamic_error_message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
expand,str
__init__,"Callable[[_],None]"
policy_name,str
last_backup_status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
database_name,str
protected_items_count,int
protected_servers_count,int
disk_count,int
used_disk_space,float
available_disk_space,float
azure_protected_instances,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
blob_duration,str
__init__,"Callable[[_],None]"
source_resource_id,str
item_id,str
policy_id,str
__init__,"Callable[[_],None]"
date_property,int
is_last,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
fabric_name,str
__init__,"Callable[[_],None]"
schedule_weekly_frequency,int
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
virtual_machine_id,str
__init__,"Callable[[_],None]"
resource_id,str
vault_id,str
properties,str
__init__,"Callable[[_],None]"
policy_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
recovery_point_count,int
policy_inconsistent,bool
__init__,"Callable[[_],None]"
friendly_name,str
health_status,str
container_id,str
__init__,"Callable[[_],None]"
source_resource_id,str
__init__,"Callable[[_],None]"
vault_id,str
container_name,str
protected_item_name,str
error_code,str
error_message,str
policy_name,str
registration_status,str
__init__,"Callable[[_],None]"
extended_info,bool
__init__,"Callable[[_],None]"
protected_items_count,int
__init__,"Callable[[_],None]"
vm_size,str
vm_sku,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
__init__,"Callable[[_],None]"
count,int
__init__,"Callable[[_],None]"
status,str
__init__,"Callable[[_],None]"
entity_friendly_name,str
operation,str
status,str
activity_id,str
virtual_machine_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
backup_engine_name,str
is_scheduled_for_deferred_delete,bool
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
entity_friendly_name,str
operation,str
status,str
activity_id,str
__init__,"Callable[[_],None]"
token,str
expiry_time_in_utc_ticks,int
security_pin,str
__init__,"Callable[[_],None]"
error_string,str
__init__,"Callable[[_],None]"
policy_name,str
container_name,str
backup_engine_name,str
friendly_name,str
fabric_name,str
backup_set_name,str
__init__,"Callable[[_],None]"
backup_engine_name,str
fabric_name,str
status,str
friendly_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
__init__,"Callable[[_],None]"
blob_url,str
blob_sas_key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
source_resource_id,str
storage_account_version,str
resource_group,str
protected_item_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
policy_state,str
protected_item_id,int
fabric_name,str
__init__,"Callable[[_],None]"
entity_friendly_name,str
operation,str
status,str
activity_id,str
workload_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
host_server_name,str
__init__,"Callable[[_],None]"
job_id,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
source_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
entity_friendly_name,str
operation,str
status,str
activity_id,str
storage_account_name,str
storage_account_version,str
__init__,"Callable[[_],None]"
type,str
item_count,int
__init__,"Callable[[_],None]"
path,str
file_spec_type,str
target_folder_path,str
__init__,"Callable[[_],None]"
recovery_point_type,str
recovery_point_additional_info,str
source_vm_storage_type,str
is_source_vm_encrypted,bool
is_instant_ilr_session_active,bool
is_managed_virtual_machine,bool
virtual_machine_size,str
original_storage_account_option,bool
os_type,str
__init__,"Callable[[_],None]"
dynamic_error_message,str
__init__,"Callable[[_],None]"
recovery_point_count,int
__init__,"Callable[[_],None]"
code,int
title,str
message,str
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
server_name,str
parent_name,str
parent_type,str
protection_status,str
protected_item_data_source_id,str
__init__,"Callable[[_],None]"
error_code,int
error_string,str
__init__,"Callable[[_],None]"
raw_cert_data,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
sub_workload_item_count,int
__init__,"Callable[[_],None]"
key_url,str
key_vault_id,str
key_backup_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
error_code,int
error_title,str
error_string,str
__init__,"Callable[[_],None]"
task_id,str
status,str
__init__,"Callable[[_],None]"
time_zone,str
issqlcompression,bool
is_compression,bool
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
virtual_machine_id,str
protection_status,str
last_backup_status,str
protected_item_data_id,str
__init__,"Callable[[_],None]"
recovery_point_count,int
policy_state,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
source_resource_id,str
__init__,"Callable[[_],None]"
protected_items_count,int
time_zone,str
fabric_name,str
__init__,"Callable[[_],None]"
source_logical_name,str
source_path,str
target_path,str
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
server_name,str
parent_name,str
parent_type,str
protection_status,str
protected_item_data_source_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
resource_id,str
po_logical_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
source_resource_id,str
should_use_alternate_target_location,bool
is_non_recoverable,bool
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
backup_engine_state,str
health_status,str
can_re_register,bool
backup_engine_id,str
dpm_version,str
azure_backup_agent_version,str
is_azure_backup_agent_upgrade_available,bool
is_dpm_upgrade_available,bool
__init__,"Callable[[_],None]"
unique_name,str
aad_tenant_id,str
service_principal_client_id,str
audience,str
__init__,"Callable[[_],None]"
protected_items_count,int
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
friendly_name,str
health_status,str
container_id,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
virtual_machine_id,str
virtual_machine_version,str
resource_group,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
secret_url,str
secret_vault_id,str
secret_data,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
source_resource_id,str
should_use_alternate_target_location,bool
is_non_recoverable,bool
__init__,"Callable[[_],None]"
source_resource_id,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
recovery_point_count,int
policy_state,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
container_name,str
status,str
friendly_name,str
__init__,"Callable[[_],None]"
recovery_point_id,str
virtual_machine_id,str
initiator_name,str
renew_existing_registration,bool
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
error_code,int
error_string,str
error_title,str
additional_details,str
__init__,"Callable[[_],None]"
source_resource_id,str
item_id,str
policy_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,int
title,str
message,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
virtual_machine_id,str
virtual_machine_version,str
resource_group,str
__init__,"Callable[[_],None]"
quota_period,str
current_value,int
limit,int
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
can_re_register,bool
container_id,str
protected_item_count,int
dpm_agent_version,str
upgrade_available,bool
protection_status,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
backup_engine_state,str
health_status,str
can_re_register,bool
backup_engine_id,str
dpm_version,str
azure_backup_agent_version,str
is_azure_backup_agent_upgrade_available,bool
is_dpm_upgrade_available,bool
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
source_resource_id,str
__init__,"Callable[[_],None]"
task_id,str
status,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
virtual_machine_id,str
protection_status,str
last_backup_status,str
protected_item_data_id,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
virtual_machine_id,str
__init__,"Callable[[_],None]"
friendly_name,str
health_status,str
container_id,str
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
protection_status,str
last_backup_status,str
__init__,"Callable[[_],None]"
error_code,str
error_message,str
recommendation,str
container_name,str
protected_item_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
task_id,str
status,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
backup_engine_state,str
health_status,str
can_re_register,bool
backup_engine_id,str
dpm_version,str
azure_backup_agent_version,str
is_azure_backup_agent_upgrade_available,bool
is_dpm_upgrade_available,bool
__init__,"Callable[[_],None]"
enable_compression,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
dynamic_error_message,str
__init__,"Callable[[_],None]"
status,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
virtual_machine_id,str
protection_status,str
last_backup_status,str
protected_item_data_id,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
parent_unique_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
subprotectableitemcount,int
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
protected_items_count,int
work_load_type,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
node_name,str
status,str
__init__,"Callable[[_],None]"
location,str
e_tag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
entity_friendly_name,str
operation,str
status,str
activity_id,str
mab_server_name,str
__init__,"Callable[[_],None]"
protected_items_count,int
work_load_type,str
time_zone,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
friendly_name,str
recovery_point_type,str
recovery_point_additional_info,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
sub_workload_item_count,int
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
backup_management_type,str
workload_type,str
friendly_name,str
parent_name,str
server_name,str
is_auto_protectable,bool
subinquireditemcount,int
sub_workload_item_count,int
__init__,"Callable[[_],None]"
source_resource_id,str
item_id,str
policy_id,str
friendly_name,str
__init__,"Callable[[_],None]"
friendly_name,str
registration_status,str
health_status,str
__init__,"Callable[[_],None]"
container_name,str
source_resource_id,str
policy_id,str
backup_set_name,str
friendly_name,str
server_name,str
parent_name,str
parent_type,str
protection_status,str
protected_item_data_source_id,str
__init__,"Callable[[_],None]"
path,str
logical_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
exclude,bool
low_cpu_threshold,str
__init__,"Callable[[_],None]"
impacted_field,str
impacted_value,str
recommendation_type_id,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
problem,str
solution,str
__init__,"Callable[[_],None]"
suppression_id,str
ttl,str
__init__,"Callable[[_],None]"
message,str
code,str
__init__,"Callable[[_],None]"
description,str
operation,str
provider,str
resource,str
__init__,"Callable[[_],None]"
id,str
type,str
name,str
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
resource_id,str
queue_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
display_name,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
max_delivery_attempts,int
event_time_to_live_in_minutes,int
__init__,"Callable[[_],None]"
resource_id,str
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
key,str
value,float
__init__,"Callable[[_],None]"
source_field,str
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
resource_id,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
key1,str
key2,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
key,str
value,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
resource_id,str
blob_container_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
endpoint_url,str
__init__,"Callable[[_],None]"
subject_begins_with,str
subject_ends_with,str
is_subject_case_sensitive,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
key,str
value,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key,str
value,float
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key,str
value,float
__init__,"Callable[[_],None]"
key1,str
key2,str
__init__,"Callable[[_],None]"
endpoint_url,str
__init__,"Callable[[_],None]"
display_name,str
description,str
schema_url,str
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
source_field,str
default_value,str
__init__,"Callable[[_],None]"
value,str
id,str
content_type,str
recovery_id,str
__init__,"Callable[[_],None]"
secret_bundle_backup,bytes
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
provider,str
__init__,"Callable[[_],None]"
value,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
x509_thumbprint,bytes
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
cancellation_requested,bool
__init__,"Callable[[_],None]"
storage_bundle_backup,bytes
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_bundle_backup,bytes
__init__,"Callable[[_],None]"
lifetime_percentage,int
days_before_expiry,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
base64_encoded_certificate,str
password,str
__init__,"Callable[[_],None]"
provider,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kid,str
__init__,"Callable[[_],None]"
id,str
provider,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
id,str
content_type,str
__init__,"Callable[[_],None]"
certificate_bundle_backup,bytes
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,bytes
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
email_address,str
name,str
phone,str
__init__,"Callable[[_],None]"
recovery_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
hsm,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
recovery_id,str
__init__,"Callable[[_],None]"
provider,str
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
certificate_type,str
certificate_transparency,bool
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
id,str
content_type,str
recovery_id,str
__init__,"Callable[[_],None]"
key_size,int
__init__,"Callable[[_],None]"
kid,str
recovery_id,str
__init__,"Callable[[_],None]"
csr,bytearray
cancellation_requested,bool
status,str
status_details,str
target,str
request_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
content_type,str
__init__,"Callable[[_],None]"
subject,str
validity_in_months,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
digest,bytes
signature,bytes
__init__,"Callable[[_],None]"
recovery_id,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
resource_id,str
active_key_name,str
auto_regenerate_key,bool
regeneration_period,str
__init__,"Callable[[_],None]"
cer,bytearray
content_type,str
recovery_id,str
__init__,"Callable[[_],None]"
account_id,str
password,str
__init__,"Callable[[_],None]"
active_key_name,str
auto_regenerate_key,bool
regeneration_period,str
__init__,"Callable[[_],None]"
recovery_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
first_name,str
last_name,str
email_address,str
phone,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
x509_thumbprint,bytes
recovery_id,str
__init__,"Callable[[_],None]"
exportable,bool
key_size,int
reuse_key,bool
__init__,"Callable[[_],None]"
cer,bytearray
content_type,str
__init__,"Callable[[_],None]"
template_uri,str
validity_period,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kid,str
n,bytes
e,bytes
d,bytes
dp,bytes
dq,bytes
qi,bytes
p,bytes
q,bytes
k,bytes
t,bytes
x,bytes
y,bytes
__init__,"Callable[[_],None]"
template_uri,str
validity_period,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
recovery_id,str
__init__,"Callable[[_],None]"
value,bytes
__init__,"Callable[[_],None]"
value,str
id,str
content_type,str
recovery_id,str
__init__,"Callable[[_],None]"
secret_bundle_backup,bytes
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
provider,str
__init__,"Callable[[_],None]"
value,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
x509_thumbprint,bytes
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
cancellation_requested,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_bundle_backup,bytes
__init__,"Callable[[_],None]"
lifetime_percentage,int
days_before_expiry,int
__init__,"Callable[[_],None]"
base64_encoded_certificate,str
password,str
__init__,"Callable[[_],None]"
provider,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kid,str
__init__,"Callable[[_],None]"
id,str
provider,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
id,str
content_type,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,bytes
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
email_address,str
name,str
phone,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
hsm,bool
__init__,"Callable[[_],None]"
provider,str
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
certificate_type,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
id,str
content_type,str
recovery_id,str
__init__,"Callable[[_],None]"
key_size,int
__init__,"Callable[[_],None]"
kid,str
recovery_id,str
__init__,"Callable[[_],None]"
csr,bytearray
cancellation_requested,bool
status,str
status_details,str
target,str
request_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
content_type,str
__init__,"Callable[[_],None]"
subject,str
validity_in_months,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
digest,bytes
signature,bytes
__init__,"Callable[[_],None]"
recovery_id,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
resource_id,str
active_key_name,str
auto_regenerate_key,bool
regeneration_period,str
__init__,"Callable[[_],None]"
cer,bytearray
content_type,str
recovery_id,str
__init__,"Callable[[_],None]"
account_id,str
password,str
__init__,"Callable[[_],None]"
active_key_name,str
auto_regenerate_key,bool
regeneration_period,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
first_name,str
last_name,str
email_address,str
phone,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
x509_thumbprint,bytes
recovery_id,str
__init__,"Callable[[_],None]"
exportable,bool
key_type,str
key_size,int
reuse_key,bool
__init__,"Callable[[_],None]"
cer,bytearray
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kid,str
n,bytes
e,bytes
d,bytes
dp,bytes
dq,bytes
qi,bytes
p,bytes
q,bytes
k,bytes
t,bytes
x,bytes
y,bytes
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,bytes
__init__,"Callable[[_],None]"
display_name,str
parent_id,str
__init__,"Callable[[_],None]"
name,str
display_name,str
__init__,"Callable[[_],None]"
id,str
name,str
display_name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,str
name,str
display_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
message,str
details,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
version,float
updated_by,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
tenant_id,str
display_name,str
__init__,"Callable[[_],None]"
tenant_id,str
display_name,str
__init__,"Callable[[_],None]"
display_name,str
__init__,"Callable[[_],None]"
tenant_id,str
display_name,str
number_of_descendants,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
expression,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
top,int
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
expression,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
query,str
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
skip_token,str
top,int
skip,int
__init__,"Callable[[_],None]"
expression,str
__init__,"Callable[[_],None]"
expression,str
total_records,int
count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
total_records,int
count,int
skip_token,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
pattern,str
name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,str
name,str
description,str
culture,str
usage_scenario,str
domain,str
versions_count,int
created_date_time,str
endpoint_hits_count,int
active_version,str
__init__,"Callable[[_],None]"
public,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
text,str
intent,str
__init__,"Callable[[_],None]"
entity_name,str
start_token_index,int
end_token_index,int
__init__,"Callable[[_],None]"
id,str
pattern,str
intent,str
__init__,"Callable[[_],None]"
name,str
version_id,str
desc,str
culture,str
__init__,"Callable[[_],None]"
utterance_text,str
example_id,int
__init__,"Callable[[_],None]"
model_id,str
__init__,"Callable[[_],None]"
pattern,str
activated,bool
name,str
__init__,"Callable[[_],None]"
entity_name,str
start_token_index,int
end_token_index,int
phrase,str
__init__,"Callable[[_],None]"
version_id,str
is_staging,bool
endpoint_url,str
region,str
assigned_endpoint_key,str
endpoint_region,str
published_date_time,str
__init__,"Callable[[_],None]"
domain_name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
version_id,str
is_staging,bool
region,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
custom_prebuilt_domain_name,str
custom_prebuilt_model_name,str
regex_pattern,str
__init__,"Callable[[_],None]"
id,str
pattern,str
intent,str
__init__,"Callable[[_],None]"
domain_name,str
model_name,str
__init__,"Callable[[_],None]"
text,str
intent_name,str
__init__,"Callable[[_],None]"
id,int
text,str
intent_label,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
custom_prebuilt_domain_name,str
custom_prebuilt_model_name,str
__init__,"Callable[[_],None]"
start_pos,int
end_pos,int
entity,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
status_id,int
__init__,"Callable[[_],None]"
activated,bool
name,str
words,str
mode,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
canonical_form,str
__init__,"Callable[[_],None]"
canonical_form,str
__init__,"Callable[[_],None]"
phrases,str
name,str
is_exchangeable,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
pattern,str
name,str
is_active,bool
__init__,"Callable[[_],None]"
id,int
explicit_list_item,str
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
version_id,str
is_staging,bool
endpoint_url,str
region,str
assigned_endpoint_key,str
endpoint_region,str
published_date_time,str
__init__,"Callable[[_],None]"
domain_name,str
model_name,str
__init__,"Callable[[_],None]"
culture,str
name,str
domain,str
description,str
initial_version_id,str
usage_scenario,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
custom_prebuilt_domain_name,str
custom_prebuilt_model_name,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
code,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
entity_name,str
start_char_index,int
end_char_index,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
explicit_list_item,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,int
name,str
is_active,bool
pattern,str
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
name,str
score,float
__init__,"Callable[[_],None]"
domain_name,str
culture,str
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
__init__,"Callable[[_],None]"
id,int
name,str
is_active,bool
phrases,str
is_exchangeable,bool
__init__,"Callable[[_],None]"
version,str
__init__,"Callable[[_],None]"
name,str
description,str
examples,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
regex_pattern,str
name,str
__init__,"Callable[[_],None]"
sentiment_analysis,bool
speech,bool
spell_checker,bool
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
name,str
description,str
examples,str
__init__,"Callable[[_],None]"
id,int
name,str
is_active,bool
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
__init__,"Callable[[_],None]"
id,int
text,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
__init__,"Callable[[_],None]"
has_error,bool
__init__,"Callable[[_],None]"
canonical_form,str
id,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
regex_pattern,str
__init__,"Callable[[_],None]"
id,str
is_public,bool
__init__,"Callable[[_],None]"
status_id,int
example_count,int
failure_reason,str
__init__,"Callable[[_],None]"
pattern,str
intent,str
__init__,"Callable[[_],None]"
owner,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
phrases,str
name,str
is_active,bool
is_exchangeable,bool
__init__,"Callable[[_],None]"
version,str
endpoint_url,str
intents_count,int
entities_count,int
endpoint_hits_count,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
pattern,str
intent,str
__init__,"Callable[[_],None]"
explicit_list_item,str
__init__,"Callable[[_],None]"
email,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
__init__,"Callable[[_],None]"
id,str
is_sentiment_analysis_enabled,bool
is_speech_enabled,bool
is_spell_checker_enabled,bool
__init__,"Callable[[_],None]"
regex_pattern,str
name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
error_type,str
__init__,"Callable[[_],None]"
canonical_form,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,str
name,str
type_id,int
custom_prebuilt_domain_name,str
custom_prebuilt_model_name,str
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
name,str
regex_pattern,str
__init__,"Callable[[_],None]"
name,str
culture,str
description,str
examples,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
parent_type,str
value,str
__init__,"Callable[[_],None]"
query,str
altered_query,str
__init__,"Callable[[_],None]"
entity,str
type,str
start_index,int
end_index,int
__init__,"Callable[[_],None]"
status_code,str
message,str
__init__,"Callable[[_],None]"
type,str
value,str
__init__,"Callable[[_],None]"
entity,str
type,str
start_index,int
end_index,int
score,float
__init__,"Callable[[_],None]"
intent,str
score,float
__init__,"Callable[[_],None]"
entity,str
type,str
start_index,int
end_index,int
__init__,"Callable[[_],None]"
label,str
score,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_resource_group,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
schema_name,str
name,str
index_id,int
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
name,str
clr_name,str
is_visible,bool
is_user_defined,bool
__init__,"Callable[[_],None]"
principal_id,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
name,str
uri,str
password,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
__init__,"Callable[[_],None]"
password,str
uri,str
user_id,str
__init__,"Callable[[_],None]"
principal_id,str
__init__,"Callable[[_],None]"
password,str
new_password,str
uri,str
user_id,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
schema_name,str
name,str
definition,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
schema_name,str
name,str
definition,str
__init__,"Callable[[_],None]"
type,int
count,int
dynamic_count,int
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
name,str
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
descending,bool
__init__,"Callable[[_],None]"
name,str
partition_function,str
is_columnstore,bool
index_id,int
is_unique,bool
__init__,"Callable[[_],None]"
total_row_count,int
total_column_count,int
truncated,bool
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
name,str
provider,str
provider_string,str
__init__,"Callable[[_],None]"
password,str
uri,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
original_path,str
content_path,str
__init__,"Callable[[_],None]"
parent_id,str
fragment_id,str
index_id,int
size,int
row_count,int
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
name,str
__init__,"Callable[[_],None]"
table_name,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
schema_name,str
name,str
definition,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
schema_name,str
name,str
type_family,str
c_sharp_name,str
full_csharp_name,str
system_type_id,int
user_type_id,int
schema_id,int
principal_id,int
is_nullable,bool
is_user_defined,bool
is_assembly_type,bool
is_table_type,bool
is_complex_type,bool
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
schema_name,str
name,str
type_family,str
c_sharp_name,str
full_csharp_name,str
system_type_id,int
user_type_id,int
schema_id,int
principal_id,int
is_nullable,bool
is_user_defined,bool
is_assembly_type,bool
is_table_type,bool
is_complex_type,bool
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
name,str
clr_name,str
__init__,"Callable[[_],None]"
first_part,str
second_part,str
third_part,str
server,str
__init__,"Callable[[_],None]"
version,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
schema_name,str
name,str
definition,str
__init__,"Callable[[_],None]"
password,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
name,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
schema_name,str
name,str
__init__,"Callable[[_],None]"
compute_account_name,str
version,str
database_name,str
schema_name,str
table_name,str
name,str
user_stat_name,str
stat_data_path,str
is_user_created,bool
is_auto_created,bool
has_filter,bool
filter_definition,str
__init__,"Callable[[_],None]"
recurrence_id,str
pipeline_id,str
pipeline_name,str
pipeline_uri,str
run_id,str
recurrence_name,str
__init__,"Callable[[_],None]"
name,str
degree_of_parallelism,int
priority,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
script,str
runtime_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
degree_of_parallelism,int
priority,int
__init__,"Callable[[_],None]"
name,str
path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
degree_of_parallelism,int
priority,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
script,str
runtime_version,str
notifier,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
degree_of_parallelism,int
priority,int
__init__,"Callable[[_],None]"
script,str
runtime_version,str
__init__,"Callable[[_],None]"
name,str
degree_of_parallelism,int
priority,int
__init__,"Callable[[_],None]"
name,str
resource_path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
script,str
runtime_version,str
__init__,"Callable[[_],None]"
script,str
runtime_version,str
notifier,str
__init__,"Callable[[_],None]"
script,str
runtime_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
script,str
runtime_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
object_id,str
max_degree_of_parallelism_per_job,int
min_priority_per_job,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
object_id,str
max_degree_of_parallelism_per_job,int
min_priority_per_job,int
__init__,"Callable[[_],None]"
name,str
object_id,str
max_degree_of_parallelism_per_job,int
min_priority_per_job,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
suffix,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
suffix,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
suffix,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
name,str
access_key,str
suffix,str
__init__,"Callable[[_],None]"
access_key,str
suffix,str
__init__,"Callable[[_],None]"
object_id,str
max_degree_of_parallelism_per_job,int
min_priority_per_job,int
__init__,"Callable[[_],None]"
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
max_job_count,int
max_degree_of_parallelism,int
max_degree_of_parallelism_per_job,int
min_priority_per_job,int
query_store_retention,int
__init__,"Callable[[_],None]"
location,str
default_data_lake_store_account,str
max_job_count,int
max_degree_of_parallelism,int
max_degree_of_parallelism_per_job,int
min_priority_per_job,int
query_store_retention,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
access_key,str
suffix,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
name,str
access_key,str
suffix,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
original_query,str
__init__,"Callable[[_],None]"
text,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
text,str
url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
original_query,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
gateway_id,str
connection_name,str
user_name,str
password,str
__init__,"Callable[[_],None]"
etag,str
session_id,str
state,str
runspace_availability,str
power_shell_session_resource_name,str
__init__,"Callable[[_],None]"
code,int
message,str
fields,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
data_plane_service_base_address,str
gateway_id,str
environment,str
upgrade_manifest_url,str
messaging_namespace,str
messaging_account,str
messaging_key,str
request_queue,str
response_topic,str
status_blob_signature,str
__init__,"Callable[[_],None]"
available_memory_mbyte,float
gateway_cpu_utilization_percent,float
total_cpu_utilization_percent,float
gateway_version,str
friendly_os_name,str
logical_processor_count,int
name,str
gateway_id,str
gateway_working_set_mbyte,float
group_policy_error,str
allow_gateway_group_policy_status,bool
require_mfa_group_policy_status,bool
encryption_certificate_thumbprint,str
secondary_encryption_certificate_thumbprint,str
active_message_count,int
latest_published_msi_version,str
__init__,"Callable[[_],None]"
user_name,str
password,str
encryption_certificate_thumbprint,str
__init__,"Callable[[_],None]"
command,str
__init__,"Callable[[_],None]"
kty,str
alg,str
e,str
n,str
__init__,"Callable[[_],None]"
message_type,int
foreground_color,str
background_color,str
value,str
prompt,str
exit_code,int
id,int
caption,str
message,str
__init__,"Callable[[_],None]"
name,str
label,str
help_message,str
prompt_field_type_is_list,bool
__init__,"Callable[[_],None]"
major,int
minor,int
build,int
revision,int
major_revision,int
minor_revision,int
__init__,"Callable[[_],None]"
etag,str
gateway_id,str
connection_name,str
__init__,"Callable[[_],None]"
etag,str
user_name,str
__init__,"Callable[[_],None]"
etag,str
__init__,"Callable[[_],None]"
pssession,str
command,str
completed,bool
__init__,"Callable[[_],None]"
etag,str
desired_version,str
active_message_count,int
latest_published_msi_version,str
__init__,"Callable[[_],None]"
command,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
etag,str
pssession,str
command,str
completed,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
interval,int
count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
retry_count,int
__init__,"Callable[[_],None]"
name,str
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
namespace,str
queue_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
namespace,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
max_job_count,int
max_job_occurrence,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
namespace,str
topic_path,str
__init__,"Callable[[_],None]"
occurrence,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
password,str
pfx,str
certificate_thumbprint,str
certificate_subject_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
interval,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
uri,str
method,str
body,str
__init__,"Callable[[_],None]"
sas_key,str
sas_key_name,str
__init__,"Callable[[_],None]"
storage_account,str
queue_name,str
sas_token,str
message,str
__init__,"Callable[[_],None]"
content_type,str
correlation_id,str
force_persistence,bool
label,str
message_id,str
partition_key,str
reply_to,str
reply_to_session_id,str
session_id,str
to,str
via_partition_key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
secret,str
tenant,str
audience,str
client_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
username,str
password,str
__init__,"Callable[[_],None]"
location,str
replica_count,int
partition_count,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
client_request_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
device_vendor,str
device_type,str
__init__,"Callable[[_],None]"
is_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
number,int
max_request_access_duration,str
allowed_source_address_prefix,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
workspace_id,str
scope,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
kind,str
__init__,"Callable[[_],None]"
number,int
allowed_source_address_prefix,str
__init__,"Callable[[_],None]"
device_vendor,str
device_type,str
__init__,"Callable[[_],None]"
display_name,str
order,float
recommended_label_id,str
enabled,bool
custom,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
requestor,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
number,int
allowed_source_address_prefix,str
__init__,"Callable[[_],None]"
device_vendor,str
device_type,str
hostname,str
agent,str
last_event_received,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
pattern,str
custom,bool
can_be_numeric,bool
excluded,bool
__init__,"Callable[[_],None]"
email,str
phone,str
__init__,"Callable[[_],None]"
offer,str
publisher,str
sku,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
display_name,str
order,float
enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
device_vendor,str
device_type,str
last_event_received,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
default_group,str
__init__,"Callable[[_],None]"
name,str
subnet_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
default_group,str
__init__,"Callable[[_],None]"
name,str
subnet_id,str
__init__,"Callable[[_],None]"
encryption_key_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
subnet_id,str
__init__,"Callable[[_],None]"
id_provider,str
__init__,"Callable[[_],None]"
name,str
id_provider,str
__init__,"Callable[[_],None]"
key_vault_resource_id,str
encryption_key_name,str
encryption_key_version,str
__init__,"Callable[[_],None]"
subnet_id,str
__init__,"Callable[[_],None]"
name,str
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id_provider,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
name,str
id_provider,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
etag,str
__init__,"Callable[[_],None]"
certificate,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_enabled,bool
name,str
condition,str
__init__,"Callable[[_],None]"
connection_string,str
name,str
subscription_id,str
resource_group,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
retention_time_in_days,int
partition_count,int
__init__,"Callable[[_],None]"
connection_string,str
name,str
subscription_id,str
resource_group,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
endpoint_id,str
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
connection_string,str
name,str
container_name,str
subscription_id,str
resource_group,str
file_name_format,str
batch_frequency_in_seconds,int
max_chunk_size_in_bytes,int
encoding,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable_file_upload_notifications,bool
comments,str
__init__,"Callable[[_],None]"
connection_string,str
name,str
subscription_id,str
resource_group,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
export_blob_container_uri,str
exclude_keys,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
line,int
column,int
__init__,"Callable[[_],None]"
body,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate,str
__init__,"Callable[[_],None]"
name,str
is_enabled,bool
condition,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
certificate,str
__init__,"Callable[[_],None]"
connection_string,str
container_name,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
max_delivery_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
type,str
unit,str
current_value,int
limit,int
__init__,"Callable[[_],None]"
input_blob_container_uri,str
output_blob_container_uri,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
max_delivery_count,int
__init__,"Callable[[_],None]"
key_name,str
primary_key,str
secondary_key,str
__init__,"Callable[[_],None]"
max_delivery_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
filter_name,str
ip_mask,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
type,str
sku_available,bool
reason,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
type,str
__init__,"Callable[[_],None]"
key1,str
key2,str
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
etag,str
kind,str
location,str
endpoint,str
internal_id,str
__init__,"Callable[[_],None]"
description,str
operation,str
provider,str
resource,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
query,str
timespan,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
value,str
__init__,"Callable[[_],None]"
count,int
__init__,"Callable[[_],None]"
server,str
username,str
password,str
__init__,"Callable[[_],None]"
repository,str
directory,str
revision,str
__init__,"Callable[[_],None]"
state,str
exit_code,int
detail_status,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
port,int
path,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
command,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
web_socket_uri,str
password,str
__init__,"Callable[[_],None]"
search_domains,str
options,str
__init__,"Callable[[_],None]"
ip,str
dns_name_label,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
secure_value,str
__init__,"Callable[[_],None]"
port,int
__init__,"Callable[[_],None]"
memory_in_gb,float
cpu,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
image,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
rows,int
cols,int
__init__,"Callable[[_],None]"
count,int
name,str
message,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
port,int
__init__,"Callable[[_],None]"
initial_delay_seconds,int
period_seconds,int
failure_threshold,int
success_threshold,int
timeout_seconds,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
share_name,str
storage_account_name,str
read_only,bool
storage_account_key,str
__init__,"Callable[[_],None]"
memory_in_gb,float
cpu,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
workspace_id,str
workspace_key,str
__init__,"Callable[[_],None]"
name,str
mount_path,str
read_only,bool
self.client,BatchAIManagementClient
self.client,BatchAIManagementClient
self.client,BatchAIManagementClient
self.client,BatchAIManagementClient
self.client,BatchAIManagementClient
self.client,BatchAIManagementClient
__init__,"Callable[[_],None]"
image,str
server_url,str
__init__,"Callable[[_],None]"
config_file_path,str
python_script_file_path,str
python_interpreter_path,str
command_line_args,str
process_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target_node_count,int
__init__,"Callable[[_],None]"
command_line,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
account_name,str
container_name,str
relative_mount_path,str
mount_options,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
admin_user_name,str
admin_user_ssh_public_key,str
admin_user_password,str
__init__,"Callable[[_],None]"
publisher,str
offer,str
sku,str
version,str
virtual_machine_image_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
mount_point,str
file_server_public_ip,str
file_server_internal_ip,str
__init__,"Callable[[_],None]"
mount_command,str
relative_mount_path,str
__init__,"Callable[[_],None]"
username,str
password,str
__init__,"Callable[[_],None]"
max_results,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
shm_size,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
account_name,str
azure_file_url,str
relative_mount_path,str
file_mode,str
directory_mode,str
__init__,"Callable[[_],None]"
vm_size,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
vm_size,str
__init__,"Callable[[_],None]"
node_count,int
std_out_err_path_prefix,str
__init__,"Callable[[_],None]"
node_count,int
std_out_err_path_prefix,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
language_type,str
config_file_path,str
python_script_file_path,str
python_interpreter_path,str
command_line_args,str
process_count,int
__init__,"Callable[[_],None]"
max_results,int
__init__,"Callable[[_],None]"
account_key,str
__init__,"Callable[[_],None]"
secret_url,str
__init__,"Callable[[_],None]"
id,str
path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
command_line,str
process_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
relative_mount_path,str
source_directory,str
mount_options,str
__init__,"Callable[[_],None]"
disk_size_in_gb,int
disk_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
minimum_node_count,int
maximum_node_count,int
initial_node_count,int
__init__,"Callable[[_],None]"
python_script_file_path,str
python_interpreter_path,str
command_line_args,str
process_count,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
max_results,int
__init__,"Callable[[_],None]"
vm_size,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
python_script_file_path,str
python_interpreter_path,str
command_line_args,str
__init__,"Callable[[_],None]"
instrumentation_key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
python_script_file_path,str
python_interpreter_path,str
command_line_args,str
process_count,int
communication_backend,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
path_prefix,str
path_suffix,str
__init__,"Callable[[_],None]"
max_results,int
__init__,"Callable[[_],None]"
python_script_file_path,str
python_interpreter_path,str
command_line_args,str
process_count,int
__init__,"Callable[[_],None]"
vm_size,str
__init__,"Callable[[_],None]"
command_line,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
max_results,int
__init__,"Callable[[_],None]"
max_results,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
command_line,str
std_out_err_path_prefix,str
__init__,"Callable[[_],None]"
python_script_file_path,str
python_interpreter_path,str
master_command_line_args,str
worker_command_line_args,str
parameter_server_command_line_args,str
worker_count,int
parameter_server_count,int
__init__,"Callable[[_],None]"
outputdirectoryid,str
directory,str
linkexpiryinminutes,int
max_results,int
__init__,"Callable[[_],None]"
display_name,str
__init__,"Callable[[_],None]"
object_id,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
authorization_source,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
status,str
status_detail,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
subscription_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
name_available,bool
name,str
message,str
__init__,"Callable[[_],None]"
minimum,int
maximum,int
default,int
__init__,"Callable[[_],None]"
resource_type,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
capacity,int
__init__,"Callable[[_],None]"
event_hub_resource_id,str
consumer_group,str
location,str
table_name,str
mapping_rule_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
fqn,str
email,str
app_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
error_message,str
__init__,"Callable[[_],None]"
size,float
__init__,"Callable[[_],None]"
soft_delete_period_in_days,int
location,str
hot_cache_period_in_days,int
__init__,"Callable[[_],None]"
provider,str
operation,str
resource,str
description,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
event_hub_resource_id,str
consumer_group,str
eventhub_connection_name,str
table_name,str
mapping_rule_name,str
__init__,"Callable[[_],None]"
location,str
soft_delete_period_in_days,int
hot_cache_period_in_days,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_hub_resource_id,str
consumer_group,str
location,str
table_name,str
mapping_rule_name,str
__init__,"Callable[[_],None]"
audio_language,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
issuer,str
audience,str
open_id_connect_discovery_document,str
__init__,"Callable[[_],None]"
preset_name,str
__init__,"Callable[[_],None]"
label,str
policy_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
label,str
start,str
step,str
range,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
label_reference_in_streaming_policy,str
value,str
__init__,"Callable[[_],None]"
key_id,str
__init__,"Callable[[_],None]"
input_label,str
audio_gain_level,float
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
client_access_policy,str
cross_domain_policy,str
__init__,"Callable[[_],None]"
label,str
__init__,"Callable[[_],None]"
label,str
policy_name,str
__init__,"Callable[[_],None]"
raw_body,bytearray
__init__,"Callable[[_],None]"
key,bytearray
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
label,str
scene_change_detection,bool
__init__,"Callable[[_],None]"
filename_pattern,str
__init__,"Callable[[_],None]"
filename_pattern,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
label,str
__init__,"Callable[[_],None]"
width,str
height,str
label,str
quality,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
asset_file_id,str
initialization_vector,str
asset_file_name,str
__init__,"Callable[[_],None]"
label,str
channels,int
sampling_rate,int
bitrate,int
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
width,str
height,str
label,str
__init__,"Callable[[_],None]"
key_frame_interval_duration,str
access_token,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
allow_test_devices,bool
__init__,"Callable[[_],None]"
preview_locator,str
streaming_policy_name,str
alternative_media_id,str
__init__,"Callable[[_],None]"
custom_license_acquisition_url_template,str
__init__,"Callable[[_],None]"
input_label,str
audio_gain_level,float
__init__,"Callable[[_],None]"
protocol,str
url,str
__init__,"Callable[[_],None]"
start_timestamp,int
end_timestamp,int
presentation_window_duration,int
live_backoff_duration,int
timescale,int
force_end_timestamp,bool
__init__,"Callable[[_],None]"
key_value,bytearray
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
left,str
top,str
width,str
height,str
__init__,"Callable[[_],None]"
custom_license_acquisition_url_template,str
play_ready_custom_attributes,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
asset_name,str
description,str
manifest_name,str
output_snap_time,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
response_custom_data,str
__init__,"Callable[[_],None]"
audio_language,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
digital_video_only_content_restriction,bool
image_constraint_for_analog_component_video_restriction,bool
image_constraint_for_analog_computer_monitor_restriction,bool
scms_restriction,int
agc_and_color_stripe_restriction,int
uncompressed_digital_video_opl,int
compressed_digital_video_opl,int
analog_video_opl,int
compressed_digital_audio_opl,int
uncompressed_digital_audio_opl,int
__init__,"Callable[[_],None]"
scale_units,int
location,str
description,str
availability_set_name,str
max_cache_age,int
cdn_enabled,bool
cdn_provider,str
cdn_profile,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
filename_pattern,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
label,str
start,str
step,str
range,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
claim_type,str
claim_value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
label,str
base_uri,str
__init__,"Callable[[_],None]"
width,str
height,str
label,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
filename_pattern,str
__init__,"Callable[[_],None]"
location,str
description,str
vanity_url,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
width,str
height,str
label,str
bitrate,int
max_bitrate,int
b_frames,int
frame_rate,str
slices,int
adaptive_bframe,bool
level,str
reference_frames,int
__init__,"Callable[[_],None]"
best_effort,bool
configuration_data,int
__init__,"Callable[[_],None]"
asset_name,str
streaming_policy_name,str
streaming_locator_id,str
default_content_key_policy_name,str
alternative_media_id,str
__init__,"Callable[[_],None]"
exponent,bytearray
modulus,bytearray
__init__,"Callable[[_],None]"
allow_persistent_license,bool
custom_license_acquisition_url_template,str
__init__,"Callable[[_],None]"
ask,bytearray
fair_play_pfx_password,str
fair_play_pfx,str
rental_duration,int
__init__,"Callable[[_],None]"
custom_key_acquisition_url_template,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider_name,str
__init__,"Callable[[_],None]"
asset_name,str
label,str
__init__,"Callable[[_],None]"
alternate_id,str
description,str
container,str
storage_account_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
label,str
channels,int
sampling_rate,int
bitrate,int
__init__,"Callable[[_],None]"
bitrate,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
width,str
height,str
label,str
bitrate,int
max_bitrate,int
b_frames,int
frame_rate,str
slices,int
adaptive_bframe,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
asset_name,str
label,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
filename_pattern,str
__init__,"Callable[[_],None]"
identifier,str
base64_key,str
__init__,"Callable[[_],None]"
fragments_per_ts_segment,int
__init__,"Callable[[_],None]"
scale_unit,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
filename_pattern,str
__init__,"Callable[[_],None]"
label,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
input_label,str
audio_gain_level,float
opacity,float
__init__,"Callable[[_],None]"
code,str
message,str
target,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
filename_pattern,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
remove_outputs_on_stop,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
label,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
download,bool
dash,bool
hls,bool
smooth_streaming,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
label,str
__init__,"Callable[[_],None]"
default_content_key_policy_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
label,str
start,str
step,str
range,str
__init__,"Callable[[_],None]"
name,str
address,str
subnet_prefix_length,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
widevine_template,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
label,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name_available,bool
reason,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
order,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
origin_host_header,str
origin_path,str
is_compression_enabled,bool
is_http_allowed,bool
is_https_allowed,bool
probe_path,str
__init__,"Callable[[_],None]"
relative_path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
probe_url,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
host_name,str
validation_data,str
__init__,"Callable[[_],None]"
base_ip_address,str
prefix_length,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
host_name,str
__init__,"Callable[[_],None]"
name,str
host_name,str
http_port,int
https_port,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
cache_duration,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
host_name,str
__init__,"Callable[[_],None]"
location,str
host_name,str
http_port,int
https_port,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
delivery_region,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
host_name,str
http_port,int
https_port,int
__init__,"Callable[[_],None]"
location,str
origin_host_header,str
origin_path,str
is_compression_enabled,bool
is_http_allowed,bool
is_https_allowed,bool
probe_path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
receiver_name,str
__init__,"Callable[[_],None]"
service_uri,str
__init__,"Callable[[_],None]"
threshold,float
__init__,"Callable[[_],None]"
resource_uri,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
enabled,bool
autoscale_setting_resource_name,str
target_resource_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
storage_account_id,str
service_bus_rule_id,str
__init__,"Callable[[_],None]"
location,str
group_short_name,str
enabled,bool
__init__,"Callable[[_],None]"
name,str
email_address,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
send_to_subscription_administrator,bool
send_to_subscription_co_administrators,bool
__init__,"Callable[[_],None]"
email_subject,str
custom_webhook_payload,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
enabled,bool
category,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_dimension_required,bool
resource_id,str
namespace,str
id,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
location,str
description,str
__init__,"Callable[[_],None]"
frequency_in_minutes,int
time_window_in_minutes,int
__init__,"Callable[[_],None]"
client_request_id,str
client_ip_address,str
method,str
uri,str
__init__,"Callable[[_],None]"
metric_name,str
metric_resource_uri,str
threshold,float
__init__,"Callable[[_],None]"
time_zone,str
__init__,"Callable[[_],None]"
name,str
email_address,str
__init__,"Callable[[_],None]"
action_group_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
email_address,str
__init__,"Callable[[_],None]"
name,str
function_app_resource_id,str
function_name,str
http_trigger_url,str
__init__,"Callable[[_],None]"
description,str
severity,int
enabled,bool
auto_mitigate,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
minimum,str
maximum,str
default,str
__init__,"Callable[[_],None]"
location,str
alert_rule_resource_name,str
is_enabled,bool
description,str
__init__,"Callable[[_],None]"
throttling_in_min,int
__init__,"Callable[[_],None]"
name,str
country_code,str
phone_number,str
__init__,"Callable[[_],None]"
location,str
enabled,bool
description,str
__init__,"Callable[[_],None]"
resource_uri,str
metric_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
query,str
data_source_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
id,str
type,str
__init__,"Callable[[_],None]"
type,str
__init__,"Callable[[_],None]"
timespan,str
aggregation,str
__init__,"Callable[[_],None]"
threshold,float
__init__,"Callable[[_],None]"
resource_uri,str
event_name,str
event_source,str
level,str
operation_name,str
resource_group_name,str
resource_provider_name,str
status,str
sub_status,str
__init__,"Callable[[_],None]"
storage_account_id,str
event_hub_authorization_rule_id,str
event_hub_name,str
workspace_id,str
__init__,"Callable[[_],None]"
name,str
id,str
type,str
__init__,"Callable[[_],None]"
name,str
country_code,str
phone_number,str
__init__,"Callable[[_],None]"
name,str
operator,str
__init__,"Callable[[_],None]"
field,str
equals,str
__init__,"Callable[[_],None]"
action_group_id,str
__init__,"Callable[[_],None]"
average,float
minimum,float
maximum,float
total,float
count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
time_zone,str
__init__,"Callable[[_],None]"
status,str
__init__,"Callable[[_],None]"
enabled,bool
category,str
__init__,"Callable[[_],None]"
send_to_service_owners,bool
__init__,"Callable[[_],None]"
threshold,float
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
threshold,float
metric_column,str
__init__,"Callable[[_],None]"
name,str
resource_id,str
callback_url,str
__init__,"Callable[[_],None]"
name,str
metric_name,str
threshold,float
metric_namespace,str
__init__,"Callable[[_],None]"
enabled,bool
name,str
target_resource_uri,str
__init__,"Callable[[_],None]"
value,str
__init__,"Callable[[_],None]"
name,str
workspace_id,str
connection_id,str
ticket_configuration,str
region,str
__init__,"Callable[[_],None]"
timespan,str
cost,float
namespace,str
resourceregion,str
__init__,"Callable[[_],None]"
name,str
is_enabled,bool
description,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
description,str
severity,int
enabled,bool
auto_mitigate,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
automation_account_id,str
runbook_name,str
webhook_resource_id,str
is_global_runbook,bool
name,str
service_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
storage_account_id,str
service_bus_rule_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
failed_location_count,int
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
enabled,bool
days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
service_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
action,str
role,str
scope,str
__init__,"Callable[[_],None]"
service_uri,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
name,str
count,int
groupedby,str
__init__,"Callable[[_],None]"
old_value,str
new_value,str
modified_at,str
modified_by,str
comments,str
description,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
total,int
smart_groups_count,int
groupedby,str
__init__,"Callable[[_],None]"
target_resource,str
target_resource_name,str
target_resource_group,str
target_resource_type,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
name,str
count,int
__init__,"Callable[[_],None]"
alerts_count,int
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
old_value,str
new_value,str
modified_at,str
modified_by,str
comments,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
provisioning_state,str
ip_range_filter,str
is_virtual_network_filter_enabled,bool
enable_automatic_failover,bool
enable_multiple_write_locations,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
region,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
max_staleness_prefix,int
max_interval_in_seconds,int
__init__,"Callable[[_],None]"
location_name,str
provisioning_state,str
failover_priority,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
ip_range_filter,str
is_virtual_network_filter_enabled,bool
enable_automatic_failover,bool
enable_multiple_write_locations,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
id,str
ignore_missing_vnet_service_endpoint,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location_name,str
failover_priority,int
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
offset,int
token,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
suggestion,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
property_name,str
include_value,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
node_name,str
node_instance_id,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
manifest,str
__init__,"Callable[[_],None]"
description,str
application_type_name,str
max_percent_unhealthy_applications,int
total_count,int
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
server,str
username,str
password,str
__init__,"Callable[[_],None]"
partition_id,str
replica_id,str
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_instance_id,int
node_name,str
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
count,int
low_key,str
high_key,str
__init__,"Callable[[_],None]"
service_name,str
service_type_name,str
application_name,str
placement_constraints,str
is_default_move_cost_specified,bool
service_dns_name,str
__init__,"Callable[[_],None]"
name,str
port,int
__init__,"Callable[[_],None]"
name,str
version,str
__init__,"Callable[[_],None]"
service_name,str
service_type_name,str
service_manifest_name,str
code_package_name,str
partition_id,str
address,str
service_package_activation_id,str
host_process_id,str
instance_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
cluster_configuration,str
__init__,"Callable[[_],None]"
manifest,str
__init__,"Callable[[_],None]"
node_name_filter,str
health_state_filter,int
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_instance_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
flags,str
placement_constraints,str
target_replica_set_size,int
min_replica_set_size,int
replica_restart_wait_duration_seconds,str
quorum_loss_wait_duration_seconds,str
stand_by_replica_keep_duration_seconds,str
__init__,"Callable[[_],None]"
service_name,str
service_type_name,str
service_manifest_name,str
code_package_name,str
partition_id,str
address,str
service_package_activation_id,str
host_process_id,str
__init__,"Callable[[_],None]"
is_stateful,bool
service_type_name,str
placement_constraints,str
has_persisted_state,bool
__init__,"Callable[[_],None]"
event_instance_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
continuation_token,str
is_consistent,bool
__init__,"Callable[[_],None]"
event_instance_id,str
service_id,str
instance_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
state,str
exit_code,str
detail_status,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
service_name,str
service_package_name,str
service_package_activation_id,str
is_exclusive,bool
code_package_name,str
entry_point_type,str
exe_name,str
process_id,int
host_id,str
exit_code,int
unexpected_termination,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
node_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
node_name,str
address,str
last_in_build_duration_in_seconds,str
instance_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
node_id,str
upgrade_domain,str
fault_domain,str
ip_address_or_fqdn,str
hostname,str
is_seed_node,bool
node_version,str
error,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
has_correlated_events,bool
__init__,"Callable[[_],None]"
service_type_name,str
service_manifest_name,str
code_package_name,str
service_package_activation_id,str
__init__,"Callable[[_],None]"
data,str
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
start_position,str
end_position,str
__init__,"Callable[[_],None]"
id,str
name,str
type_name,str
manifest_version,str
is_service_group,bool
__init__,"Callable[[_],None]"
hour,int
minute,int
__init__,"Callable[[_],None]"
version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
description,str
upgrade_domain_name,str
baseline_error_count,int
baseline_total_count,int
max_percent_delta_unhealthy_nodes,int
total_count,int
__init__,"Callable[[_],None]"
version_number,str
epoch_data_loss_number,str
epoch_configuration_number,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
task_id,str
version,str
request_abort,bool
__init__,"Callable[[_],None]"
total_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
error_code,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
replica_id,int
replica_instance_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
name,str
type_name,str
manifest_version,str
is_service_group,bool
__init__,"Callable[[_],None]"
event_instance_id,str
target_cluster_version,str
overall_upgrade_elapsed_time_in_ms,float
has_correlated_events,bool
__init__,"Callable[[_],None]"
description,str
max_percent_unhealthy_applications,int
total_count,int
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
deployment_name,str
compose_file_content,str
__init__,"Callable[[_],None]"
custom_type_id,str
parent,str
size_in_bytes,int
sequence_number,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_type_name,str
application_type_version,str
failure_reason,str
overall_upgrade_elapsed_time_in_ms,float
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
target_cluster_version,str
failure_reason,str
overall_upgrade_elapsed_time_in_ms,float
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
target_cluster_version,str
upgrade_state,str
upgrade_domains,str
upgrade_domain_elapsed_time_in_ms,float
has_correlated_events,bool
__init__,"Callable[[_],None]"
key,str
value,str
__init__,"Callable[[_],None]"
domain_name,str
__init__,"Callable[[_],None]"
service_manifest_name,str
application_type_name,str
application_type_version,str
node_name,str
__init__,"Callable[[_],None]"
data,str
__init__,"Callable[[_],None]"
task_id,str
action,str
version,str
description,str
flags,int
executor,str
executor_data,str
result_code,int
result_details,str
perform_preparing_health_check,bool
perform_restoring_health_check,bool
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
task_id,str
version,str
perform_preparing_health_check,bool
perform_restoring_health_check,bool
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
replica_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_type_name,str
application_type_version,str
overall_upgrade_elapsed_time_in_ms,float
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
description,str
node_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance_id,int
fault_group_id,str
fault_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
partition_id,str
instance_id,str
__init__,"Callable[[_],None]"
is_stateful,bool
service_type_name,str
placement_constraints,str
use_implicit_host,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
backup_id,str
backup_location,str
__init__,"Callable[[_],None]"
code_version,str
config_version,str
next_upgrade_domain,str
upgrade_duration_in_milliseconds,str
upgrade_domain_duration_in_milliseconds,str
start_timestamp_utc,str
failure_timestamp_utc,str
__init__,"Callable[[_],None]"
backup_policy_name,str
__init__,"Callable[[_],None]"
manifest,str
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_id,str
node_instance,str
error,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
id,str
name,str
type_name,str
work_directory,str
log_directory,str
temp_directory,str
__init__,"Callable[[_],None]"
queue_utilization_percentage,int
queue_memory_size,str
first_sequence_number,str
completed_sequence_number,str
committed_sequence_number,str
last_sequence_number,str
__init__,"Callable[[_],None]"
service_manifest_name,str
service_package_activation_id,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
fault_group_id,str
fault_id,str
service_name,str
source_node,str
destination_node,str
forced_move,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
version,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
metric_name,str
lower_load_threshold,str
upper_load_threshold,str
scale_interval_in_seconds,int
__init__,"Callable[[_],None]"
max_percent_unhealthy_partitions_per_service,int
max_percent_unhealthy_replicas_per_partition,int
max_percent_unhealthy_services,int
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
service_manifest_name,str
service_package_instance_id,int
service_package_activation_id,str
node_name,str
source_id,str
property,str
health_state,str
ttl_timespan,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
property_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
partition_id,str
replica_id,str
__init__,"Callable[[_],None]"
description,str
max_percent_unhealthy_nodes,int
total_count,int
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
batch_id,str
deactivate_intent,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
id,str
name,str
type_name,str
manifest_version,str
is_service_group,bool
has_persisted_state,bool
__init__,"Callable[[_],None]"
code_version,str
__init__,"Callable[[_],None]"
configuration_number,str
data_loss_number,str
__init__,"Callable[[_],None]"
service_name_filter,str
health_state_filter,int
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
node_name,str
node_instance_id,str
service_type,str
cc_epoch_data_loss_version,int
cc_epoch_config_version,int
reconfig_type,str
result,str
phase0_duration_ms,float
phase1_duration_ms,float
phase2_duration_ms,float
phase3_duration_ms,float
phase4_duration_ms,float
total_duration_ms,float
has_correlated_events,bool
__init__,"Callable[[_],None]"
database_row_count_estimate,str
database_logical_size_estimate,str
copy_notification_current_key_filter,str
copy_notification_current_progress,str
status_details,str
__init__,"Callable[[_],None]"
replica_or_instance_id_filter,str
health_state_filter,int
__init__,"Callable[[_],None]"
description,str
node_name,str
application_name,str
service_manifest_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
low_key,str
high_key,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_type_name,str
current_application_type_version,str
application_type_version,str
upgrade_type,str
rolling_upgrade_mode,str
failure_action,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code_version,str
config_version,str
__init__,"Callable[[_],None]"
async_property,bool
application_type_build_path,str
__init__,"Callable[[_],None]"
cluster_config,str
max_percent_unhealthy_applications,int
max_percent_unhealthy_nodes,int
max_percent_delta_unhealthy_nodes,int
max_percent_upgrade_domain_delta_unhealthy_nodes,int
__init__,"Callable[[_],None]"
service_manifest_name_filter,str
service_package_activation_id_filter,str
health_state_filter,int
__init__,"Callable[[_],None]"
domain_name,str
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
status,int
content_type,str
content_encoding,str
body,str
__init__,"Callable[[_],None]"
replica_or_instance_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
restored_lsn,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
node_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
replica_id,int
replica_instance_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
source_id,str
property,str
description,str
sequence_number,str
remove_when_expired,bool
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
replica_id,int
fault_group_id,str
fault_id,str
service_uri,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
store_relative_path,str
session_id,str
file_size,str
__init__,"Callable[[_],None]"
name,str
count,int
first_timestamp,str
last_timestamp,str
message,str
type,str
__init__,"Callable[[_],None]"
instance_count,int
__init__,"Callable[[_],None]"
policy_name,str
__init__,"Callable[[_],None]"
replica_id,str
last_received_replication_sequence_number,str
last_applied_replication_sequence_number,str
is_in_build,bool
last_received_copy_sequence_number,str
last_applied_copy_sequence_number,str
__init__,"Callable[[_],None]"
description,str
total_count,int
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
description,str
baseline_error_count,int
baseline_total_count,int
max_percent_delta_unhealthy_nodes,int
total_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_instance_id,int
node_name,str
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
node_name,str
__init__,"Callable[[_],None]"
count,int
__init__,"Callable[[_],None]"
node_name,str
address,str
last_in_build_duration_in_seconds,str
replica_id,str
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
current_code_version,str
current_manifest_version,str
target_code_version,str
target_manifest_version,str
pending_upgrade_type,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
service_name,str
service_package_name,str
service_package_activation_id,str
is_exclusive,bool
code_package_name,str
entry_point_type,str
image_name,str
container_name,str
host_id,str
exit_code,int
unexpected_termination,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
file_size,str
store_relative_path,str
__init__,"Callable[[_],None]"
service_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
config_version,str
code_version,str
upgrade_replica_set_check_timeout_in_seconds,int
force_restart,bool
enable_delta_health_evaluation,bool
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_type_name,str
current_application_type_version,str
application_type_version,str
upgrade_state,str
upgrade_domains,str
upgrade_domain_elapsed_time_in_ms,float
has_correlated_events,bool
__init__,"Callable[[_],None]"
property_name,str
__init__,"Callable[[_],None]"
description,str
service_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
description,str
partition_id,str
replica_or_instance_id,str
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
replica_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
task_id,str
version,str
__init__,"Callable[[_],None]"
deployment_name,str
application_name,str
upgrade_status_details,str
force_restart,bool
upgrade_replica_set_check_timeout_in_seconds,int
target_application_type_version,str
upgrade_duration,str
current_upgrade_domain_duration,str
start_timestamp_utc,str
failure_timestamp_utc,str
application_upgrade_status_details,str
__init__,"Callable[[_],None]"
min_instance_count,int
max_instance_count,int
scale_increment,int
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
node_id,str
upgrade_domain,str
fault_domain,str
ip_address_or_fqdn,str
hostname,str
is_seed_node,bool
node_version,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
configuration_version,str
data_loss_version,str
__init__,"Callable[[_],None]"
latest,bool
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
description,str
node_name,str
application_name,str
__init__,"Callable[[_],None]"
description,str
service_type_name,str
max_percent_unhealthy_services,int
total_count,int
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
service_name,str
partition_id,str
replica_id,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_type_name,str
current_application_type_version,str
application_type_version,str
failure_reason,str
overall_upgrade_elapsed_time_in_ms,float
has_correlated_events,bool
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
total_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
policy_name,str
service_name,str
partition_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
image,str
entrypoint,str
__init__,"Callable[[_],None]"
data,float
__init__,"Callable[[_],None]"
async_property,bool
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
enable_delta_health_evaluation,bool
__init__,"Callable[[_],None]"
property_name,str
custom_type_id,str
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
memory_in_gb,float
cpu,float
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ok_count,int
warning_count,int
error_count,int
__init__,"Callable[[_],None]"
description,str
application_name,str
__init__,"Callable[[_],None]"
name,str
ip_address_or_fqdn,str
type,str
code_version,str
config_version,str
node_up_time_in_seconds,str
is_seed_node,bool
upgrade_domain,str
fault_domain,str
instance_id,str
is_stopped,bool
node_down_time_in_seconds,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
fault_group_id,str
fault_id,str
node_name,str
service_manifest_name,str
code_package_name,str
service_package_activation_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
description,str
partition_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
entry_point_location,str
process_id,str
run_as_user_name,str
instance_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
config_version,str
__init__,"Callable[[_],None]"
service_name,str
partition_id,str
__init__,"Callable[[_],None]"
upgrade_domain,str
__init__,"Callable[[_],None]"
shared_package_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_type_name,str
application_type_version,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
id,str
name,str
type_name,str
type_version,str
__init__,"Callable[[_],None]"
path,str
friendly_name,str
primary_user_name,str
primary_password,str
secondary_user_name,str
secondary_password,str
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
address,str
__init__,"Callable[[_],None]"
name,str
node_capacity,str
node_load,str
node_remaining_capacity,str
is_capacity_violation,bool
node_buffered_capacity,str
node_remaining_buffered_capacity,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
remote_source,str
remote_destination,str
check_mark_file,bool
__init__,"Callable[[_],None]"
is_in_build,bool
__init__,"Callable[[_],None]"
application_type_version,str
async_property,bool
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
node_id,str
upgrade_domain,str
fault_domain,str
ip_address_or_fqdn,str
hostname,str
is_seed_node,bool
node_version,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
node_name,str
application_name,str
service_manifest_name,str
service_package_activation_id,str
__init__,"Callable[[_],None]"
sunday,bool
monday,bool
tuesday,bool
wednesday,bool
thursday,bool
friday,bool
saturday,bool
__init__,"Callable[[_],None]"
service_name,str
service_type_name,str
service_manifest_name,str
code_package_name,str
partition_id,str
address,str
service_package_activation_id,str
host_process_id,str
replica_id,str
__init__,"Callable[[_],None]"
error_message,str
operation_index,int
__init__,"Callable[[_],None]"
service_manifest_name,str
code_package_name,str
code_package_instance_id,str
service_package_activation_id,str
__init__,"Callable[[_],None]"
key,str
value,str
__init__,"Callable[[_],None]"
is_suspended,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
replica_name,str
__init__,"Callable[[_],None]"
health_check_wait_duration_in_milliseconds,str
health_check_stable_duration_in_milliseconds,str
health_check_retry_timeout_in_milliseconds,str
upgrade_timeout_in_milliseconds,str
upgrade_domain_timeout_in_milliseconds,str
__init__,"Callable[[_],None]"
service_name,str
service_type_name,str
target_replica_set_size,int
min_replica_set_size,int
has_persisted_state,bool
application_name,str
placement_constraints,str
is_default_move_cost_specified,bool
service_dns_name,str
flags,int
replica_restart_wait_duration_seconds,int
quorum_loss_wait_duration_seconds,int
stand_by_replica_keep_duration_seconds,int
__init__,"Callable[[_],None]"
connection_string,str
container_name,str
friendly_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
replica_id,int
fault_group_id,str
fault_id,str
service_uri,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
friendly_name,str
__init__,"Callable[[_],None]"
partition_id_filter,str
health_state_filter,int
__init__,"Callable[[_],None]"
description,str
max_percent_unhealthy_partitions_per_service,int
total_count,int
__init__,"Callable[[_],None]"
account_name,str
share_name,str
account_key,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
service_manifest,str
service_package_instance_id,int
service_package_activation_id,str
node_name,str
source_id,str
property,str
health_state,str
ttl_timespan,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
service_name,str
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
error_code,int
__init__,"Callable[[_],None]"
name,str
type_name,str
type_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_in_build,bool
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_type_name,str
application_type_version,str
application_definition_kind,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
service_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
fault_group_id,str
fault_id,str
service_name,str
node_to,str
forced_move,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
domain_name,str
__init__,"Callable[[_],None]"
code_version,str
config_version,str
upgrade_replica_set_check_timeout_in_seconds,int
force_restart,bool
enable_delta_health_evaluation,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
policy_name,str
service_name,str
__init__,"Callable[[_],None]"
name,str
application_name,str
status_details,str
__init__,"Callable[[_],None]"
time_to_run_in_seconds,str
max_cluster_stabilization_timeout_in_seconds,int
max_concurrent_faults,int
enable_move_replica_faults,bool
wait_time_between_faults_in_seconds,int
wait_time_between_iterations_in_seconds,int
__init__,"Callable[[_],None]"
application_name,str
service_name,str
service_type_name,str
service_dns_name,str
__init__,"Callable[[_],None]"
name,str
version,str
status_details,str
__init__,"Callable[[_],None]"
total_count,int
__init__,"Callable[[_],None]"
application_name,str
service_manifest_name,str
node_name,str
__init__,"Callable[[_],None]"
name,str
auto_restore_on_data_loss,bool
max_incremental_backups,int
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
has_correlated_events,bool
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
force_restart,bool
replica_set_check_timeout_in_milliseconds,int
health_check_wait_duration_in_milliseconds,str
health_check_stable_duration_in_milliseconds,str
health_check_retry_timeout_in_milliseconds,str
upgrade_timeout_in_milliseconds,str
upgrade_domain_timeout_in_milliseconds,str
__init__,"Callable[[_],None]"
authority,str
client,str
cluster,str
login,str
redirect,str
tenant,str
__init__,"Callable[[_],None]"
name,str
description,str
replica_count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
replica_id,int
fault_group_id,str
fault_id,str
service_uri,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
node_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
data,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
max_percent_delta_unhealthy_nodes,int
max_percent_upgrade_domain_delta_unhealthy_nodes,int
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
event_instance_id,str
current_cluster_version,str
target_cluster_version,str
upgrade_type,str
rolling_upgrade_mode,str
failure_action,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
uri_path,str
http_verb,str
content_type,str
body,str
__init__,"Callable[[_],None]"
is_stateful,bool
service_type_name,str
placement_constraints,str
__init__,"Callable[[_],None]"
content,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
type,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
partition_id,str
replica_id,str
__init__,"Callable[[_],None]"
progress_status,int
config_version,str
details,str
__init__,"Callable[[_],None]"
node_name,str
address,str
last_in_build_duration_in_seconds,str
__init__,"Callable[[_],None]"
flags,str
placement_constraints,str
__init__,"Callable[[_],None]"
min_partition_count,int
max_partition_count,int
scale_increment,int
__init__,"Callable[[_],None]"
event_instance_id,str
service_id,str
service_type_name,str
application_name,str
application_type_name,str
service_instance,int
is_stateful,bool
partition_count,int
target_replica_set_size,int
min_replica_set_size,int
service_package_version,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
node_id,str
upgrade_domain,str
fault_domain,str
ip_address_or_fqdn,str
hostname,str
is_seed_node,bool
node_version,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
error_code,int
__init__,"Callable[[_],None]"
property_name,str
exists,bool
__init__,"Callable[[_],None]"
error_code,int
__init__,"Callable[[_],None]"
event_instance_id,str
service_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
application_name,str
application_type_name,str
__init__,"Callable[[_],None]"
name,str
maximum_capacity,int
reservation_capacity,int
total_application_capacity,int
__init__,"Callable[[_],None]"
async_property,bool
application_package_download_uri,str
application_type_name,str
application_type_version,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
average_receive_duration,str
average_apply_duration,str
not_received_count,str
received_and_not_applied_count,str
__init__,"Callable[[_],None]"
property_name,str
sequence_number,str
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
application_instance_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
reason,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
code_file_path,str
cluster_manifest_file_path,str
__init__,"Callable[[_],None]"
consider_warning_as_error,bool
max_percent_unhealthy_nodes,int
max_percent_unhealthy_applications,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key,str
value,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
registry_user_name,str
registry_password,str
password_encrypted,bool
__init__,"Callable[[_],None]"
name,str
version,str
service_package_activation_id,str
__init__,"Callable[[_],None]"
store_relative_path,str
file_count,str
__init__,"Callable[[_],None]"
service_name,str
partition_id,str
__init__,"Callable[[_],None]"
node_instance_id,str
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
policy_name,str
application_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
effective_deactivate_intent,str
batch_ids_with_deactivate_intent,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
domain_name,str
__init__,"Callable[[_],None]"
description,str
upgrade_domain_name,str
max_percent_unhealthy_nodes,int
total_count,int
__init__,"Callable[[_],None]"
name,str
destination_path,str
read_only,bool
__init__,"Callable[[_],None]"
memory_in_gb,float
cpu,float
__init__,"Callable[[_],None]"
description,str
__init__,"Callable[[_],None]"
backup_id,str
backup_location,str
lsn_of_last_backup_record,str
__init__,"Callable[[_],None]"
event_instance_id,str
service_id,str
service_type_name,str
application_name,str
application_type_name,str
service_instance,int
is_stateful,bool
partition_count,int
target_replica_set_size,int
min_replica_set_size,int
service_package_version,str
partition_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
service_state,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
node_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
target_cluster_version,str
failure_reason,str
overall_upgrade_elapsed_time_in_ms,float
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
domain_name,str
__init__,"Callable[[_],None]"
description,str
consider_warning_as_error,bool
__init__,"Callable[[_],None]"
target_replica_set_size,int
min_replica_set_size,int
__init__,"Callable[[_],None]"
source_id,str
property,str
description,str
sequence_number,str
remove_when_expired,bool
is_expired,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
application_id,str
fault_group_id,str
fault_id,str
node_name,str
service_manifest_name,str
code_package_name,str
service_package_activation_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance_id,int
fault_group_id,str
fault_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
key,str
__init__,"Callable[[_],None]"
service_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
max_concurrent_faults,int
time_to_run_in_seconds,float
max_cluster_stabilization_timeout_in_seconds,float
wait_time_between_iterations_in_seconds,float
wait_time_between_fautls_in_seconds,float
move_replica_fault_enabled,bool
included_node_type_list,str
included_application_list,str
cluster_health_policy,str
chaos_context,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
name,str
primary_default_load,int
secondary_default_load,int
default_load,int
__init__,"Callable[[_],None]"
name,str
type_name,str
target_application_type_version,str
next_upgrade_domain,str
upgrade_duration_in_milliseconds,str
upgrade_domain_duration_in_milliseconds,str
start_timestamp_utc,str
failure_timestamp_utc,str
upgrade_status_details,str
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
node_id,str
upgrade_domain,str
fault_domain,str
ip_address_or_fqdn,str
hostname,str
is_seed_node,bool
node_version,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
restart_count,int
__init__,"Callable[[_],None]"
service_name,str
partition_id,str
instance_id,str
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
description,str
max_percent_unhealthy_deployed_applications,int
total_count,int
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_id,str
node_instance,int
node_type,str
fabric_version,str
ip_address_or_fqdn,str
node_capacities,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
name,str
version,str
service_manifest_name,str
service_package_activation_id,str
run_frequency_interval,str
__init__,"Callable[[_],None]"
task_id,str
version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
continuation_token,str
is_consistent,bool
__init__,"Callable[[_],None]"
minimum_nodes,int
maximum_nodes,int
__init__,"Callable[[_],None]"
domain_name,str
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
last_exit_code,str
activation_count,str
activation_failure_count,str
continuous_activation_failure_count,str
exit_count,str
exit_failure_count,str
continuous_exit_failure_count,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_instance,int
node_id,str
upgrade_domain,str
fault_domain,str
ip_address_or_fqdn,str
hostname,str
is_seed_node,bool
node_version,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
backup_id,str
backup_chain_id,str
application_name,str
service_name,str
backup_location,str
lsn_of_last_backup_record,str
__init__,"Callable[[_],None]"
name,str
description,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_in_build,bool
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
node_name_filter,str
health_state_filter,int
__init__,"Callable[[_],None]"
service_name,str
partition_id,str
__init__,"Callable[[_],None]"
deployment_name,str
compose_file_content,str
upgrade_replica_set_check_timeout_in_seconds,int
force_restart,bool
__init__,"Callable[[_],None]"
upgrade_domain_name,str
__init__,"Callable[[_],None]"
node_name,str
application_name,str
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
description,str
max_percent_unhealthy_replicas_per_partition,int
total_count,int
__init__,"Callable[[_],None]"
application_name_filter,str
application_type_name_filter,str
health_state_filter,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
application_name,str
__init__,"Callable[[_],None]"
reason,str
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
continuation_token,str
__init__,"Callable[[_],None]"
partition_id,str
__init__,"Callable[[_],None]"
id,str
name,str
__init__,"Callable[[_],None]"
event_instance_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
event_instance_id,str
node_name,str
node_id,str
node_instance,int
node_type,str
fabric_version,str
ip_address_or_fqdn,str
node_capacities,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
service_manifest_name,str
service_manifest_version,str
is_service_group,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
metric_name,str
lower_load_threshold,str
upper_load_threshold,str
scale_interval_in_seconds,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
target_application_type_version,str
upgrade_replica_set_check_timeout_in_seconds,int
force_restart,bool
__init__,"Callable[[_],None]"
operation_id,str
__init__,"Callable[[_],None]"
name,str
description,str
debug_params,str
__init__,"Callable[[_],None]"
chaos_parameters,str
__init__,"Callable[[_],None]"
service_name,str
service_type_name,str
instance_count,int
application_name,str
placement_constraints,str
is_default_move_cost_specified,bool
service_dns_name,str
__init__,"Callable[[_],None]"
domain_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
previous_node,str
current_node,str
move_reason,str
relevant_traces,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
id,str
minimum_nodes,int
maximum_nodes,int
node_count,int
__init__,"Callable[[_],None]"
name,str
value,int
__init__,"Callable[[_],None]"
property_name,str
custom_type_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
event_instance_id,str
service_id,str
instance_id,int
source_id,str
property,str
health_state,str
time_to_live_ms,int
sequence_number,int
description,str
remove_when_expired,bool
has_correlated_events,bool
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
application_type_build_path,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
flags,str
placement_constraints,str
instance_count,int
__init__,"Callable[[_],None]"
consider_warning_as_error,bool
max_percent_unhealthy_deployed_applications,int
__init__,"Callable[[_],None]"
property_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
replica_id,int
has_correlated_events,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
node_name,str
__init__,"Callable[[_],None]"
event_instance_id,str
partition_id,str
has_correlated_events,bool
__init__,"Callable[[_],None]"
role_name,str
role_instance,str
__init__,"Callable[[_],None]"
severity_level,str
outer_id,str
message,str
type,str
id,str
__init__,"Callable[[_],None]"
url_path,str
url_host,str
name,str
url,str
total_duration,int
performance_bucket,str
network_duration,int
send_duration,int
receive_duration,int
processing_duration,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
target,str
data,str
success,str
duration,int
performance_bucket,str
result_code,str
type,str
name,str
id,str
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
name,str
success,str
duration,int
performance_bucket,str
message,str
location,str
id,str
size,str
__init__,"Callable[[_],None]"
timespan,str
top,int
orderby,str
filter,str
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
i_key,str
app_name,str
app_id,str
sdk_version,str
__init__,"Callable[[_],None]"
severity_level,int
problem_id,str
handled_at,str
assembly,str
method,str
message,str
type,str
outer_type,str
outer_method,str
outer_assembly,str
outer_message,str
innermost_type,str
innermost_message,str
innermost_method,str
innermost_assembly,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
value,float
value_sum,float
value_count,int
value_min,float
value_max,float
value_std_dev,float
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
message,str
severity_level,int
__init__,"Callable[[_],None]"
version,str
__init__,"Callable[[_],None]"
name,str
id,str
parent_id,str
synthetic_source,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
query,str
timespan,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
model,str
os,str
type,str
browser,str
ip,str
city,str
state_or_province,str
country_or_region,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
odatacontext,str
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
assembly,str
method,str
level,int
line,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
status,int
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
name,str
url,str
duration,str
performance_bucket,str
__init__,"Callable[[_],None]"
id,str
account_id,str
authenticated_id,str
__init__,"Callable[[_],None]"
value,float
name,str
category,str
counter,str
instance_name,str
instance,str
__init__,"Callable[[_],None]"
name,str
url,str
success,str
duration,float
performance_bucket,str
result_code,str
source,str
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
id,str
count,int
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
value,str
__init__,"Callable[[_],None]"
resource_app_id,str
__init__,"Callable[[_],None]"
app_id,str
available_to_other_tenants,bool
display_name,str
homepage,str
oauth2_allow_implicit_flow,bool
__init__,"Callable[[_],None]"
value,str
key_id,str
usage,str
type,str
custom_key_identifier,str
__init__,"Callable[[_],None]"
immutable_id,str
usage_location,str
given_name,str
surname,str
account_enabled,bool
display_name,str
user_principal_name,str
mail_nickname,str
mail,str
__init__,"Callable[[_],None]"
odatatype,str
client_id,str
consent_type,str
resource_id,str
scope,str
start_time,str
expiry_time,str
__init__,"Callable[[_],None]"
id,str
type,str
__init__,"Callable[[_],None]"
account_enabled,bool
app_id,str
app_role_assignment_required,bool
display_name,str
error_url,str
homepage,str
publisher_name,str
saml_metadata_url,str
__init__,"Callable[[_],None]"
url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
display_name,str
mail_nickname,str
__init__,"Callable[[_],None]"
value,bool
__init__,"Callable[[_],None]"
id,str
description,str
display_name,str
is_enabled,bool
value,str
__init__,"Callable[[_],None]"
app_id,str
account_enabled,bool
app_role_assignment_required,bool
display_name,str
error_url,str
homepage,str
publisher_name,str
saml_metadata_url,str
__init__,"Callable[[_],None]"
security_enabled_only,bool
__init__,"Callable[[_],None]"
available_to_other_tenants,bool
display_name,str
homepage,str
oauth2_allow_implicit_flow,bool
__init__,"Callable[[_],None]"
include_directory_object_references,bool
__init__,"Callable[[_],None]"
password,str
force_change_password_next_login,bool
__init__,"Callable[[_],None]"
account_enabled,bool
display_name,str
user_principal_name,str
mail_nickname,str
immutable_id,str
usage_location,str
given_name,str
surname,str
mail,str
__init__,"Callable[[_],None]"
display_name,str
app_id,str
__init__,"Callable[[_],None]"
url,str
__init__,"Callable[[_],None]"
available_to_other_tenants,bool
display_name,str
homepage,str
oauth2_allow_implicit_flow,bool
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
security_enabled_only,bool
__init__,"Callable[[_],None]"
key_id,str
value,str
custom_key_identifier,bytearray
__init__,"Callable[[_],None]"
group_id,str
member_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
immutable_id,str
usage_location,str
given_name,str
surname,str
account_enabled,bool
display_name,str
user_principal_name,str
mail_nickname,str
__init__,"Callable[[_],None]"
display_name,str
mail_enabled,bool
mail_nickname,str
security_enabled,bool
mail,str
__init__,"Callable[[_],None]"
immutable_id,str
usage_location,str
given_name,str
surname,str
__init__,"Callable[[_],None]"
type,str
value,str
__init__,"Callable[[_],None]"
key_name,str
key_version,str
key_vault_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
enable_azure_files_aad_integration,bool
enable_https_traffic_only,bool
is_hns_enabled,bool
__init__,"Callable[[_],None]"
enabled,bool
days,int
__init__,"Callable[[_],None]"
ip_address_or_range,str
key_to_sign,str
__init__,"Callable[[_],None]"
max_age_in_seconds,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
fill_gap_with_zero,bool
category,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
immutability_period_since_creation_in_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ip_address_or_range,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
use_sub_domain,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
canonicalized_resource,str
ip_address_or_range,str
identifier,str
partition_key_start,str
partition_key_end,str
row_key_start,str
row_key_end,str
key_to_sign,str
cache_control,str
content_disposition,str
content_encoding,str
content_language,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
virtual_network_resource_id,str
__init__,"Callable[[_],None]"
default_service_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
enable_azure_files_aad_integration,bool
enable_https_traffic_only,bool
is_hns_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable_azure_files_aad_integration,bool
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
__init__,"Callable[[_],None]"
immutability_period_since_creation_in_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
key_name,str
key_version,str
key_vault_uri,str
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
ip_address_or_range,str
key_to_sign,str
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
fill_gap_with_zero,bool
category,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ip_address_or_range,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
use_sub_domain,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
canonicalized_resource,str
ip_address_or_range,str
identifier,str
partition_key_start,str
partition_key_end,str
row_key_start,str
row_key_end,str
key_to_sign,str
cache_control,str
content_disposition,str
content_encoding,str
content_language,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
__init__,"Callable[[_],None]"
virtual_network_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
key_name,str
key_version,str
key_vault_uri,str
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
ip_address_or_range,str
key_to_sign,str
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
fill_gap_with_zero,bool
category,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ip_address_or_range,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
use_sub_domain,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
canonicalized_resource,str
ip_address_or_range,str
identifier,str
partition_key_start,str
partition_key_end,str
row_key_start,str
row_key_end,str
key_to_sign,str
cache_control,str
content_disposition,str
content_encoding,str
content_language,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
__init__,"Callable[[_],None]"
virtual_network_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
ip_address_or_range,str
key_to_sign,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
use_sub_domain,bool
__init__,"Callable[[_],None]"
canonicalized_resource,str
ip_address_or_range,str
identifier,str
partition_key_start,str
partition_key_end,str
row_key_start,str
row_key_end,str
key_to_sign,str
cache_control,str
content_disposition,str
content_encoding,str
content_language,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
use_sub_domain,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
key_name,str
key_version,str
key_vault_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
is_hns_enabled,bool
__init__,"Callable[[_],None]"
ip_address_or_range,str
key_to_sign,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
fill_gap_with_zero,bool
category,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
immutability_period_since_creation_in_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ip_address_or_range,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
use_sub_domain,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
canonicalized_resource,str
ip_address_or_range,str
identifier,str
partition_key_start,str
partition_key_end,str
row_key_start,str
row_key_end,str
key_to_sign,str
cache_control,str
content_disposition,str
content_encoding,str
content_language,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
virtual_network_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
is_hns_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
__init__,"Callable[[_],None]"
immutability_period_since_creation_in_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
location,str
primary_location,str
secondary_location,str
__init__,"Callable[[_],None]"
value,str
localized_value,str
__init__,"Callable[[_],None]"
name_available,bool
message,str
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
current_value,int
limit,int
__init__,"Callable[[_],None]"
name,str
use_sub_domain,bool
__init__,"Callable[[_],None]"
key1,str
key2,str
__init__,"Callable[[_],None]"
blob,str
queue,str
table,str
file,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
key_name,str
key_version,str
key_vault_uri,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
is_hns_enabled,bool
__init__,"Callable[[_],None]"
ip_address_or_range,str
key_to_sign,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
display_description,str
unit,str
aggregation_type,str
fill_gap_with_zero,bool
category,str
resource_id_dimension_name_override,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
immutability_period_since_creation_in_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
ip_address_or_range,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
use_sub_domain,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
canonicalized_resource,str
ip_address_or_range,str
identifier,str
partition_key_start,str
partition_key_end,str
row_key_start,str
row_key_end,str
key_to_sign,str
cache_control,str
content_disposition,str
content_encoding,str
content_language,str
content_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
virtual_network_resource_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
enable_https_traffic_only,bool
is_hns_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enable_https_traffic_only,bool
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
display_name,str
__init__,"Callable[[_],None]"
immutability_period_since_creation_in_days,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
name,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
reservation_id,str
__init__,"Callable[[_],None]"
type,str
reason_code,str
__init__,"Callable[[_],None]"
split_source,str
__init__,"Callable[[_],None]"
etag,int
display_name,str
original_quantity,int
provisioning_state,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
merge_destination,str
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
message,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
display_name,str
quantity,int
provisioning_state,str
sku_description,str
__init__,"Callable[[_],None]"
etag,int
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
code,str
message,str
target,str
__init__,"Callable[[_],None]"
key1,str
key2,str
__init__,"Callable[[_],None]"
name_available,bool
message,str
__init__,"Callable[[_],None]"
id,str
name,str
type,str
__init__,"Callable[[_],None]"
id,str
name,str
type,str
location,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
target_resource_group,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
origin,str
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
code,str
message,str
target,str
__init__,"Callable[[_],None]"
host_suffix,str
target_container_host_resource_id,str
target_container_host_credentials_base64,str
location,str
__init__,"Callable[[_],None]"
provider,str
resource,str
operation,str
description,str
__init__,"Callable[[_],None]"
kube_config,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
client_app_id,str
server_app_id,str
server_app_secret,str
tenant_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
count,int
os_disk_size_gb,int
vnet_subnet_id,str
max_pods,int
__init__,"Callable[[_],None]"
key_data,str
__init__,"Callable[[_],None]"
admin_username,str
__init__,"Callable[[_],None]"
orchestrator_type,str
orchestrator_version,str
default,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
orchestrator,str
__init__,"Callable[[_],None]"
orchestrator_type,str
orchestrator_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
kube_config,bytearray
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
pod_cidr,str
service_cidr,str
dns_service_ip,str
docker_bridge_cidr,str
__init__,"Callable[[_],None]"
vault_id,str
secret_name,str
version,str
__init__,"Callable[[_],None]"
kubernetes_version,str
name,str
__init__,"Callable[[_],None]"
client_id,str
secret,str
__init__,"Callable[[_],None]"
location,str
kubernetes_version,str
dns_prefix,str
enable_rbac,bool
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
admin_username,str
admin_password,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
enabled,bool
__init__,"Callable[[_],None]"
dns_prefix,str
count,int
os_disk_size_gb,int
vnet_subnet_id,str
first_consecutive_static_ip,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
orchestrator_version,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
count,int
os_disk_size_gb,int
dns_prefix,str
vnet_subnet_id,str
__init__,"Callable[[_],None]"
client_id,str
secret,str
read_conf,"Callable[[Path],Dict[str, Any]]"
folder,Path
build_default_conf,"Callable[[Path, str],None]"
folder,Path
package_name,str
build_packaging,"Callable[[str, Union[str, None], bool, List[str], bool],None]"
output_folder,str
jenkins,bool
build_conf,bool
build_packaging_by_package_name,"Callable[[str, str, bool],None]"
package_name,str
output_folder,str
build_conf,bool
create_report,"Callable[[str],Dict[str, Any]]"
module_name,str
main,"Callable[[str, Union[str, None], bool, bool, bool],_]"
input_parameter,str
no_venv,bool
pypi,bool
last_pypi,bool
__init__,"Callable[[_, str],_]"
host,str
project,"Callable[[_, str],_]"
package_name,str
project_release,"Callable[[_, str, str],_]"
package_name,str
version,str
get_ordered_versions,"Callable[[_, str],_]"
package_name,str
get_relevant_versions,"Callable[[_, str],_]"
package_name,str
__init__,"Callable[[_],None]"
backup_retention_days,int
storage_mb,int
__init__,"Callable[[_],None]"
value,str
source,str
__init__,"Callable[[_],None]"
administrator_login_password,str
__init__,"Callable[[_],None]"
message,str
name_available,bool
reason,str
__init__,"Callable[[_],None]"
size_in_kb,int
log_file_type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
email_account_admins,bool
storage_endpoint,str
storage_account_access_key,str
retention_days,int
__init__,"Callable[[_],None]"
name,str
capacity,int
size,str
family,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
source_server_id,str
__init__,"Callable[[_],None]"
administrator_login,str
administrator_login_password,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
edition,str
v_core,int
hardware_generation,str
max_backup_retention_days,int
min_backup_retention_days,int
max_storage_mb,int
min_storage_mb,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
virtual_network_subnet_id,str
ignore_missing_vnet_service_endpoint,bool
__init__,"Callable[[_],None]"
charset,str
collation,str
__init__,"Callable[[_],None]"
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
source_server_id,str
__init__,"Callable[[_],None]"
location,str
administrator_login,str
fully_qualified_domain_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
backup_retention_days,int
storage_mb,int
__init__,"Callable[[_],None]"
value,str
source,str
__init__,"Callable[[_],None]"
administrator_login_password,str
__init__,"Callable[[_],None]"
message,str
name_available,bool
reason,str
__init__,"Callable[[_],None]"
size_in_kb,int
log_file_type,str
url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
email_account_admins,bool
storage_endpoint,str
storage_account_access_key,str
retention_days,int
__init__,"Callable[[_],None]"
name,str
capacity,int
size,str
family,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
source_server_id,str
__init__,"Callable[[_],None]"
administrator_login,str
administrator_login_password,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
edition,str
v_core,int
hardware_generation,str
max_backup_retention_days,int
min_backup_retention_days,int
max_storage_mb,int
min_storage_mb,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
virtual_network_subnet_id,str
ignore_missing_vnet_service_endpoint,bool
__init__,"Callable[[_],None]"
charset,str
collation,str
__init__,"Callable[[_],None]"
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
source_server_id,str
__init__,"Callable[[_],None]"
location,str
administrator_login,str
fully_qualified_domain_name,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
backup_retention_days,int
storage_mb,int
__init__,"Callable[[_],None]"
value,str
source,str
__init__,"Callable[[_],None]"
administrator_login_password,str
replication_role,str
__init__,"Callable[[_],None]"
message,str
name_available,bool
reason,str
__init__,"Callable[[_],None]"
size_in_kb,int
log_file_type,str
url,str
__init__,"Callable[[_],None]"
source_server_id,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
email_account_admins,bool
storage_endpoint,str
storage_account_access_key,str
retention_days,int
__init__,"Callable[[_],None]"
name,str
capacity,int
size,str
family,str
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
source_server_id,str
__init__,"Callable[[_],None]"
administrator_login,str
administrator_login_password,str
__init__,"Callable[[_],None]"
id,str
__init__,"Callable[[_],None]"
id,str
edition,str
v_core,int
hardware_generation,str
max_backup_retention_days,int
min_backup_retention_days,int
max_storage_mb,int
min_storage_mb,int
__init__,"Callable[[_],None]"
location,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
virtual_network_subnet_id,str
ignore_missing_vnet_service_endpoint,bool
__init__,"Callable[[_],None]"
charset,str
collation,str
__init__,"Callable[[_],None]"
start_ip_address,str
end_ip_address,str
__init__,"Callable[[_],None]"
source_server_id,str
__init__,"Callable[[_],None]"
location,str
administrator_login,str
fully_qualified_domain_name,str
replication_role,str
master_server_id,str
replica_capacity,int
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
key,str
value,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
site_name,str
is_enabled,bool
enable_preview,bool
__init__,"Callable[[_],None]"
app_id,str
app_secret,str
is_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
next_link,str
__init__,"Callable[[_],None]"
code,str
message,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
phone,str
account_sid,str
auth_token,str
is_enabled,bool
is_validated,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_enabled,bool
enable_messaging,bool
enable_media_cards,bool
enable_video,bool
enable_calling,bool
enable_screen_sharing,bool
enable_groups,bool
groups_mode,str
calling_web_hook,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
name,str
type,str
__init__,"Callable[[_],None]"
client_id,str
client_secret,str
scopes,str
service_provider_id,str
service_provider_display_name,str
__init__,"Callable[[_],None]"
access_token,str
is_enabled,bool
is_validated,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
email_address,str
password,str
is_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
site_name,str
is_enabled,bool
is_v1_enabled,bool
is_v3_enabled,bool
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
etag,str
__init__,"Callable[[_],None]"
location,str
etag,str
__init__,"Callable[[_],None]"
id,str
access_token,str
__init__,"Callable[[_],None]"
name,str
origin,str
__init__,"Callable[[_],None]"
location,str
etag,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
user_name,str
api_key,str
is_enabled,bool
is_validated,bool
__init__,"Callable[[_],None]"
display_name,str
endpoint,str
msa_app_id,str
description,str
icon_url,str
developer_app_insight_key,str
developer_app_insights_api_key,str
developer_app_insights_application_id,str
luis_key,str
__init__,"Callable[[_],None]"
valid,bool
message,str
__init__,"Callable[[_],None]"
client_id,str
client_secret,str
verification_token,str
is_enabled,bool
landing_page_url,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
is_enabled,bool
enable_calling,bool
calling_web_hook,str
__init__,"Callable[[_],None]"
__init__,"Callable[[_],None]"
location,str
etag,str
__init__,"Callable[[_],None]"
description,str
operation,str
provider,str
resource,str
__init__,"Callable[[_],None]"
load_from_server,"Callable[[NaturalLanguageInterpreter, Union[EndpointConfig, NLG], Union[TrackerStore, None], Union[EndpointConfig, None], Union[EndpointConfig, None]],Agent]"
interpreter,NaturalLanguageInterpreter
_init_model_from_server,"Callable[[EndpointConfig],Union[typing.Tuple[Text, Text], None]]"
model_server,EndpointConfig
_update_model_from_server,"Callable[[EndpointConfig, Agent],None]"
model_server,EndpointConfig
agent,Agent
_pull_model_and_fingerprint,"Callable[[EndpointConfig, Text, Union[Text, None]],Union[Text, None]]"
model_server,EndpointConfig
model_directory,Text
_run_model_pulling_worker,"Callable[[EndpointConfig, int, Agent],None]"
model_server,EndpointConfig
wait_time_between_pulls,int
agent,Agent
start_model_pulling_in_worker,"Callable[[EndpointConfig, int, Agent],None]"
model_server,EndpointConfig
wait_time_between_pulls,int
agent,Agent
__init__,"Callable[[_, Union[Text, Domain], Union[PolicyEnsemble, List[Policy], None], Union[NaturalLanguageInterpreter, None], Union[EndpointConfig, NLG, None], Union[TrackerStore, None], Union[EndpointConfig, None], Union[Text, None]],_]"
policies,"Union[PolicyEnsemble, List[Policy], None]"
update_model,"Callable[[_, Union[Text, Domain], PolicyEnsemble, Union[Text, None]],None]"
policy_ensemble,PolicyEnsemble
load,"Callable[[_, Text, Union[NaturalLanguageInterpreter, None], Union[EndpointConfig, NLG], Union[TrackerStore, None], Union[EndpointConfig, None]],Agent]"
path,Text
handle_message,"Callable[[_, UserMessage, Union[Callable[[Text],Text], None]],Union[List[Text], None]]"
message,UserMessage
message_preprocessor,"Union[Callable[[Text],Text], None]"
predict_next,"Callable[[_, Text],Dict[Text, Any]]"
sender_id,Text
kwargs,Any
log_message,"Callable[[_, UserMessage, Union[Callable[[Text],Text], None]],DialogueStateTracker]"
message,UserMessage
message_preprocessor,"Union[Callable[[Text],Text], None]"
kwargs,Any
execute_action,"Callable[[_, Text, Text, OutputChannel, Text, float],DialogueStateTracker]"
sender_id,Text
action,Text
output_channel,OutputChannel
policy,Text
confidence,float
handle_text,"Callable[[_, Union[Text, Dict[Text, Any]], Union[Callable[[Text],Text], None], Union[OutputChannel, None], Union[Text, None]],Union[List[Text], None]]"
text_message,"Union[Text, Dict[Text, Any]]"
message_preprocessor,"Union[Callable[[Text],Text], None]"
toggle_memoization,"Callable[[_, bool],None]"
activate,bool
continue_training,"Callable[[_, List[DialogueStateTracker]],None]"
kwargs,Any
load_data,"Callable[[_, Text, bool, Union[int, None], int, Union[int, None], bool, bool, int],List[DialogueStateTracker]]"
resource_name,Text
remove_duplicates,bool
augmentation_factor,int
use_story_concatenation,bool
debug_plots,bool
exclusion_percentage,int
train,"Callable[[_, List[DialogueStateTracker]],None]"
kwargs,Any
handle_channels,"Callable[[_, List[InputChannel], int, bool, Text],WSGIServer]"
http_port,int
serve_forever,bool
route,Text
_set_fingerprint,"Callable[[_, Union[Text, None]],None]"
_clear_model_directory,"Callable[[Text],None]"
model_path,Text
persist,"Callable[[_, Text, bool],None]"
model_path,Text
dump_flattened_stories,bool
visualize,"Callable[[_, Text, Text, Union[int, None], Union[Text, None], bool, int],None]"
resource_name,Text
output_file,Text
should_merge_nodes,bool
fontsize,int
create_processor,"Callable[[_, Union[Callable[[Text],Text], None]],MessageProcessor]"
preprocessor,"Union[Callable[[Text],Text], None]"
_create_domain,"Callable[[Union[None, Domain, Text]],Domain]"
create_tracker_store,"Callable[[Union[TrackerStore, None], Domain],TrackerStore]"
domain,Domain
_create_ensemble,"Callable[[Union[List[Policy], PolicyEnsemble, None]],Union[PolicyEnsemble, None]]"
policies,"Union[List[Policy], PolicyEnsemble, None]"
_check_prediction_aligns_with_story,"Callable[[List[Text], List[Text]],None]"
align_lists,"Callable[[List[Text], List[Text]],Tuple[List[Text], List[Text]]]"
actions_since_last_utterance,"Callable[[DialogueStateTracker],List[Text]]"
tracker,DialogueStateTracker
replay_events,"Callable[[DialogueStateTracker, Agent],None]"
tracker,DialogueStateTracker
agent,Agent
load_tracker_from_json,"Callable[[Text, Domain],DialogueStateTracker]"
tracker_dump,Text
domain,Domain
serve_application,"Callable[[Text, Union[Text, None], Union[Text, None], int, Union[Text, None], bool],_]"
model_directory,Text
port,int
enable_api,bool
__init__,"Callable[[_, Text, List[Event]],None]"
name,Text
class_from_module_path,"Callable[[Text],Any]"
module_path,Text
module_path_from_instance,"Callable[[Any],Text]"
inst,Any
dump_obj_as_json_to_file,"Callable[[Text, Any],None]"
filename,Text
obj,Any
dump_obj_as_str_to_file,"Callable[[Text, Text],None]"
filename,Text
text,Text
subsample_array,"Callable[[List[Any], int, bool, Union[Random, None]],List[Any]]"
max_values,int
can_modify_incoming_array,bool
is_int,"Callable[[Any],bool]"
value,Any
create_dir_for_file,"Callable[[Text],None]"
file_path,Text
wait_for_threads,"Callable[[List[Thread]],None]"
bool_arg,"Callable[[Text, bool],bool]"
name,Text
default,bool
float_arg,"Callable[[Text],Union[float, None]]"
name,Text
extract_args,"Callable[[Dict[Text, Any], Set[Text]],Tuple[Dict[Text, Any], Dict[Text, Any]]]"
concat_url,"Callable[[Text, Union[Text, None]],Text]"
base,Text
all_subclasses,"Callable[[Any],List[Any]]"
cls,Any
read_endpoint_config,"Callable[[Text, Text],Union[EndpointConfig, None]]"
filename,Text
endpoint_type,Text
download_file_from_url,"Callable[[Text],Text]"
url,Text
request,"Callable[[_, Text, Union[Text, None], Union[Text, None]],requests.Response]"
method,Text
kwargs,Any
get_exception_message,"Callable[[List[Tuple[List[Text], Text]]],Text]"
duplicates,"List[Tuple[List[Text], Text]]"
merge,"Callable[[_, Domain, bool],Domain]"
domain,Domain
override,bool
collect_templates,"Callable[[Dict[Text, List[Any]]],Dict[Text, List[Dict[Text, Any]]]]"
yml_templates,"Dict[Text, List[Any]]"
__init__,"Callable[[_, Dict[Text, Any], List[Text], List[Slot], Dict[Text, Any], List[Text], List[Text], bool, _],None]"
store_entities_as_slots,bool
action_for_name,"Callable[[_, Text, Union[EndpointConfig, None]],Union[Action, None]]"
action_name,Text
action_for_index,"Callable[[_, int, Union[EndpointConfig, None]],Union[Action, None]]"
index,int
index_for_action,"Callable[[_, Text],Union[int, None]]"
action_name,Text
index_of_state,"Callable[[_, Text],Union[int, None]]"
state_name,Text
get_parsing_states,"Callable[[_, DialogueStateTracker],Dict[Text, float]]"
tracker,DialogueStateTracker
get_prev_action_states,"Callable[[_, DialogueStateTracker],Dict[Text, float]]"
tracker,DialogueStateTracker
get_active_form,"Callable[[DialogueStateTracker],Dict[Text, float]]"
tracker,DialogueStateTracker
get_active_states,"Callable[[_, DialogueStateTracker],Dict[Text, float]]"
tracker,DialogueStateTracker
states_for_tracker_history,"Callable[[_, DialogueStateTracker],List[Dict[Text, float]]]"
tracker,DialogueStateTracker
persist_specification,"Callable[[_, Text],None]"
model_path,Text
load_specification,"Callable[[_, Text],Dict[Text, Any]]"
path,Text
compare_with_specification,"Callable[[_, Text],bool]"
path,Text
persist,"Callable[[_, Text],None]"
filename,Text
persist_clean,"Callable[[_, Text],None]"
filename,Text
intent_config,"Callable[[_, Text],Dict[Text, Any]]"
intent_name,Text
__init__,"Callable[[_, Union[List[str], None], Union[List[str], None], Union[List[str], None], Union[List[str], None], Union[List[Dict[Text, Any]], None], Union[List[Dict[Text, Any]], None]],None]"
action_predictions,"Union[List[str], None]"
action_targets,"Union[List[str], None]"
intent_predictions,"Union[List[str], None]"
intent_targets,"Union[List[str], None]"
entity_predictions,"Union[List[Dict[Text, Any]], None]"
entity_targets,"Union[List[Dict[Text, Any]], None]"
add_to_store,"Callable[[_, Union[List[str], None], Union[List[str], None], Union[List[str], None], Union[List[str], None], Union[List[Dict[Text, Any]], None], Union[List[Dict[Text, Any]], None]],None]"
action_predictions,"Union[List[str], None]"
action_targets,"Union[List[str], None]"
intent_predictions,"Union[List[str], None]"
intent_targets,"Union[List[str], None]"
entity_predictions,"Union[List[Dict[Text, Any]], None]"
entity_targets,"Union[List[Dict[Text, Any]], None]"
merge_store,"Callable[[_, EvaluationStore],None]"
other,EvaluationStore
collect_story_predictions,"Callable[[List[DialogueStateTracker], Agent, bool, bool],Tuple[StoryEvalution, int]]"
agent,Agent
fail_on_prediction_errors,bool
use_e2e,bool
run_comparison_evaluation,"Callable[[Text, Text, Text],None]"
models,Text
stories_file,Text
output,Text
plot_curve,"Callable[[Text, List[int]],None]"
output,Text
__init__,"Callable[[_, EndpointConfig],None]"
core_endpoint,EndpointConfig
tracker,"Callable[[_, Text, Domain, EventVerbosity, Union[int, None]],_]"
sender_id,Text
domain,Domain
event_verbosity,EventVerbosity
tracker_json,"Callable[[_, Text, EventVerbosity, Union[int, None]],_]"
sender_id,Text
event_verbosity,EventVerbosity
append_event_to_tracker,"Callable[[_, Text, Event],None]"
sender_id,Text
event,Event
respond,"Callable[[_, Text, Text],Union[Dict[Text, Any], None]]"
message,Text
sender_id,Text
upload_model,"Callable[[_, Text, int],Union[Dict[Text, Any], None]]"
model_dir,Text
max_retries,int
from_dict,"Callable[[_, Text, List[Dict[Text, Any]], List[Slot], Union[int, None]],DialogueStateTracker]"
sender_id,Text
events_as_dict,"List[Dict[Text, Any]]"
from_events,"Callable[[_, Text, List[Event], List[Slot], Union[int, None]],_]"
sender_id,Text
current_state,"Callable[[_, EventVerbosity],Dict[Text, Any]]"
event_verbosity,EventVerbosity
past_states,"Callable[[_, Domain],deque]"
domain,Domain
change_form_to,"Callable[[_, Text],None]"
form_name,Text
set_form_validation,"Callable[[_, bool],None]"
validate,bool
reject_action,"Callable[[_, Text],None]"
action_name,Text
set_latest_action_name,"Callable[[_, Text],None]"
action_name,Text
get_slot,"Callable[[_, Text],Union[Any, None]]"
key,Text
get_latest_entity_values,"Callable[[_, Text],Iterator[Text]]"
entity_type,Text
recreate_from_dialogue,"Callable[[_, Dialogue],None]"
dialogue,Dialogue
travel_back_in_time,"Callable[[_, float],DialogueStateTracker]"
target_time,float
update,"Callable[[_, Event],None]"
event,Event
export_stories,"Callable[[_, _],Text]"
export_stories_to_file,"Callable[[_, Text],None]"
export_path,Text
_set_slot,"Callable[[_, Text, Any],None]"
key,Text
value,Any
_create_events,"Callable[[_, List[Event]],deque]"
trigger_followup_action,"Callable[[_, Text],None]"
action,Text
_merge_slots,"Callable[[_, Union[List[Dict[Text, Any]], None]],List[SlotSet]]"
entities,"Union[List[Dict[Text, Any]], None]"
_docs,"Callable[[Text],Text]"
sub_url,Text
requires_auth,"Callable[[Flask, Union[Text, None]],Callable[[Any],Any]]"
app,Flask
decorator,"Callable[[Callable[[Any],Any]],Callable[[Any, Any],Any]]"
f,"Callable[[Any],Any]"
sender_id_from_args,"Callable[[Callable[[Any],Any], Any, Any],Union[Text, None]]"
f,"Callable[[Any],Any]"
args,Any
kwargs,Any
args,Any
kwargs,Any
decorated,"Callable[[],Any]"
args,Any
kwargs,Any
create_app,"Callable[[_, Union[Text, List[Text], None], Union[Text, None], Union[Text, None], Union[Text, None]],_]"
cors_origins,"Union[Text, List[Text], None]"
prepare_from_domain,"Callable[[_, Domain],None]"
domain,Domain
action_as_one_hot,"Callable[[Text, Domain],np.ndarray]"
action,Text
domain,Domain
create_encoded_all_actions,"Callable[[_, Domain],np.ndarray]"
domain,Domain
prepare_from_domain,"Callable[[_, Domain],None]"
domain,Domain
create_encoded_all_actions,"Callable[[_, Domain],np.ndarray]"
domain,Domain
__init__,"Callable[[_, bool, Text],None]"
use_shared_vocab,bool
split_symbol,Text
prepare_from_domain,"Callable[[_, Domain],None]"
domain,Domain
create_encoded_all_actions,"Callable[[_, Domain],np.ndarray]"
domain,Domain
__init__,"Callable[[_, Union[SingleStateFeaturizer, None], bool],None]"
use_intent_probabilities,bool
_create_states,"Callable[[_, DialogueStateTracker, Domain, bool],List[Dict[Text, float]]]"
tracker,DialogueStateTracker
domain,Domain
is_binary_training,bool
_featurize_states,"Callable[[_, List[List[Dict[Text, float]]]],Tuple[np.ndarray, List[int]]]"
trackers_as_states,"List[List[Dict[Text, float]]]"
_featurize_labels,"Callable[[_, List[List[Text]], Domain],np.ndarray]"
trackers_as_actions,List[List[Text]]
domain,Domain
training_states_and_actions,"Callable[[_, List[DialogueStateTracker], Domain],Tuple[List[List[Dict]], List[List[Text]]]]"
domain,Domain
featurize_trackers,"Callable[[_, List[DialogueStateTracker], Domain],DialogueTrainingData]"
domain,Domain
prediction_states,"Callable[[_, List[DialogueStateTracker], Domain],List[List[Dict[Text, float]]]]"
domain,Domain
create_X,"Callable[[_, List[DialogueStateTracker], Domain],np.ndarray]"
domain,Domain
__init__,"Callable[[_, SingleStateFeaturizer, bool],None]"
state_featurizer,SingleStateFeaturizer
use_intent_probabilities,bool
training_states_and_actions,"Callable[[_, List[DialogueStateTracker], Domain],Tuple[List[List[Dict]], List[List[Text]]]]"
domain,Domain
prediction_states,"Callable[[_, List[DialogueStateTracker], Domain],List[List[Dict[Text, float]]]]"
domain,Domain
__init__,"Callable[[_, Union[SingleStateFeaturizer, None], int, bool, bool],None]"
max_history,int
remove_duplicates,bool
use_intent_probabilities,bool
slice_state_history,"Callable[[List[Dict[Text, float]], int],List[Union[Dict[Text, float], None]]]"
states,"List[Dict[Text, float]]"
slice_length,int
training_states_and_actions,"Callable[[_, List[DialogueStateTracker], Domain],Tuple[List[List[Dict]], List[List[Text]]]]"
domain,Domain
prediction_states,"Callable[[_, List[DialogueStateTracker], Domain],List[List[Dict[Text, float]]]]"
domain,Domain
__init__,"Callable[[_, Union[Domain, None], Union[EventChannel, None]],None]"
retrieve,"Callable[[_, Text],Union[DialogueStateTracker, None]]"
sender_id,Text
stream_events,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
__init__,"Callable[[_, Domain, Union[EventChannel, None]],None]"
domain,Domain
save,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
retrieve,"Callable[[_, Text],Union[DialogueStateTracker, None]]"
sender_id,Text
_parse_parameters,"Callable[[Text, int, int, Text],List[Dict[Text, Any]]]"
entitiy_str,Text
sidx,int
eidx,int
user_input,Text
_parse_confidence,"Callable[[Text],float]"
confidence_str,Text
extract_intent_and_entities,"Callable[[Text],object]"
user_input,Text
__init__,"Callable[[_, Text, EndpointConfig, Text],None]"
model_name,Text
endpoint,EndpointConfig
project_name,Text
publish,"Callable[[_, Text],None]"
event,Text
__init__,"Callable[[_, Text, OutputChannel, NaturalLanguageGenerator],None]"
sender_id,Text
output_channel,OutputChannel
nlg,NaturalLanguageGenerator
utter_response,"Callable[[_, Dict[Text, Any]],None]"
utter_message,"Callable[[_, Text],None]"
text,Text
utter_custom_message,"Callable[[_],None]"
utter_button_message,"Callable[[_, Text, List[Dict[Text, Any]]],None]"
text,Text
buttons,"List[Dict[Text, Any]]"
kwargs,Any
utter_attachment,"Callable[[_, Text],None]"
attachment,Text
utter_button_template,"Callable[[_, Text, List[Dict[Text, Any]], DialogueStateTracker, bool],None]"
template,Text
buttons,"List[Dict[Text, Any]]"
tracker,DialogueStateTracker
silent_fail,bool
kwargs,Any
utter_template,"Callable[[_, Text, DialogueStateTracker, bool],None]"
template,Text
tracker,DialogueStateTracker
silent_fail,bool
kwargs,Any
_generate_response,"Callable[[_, Text, DialogueStateTracker, bool],Dict[Text, Any]]"
template,Text
tracker,DialogueStateTracker
silent_fail,bool
kwargs,Any
__init__,"Callable[[_, NaturalLanguageInterpreter, PolicyEnsemble, Domain, TrackerStore, NaturalLanguageGenerator, Union[EndpointConfig, None], int, Union[LambdaType, None], Union[LambdaType, None]],_]"
interpreter,NaturalLanguageInterpreter
policy_ensemble,PolicyEnsemble
domain,Domain
tracker_store,TrackerStore
generator,NaturalLanguageGenerator
max_number_of_predictions,int
handle_message,"Callable[[_, UserMessage],Union[List[Text], None]]"
message,UserMessage
predict_next,"Callable[[_, Text],Union[Dict[Text, Any], None]]"
sender_id,Text
log_message,"Callable[[_, UserMessage],Union[DialogueStateTracker, None]]"
message,UserMessage
execute_action,"Callable[[_, Text, Text, Dispatcher, Text, float],Union[DialogueStateTracker, None]]"
sender_id,Text
action_name,Text
dispatcher,Dispatcher
policy,Text
confidence,float
predict_next_action,"Callable[[_, DialogueStateTracker],Tuple[Action, Text, float]]"
tracker,DialogueStateTracker
_is_reminder_still_valid,"Callable[[DialogueStateTracker, ReminderScheduled],bool]"
tracker,DialogueStateTracker
reminder_event,ReminderScheduled
_has_message_after_reminder,"Callable[[DialogueStateTracker, ReminderScheduled],bool]"
tracker,DialogueStateTracker
reminder_event,ReminderScheduled
handle_reminder,"Callable[[_, ReminderScheduled, Dispatcher],None]"
reminder_event,ReminderScheduled
dispatcher,Dispatcher
_handle_message_with_tracker,"Callable[[_, UserMessage, DialogueStateTracker],None]"
message,UserMessage
tracker,DialogueStateTracker
_schedule_reminders,"Callable[[_, List[Event], Dispatcher],None]"
dispatcher,Dispatcher
log_bot_utterances_on_tracker,"Callable[[DialogueStateTracker, Dispatcher],None]"
tracker,DialogueStateTracker
dispatcher,Dispatcher
_get_tracker,"Callable[[_, Text],Union[DialogueStateTracker, None]]"
sender_id,Text
_prob_array_for_action,"Callable[[_, Text],Tuple[Union[List[float], None], None]]"
action_name,Text
_get_next_action_probabilities,"Callable[[_, DialogueStateTracker],Tuple[Union[List[float], None], Union[Text, None]]]"
tracker,DialogueStateTracker
extract_story_graph,"Callable[[Text, Domain, Union[NaturalLanguageInterpreter, None], bool, int],StoryGraph]"
resource_name,Text
domain,Domain
use_e2e,bool
exclusion_percentage,int
load_data,"Callable[[Text, Domain, bool, Union[int, None], int, Union[int, None], bool, _, int],List[DialogueStateTracker]]"
resource_name,Text
domain,Domain
remove_duplicates,bool
augmentation_factor,int
use_story_concatenation,bool
exclusion_percentage,int
persist_data,"Callable[[List[DialogueStateTracker], Text],None]"
path,Text
past_states,"Callable[[_, Domain],deque]"
domain,Domain
clear_states,"Callable[[_],None]"
init_copy,"Callable[[_],TrackerWithCachedStates]"
copy,"Callable[[_, Text],TrackerWithCachedStates]"
sender_id,Text
_append_current_state,"Callable[[_],None]"
update,"Callable[[_, Event, bool],None]"
event,Event
skip_states,bool
__init__,"Callable[[_, StoryGraph, Domain, bool, Union[int, None], int, Union[int, None], bool, bool],_]"
story_graph,StoryGraph
domain,Domain
remove_duplicates,bool
augmentation_factor,int
use_story_concatenation,bool
debug_plots,bool
generate,"Callable[[_, bool],List[TrackerWithCachedStates]]"
silent,bool
_count_trackers,"Callable[[TrackerLookupDict],int]"
active_trackers,TrackerLookupDict
_find_start_checkpoint_name,"Callable[[_, Text],Text]"
end_name,Text
_filter_active_trackers,"Callable[[TrackerLookupDict, Set[Text]],TrackerLookupDict]"
active_trackers,TrackerLookupDict
_create_start_trackers_for_augmentation,"Callable[[_, List[TrackerWithCachedStates]],TrackerLookupDict]"
_process_step,"Callable[[_, StoryStep, List[TrackerWithCachedStates]],TrackersTuple]"
step,StoryStep
_remove_duplicate_trackers,"Callable[[_, List[TrackerWithCachedStates]],TrackersTuple]"
_mark_first_action_in_story_steps_as_unpredictable,"Callable[[_],None]"
_issue_unused_checkpoint_notification,"Callable[[_, Set[Text]],None]"
send_message,"Callable[[EndpointConfig, Text, Text, Union[Dict[Text, Any], None]],Dict[Text, Any]]"
endpoint,EndpointConfig
sender_id,Text
message,Text
parse_data,"Union[Dict[Text, Any], None]"
request_prediction,"Callable[[EndpointConfig, Text],Dict[Text, Any]]"
endpoint,EndpointConfig
sender_id,Text
retrieve_domain,"Callable[[EndpointConfig],Dict[Text, Any]]"
endpoint,EndpointConfig
retrieve_tracker,"Callable[[EndpointConfig, Text, EventVerbosity],Dict[Text, Any]]"
endpoint,EndpointConfig
sender_id,Text
verbosity,EventVerbosity
send_action,"Callable[[EndpointConfig, Text, Text, Union[Text, None], Union[float, None], bool],Dict[Text, Any]]"
endpoint,EndpointConfig
sender_id,Text
action_name,Text
is_new_action,bool
send_event,"Callable[[EndpointConfig, Text, Dict[Text, Any]],Dict[Text, Any]]"
endpoint,EndpointConfig
sender_id,Text
replace_events,"Callable[[EndpointConfig, Text, List[Dict[Text, Any]]],Dict[Text, Any]]"
endpoint,EndpointConfig
sender_id,Text
evts,"List[Dict[Text, Any]]"
send_finetune,"Callable[[EndpointConfig, List[Dict[Text, Any]]],Dict[Text, Any]]"
endpoint,EndpointConfig
evts,"List[Dict[Text, Any]]"
format_bot_output,"Callable[[Dict[Text, Any]],Text]"
latest_user_message,"Callable[[List[Dict[Text, Any]]],Union[Dict[Text, Any], None]]"
evts,"List[Dict[Text, Any]]"
all_events_before_latest_user_msg,"Callable[[List[Dict[Text, Any]]],List[Dict[Text, Any]]]"
evts,"List[Dict[Text, Any]]"
_ask_questions,"Callable[[List[Dict[Text, Any]], Text, EndpointConfig, Callable[[Dict[Text, Any]],bool]],Dict[Text, Any]]"
questions,"List[Dict[Text, Any]]"
sender_id,Text
endpoint,EndpointConfig
is_abort,"Callable[[Dict[Text, Any]],bool]"
_selection_choices_from_intent_prediction,"Callable[[List[Dict[Text, Any]]],List[Dict[Text, Text]]]"
predictions,"List[Dict[Text, Any]]"
_request_free_text_intent,"Callable[[Text, EndpointConfig],Text]"
sender_id,Text
endpoint,EndpointConfig
_request_free_text_action,"Callable[[Text, EndpointConfig],Text]"
sender_id,Text
endpoint,EndpointConfig
_request_selection_from_intent_list,"Callable[[List[Dict[Text, Text]], Text, EndpointConfig],Text]"
intent_list,"List[Dict[Text, Text]]"
sender_id,Text
endpoint,EndpointConfig
_request_fork_point_from_list,"Callable[[List[Dict[Text, Text]], Text, EndpointConfig],Text]"
forks,"List[Dict[Text, Text]]"
sender_id,Text
endpoint,EndpointConfig
_request_fork_from_user,"Callable[[_, _],Union[List[Dict[Text, Any]], None]]"
_print_history,"Callable[[Text, EndpointConfig],None]"
sender_id,Text
endpoint,EndpointConfig
_chat_history_table,"Callable[[List[Dict[Text, Any]]],Text]"
evts,"List[Dict[Text, Any]]"
bot_width,"Callable[[AsciiTable],int]"
_table,AsciiTable
user_width,"Callable[[AsciiTable],int]"
_table,AsciiTable
_ask_if_quit,"Callable[[Text, EndpointConfig],bool]"
sender_id,Text
endpoint,EndpointConfig
_request_action_from_user,"Callable[[List[Dict[Text, Any]], Text, EndpointConfig],_]"
predictions,"List[Dict[Text, Any]]"
sender_id,Text
endpoint,EndpointConfig
_split_conversation_at_restarts,"Callable[[List[Dict[Text, Any]]],List[List[Dict[Text, Any]]]]"
evts,"List[Dict[Text, Any]]"
_collect_messages,"Callable[[List[Dict[Text, Any]]],List[Message]]"
evts,"List[Dict[Text, Any]]"
_collect_actions,"Callable[[List[Dict[Text, Any]]],List[Dict[Text, Any]]]"
evts,"List[Dict[Text, Any]]"
_write_stories_to_file,"Callable[[Text, List[Dict[Text, Any]]],None]"
export_story_path,Text
evts,"List[Dict[Text, Any]]"
_write_nlu_to_file,"Callable[[Text, List[Dict[Text, Any]]],None]"
export_nlu_path,Text
evts,"List[Dict[Text, Any]]"
_write_domain_to_file,"Callable[[Text, List[Dict[Text, Any]], EndpointConfig],None]"
domain_path,Text
evts,"List[Dict[Text, Any]]"
endpoint,EndpointConfig
_predict_till_next_listen,"Callable[[EndpointConfig, Text, bool, List[Text], Union[Text, None]],None]"
endpoint,EndpointConfig
sender_id,Text
finetune,bool
_correct_wrong_nlu,"Callable[[Dict[Text, Any], List[Dict[Text, Any]], EndpointConfig, Text],None]"
evts,"List[Dict[Text, Any]]"
endpoint,EndpointConfig
sender_id,Text
_correct_wrong_action,"Callable[[Text, EndpointConfig, Text, bool, bool],None]"
corrected_action,Text
endpoint,EndpointConfig
sender_id,Text
finetune,bool
is_new_action,bool
_validate_action,"Callable[[Text, Text, float, List[Dict[Text, Any]], EndpointConfig, Text, bool],bool]"
action_name,Text
policy,Text
confidence,float
predictions,"List[Dict[Text, Any]]"
endpoint,EndpointConfig
sender_id,Text
finetune,bool
_as_md_message,"Callable[[Dict[Text, Any]],Text]"
_validate_user_regex,"Callable[[Dict[Text, Any], List[Text]],bool]"
_validate_user_text,"Callable[[Dict[Text, Any], EndpointConfig, Text],bool]"
endpoint,EndpointConfig
sender_id,Text
_validate_nlu,"Callable[[List[Text], EndpointConfig, Text],None]"
endpoint,EndpointConfig
sender_id,Text
_correct_entities,"Callable[[Dict[Text, Any], EndpointConfig, Text],Dict[Text, Any]]"
endpoint,EndpointConfig
sender_id,Text
_enter_user_message,"Callable[[Text, EndpointConfig],None]"
sender_id,Text
endpoint,EndpointConfig
is_listening_for_message,"Callable[[Text, EndpointConfig],bool]"
sender_id,Text
endpoint,EndpointConfig
_undo_latest,"Callable[[Text, EndpointConfig],None]"
sender_id,Text
endpoint,EndpointConfig
_fetch_events,"Callable[[List[Union[Text, List[Event]]], EndpointConfig],List[List[Event]]]"
sender_ids,"List[Union[Text, List[Event]]]"
endpoint,EndpointConfig
_plot_trackers,"Callable[[List[Union[Text, List[Event]]], Union[Text, None], EndpointConfig, Union[List[Event], None]],_]"
sender_ids,"List[Union[Text, List[Event]]]"
endpoint,EndpointConfig
unconfirmed,"Union[List[Event], None]"
_print_help,"Callable[[bool],None]"
skip_visualization,bool
record_messages,"Callable[[EndpointConfig, Text, Union[int, None], Union[Callable[[],None], None], bool, Union[Text, None], bool],_]"
endpoint,EndpointConfig
sender_id,Text
on_finish,"Union[Callable[[],None], None]"
finetune,bool
skip_visualization,bool
_start_interactive_learning_io,"Callable[[EndpointConfig, Text, Callable[[],None], bool, bool],None]"
endpoint,EndpointConfig
stories,Text
on_finish,"Callable[[],None]"
finetune,bool
skip_visualization,bool
_serve_application,"Callable[[Flask, Text, bool, bool, bool],WSGIServer]"
app,Flask
stories,Text
finetune,bool
serve_forever,bool
skip_visualization,bool
_add_visualization_routes,"Callable[[Flask, Text],None]"
app,Flask
image_path,Text
run_interactive_learning,"Callable[[Agent, Text, bool, bool, bool],WSGIServer]"
agent,Agent
stories,Text
finetune,bool
serve_forever,bool
skip_visualization,bool
_create_reverse_mapping,"Callable[[TrainingData],Dict[Dict[Text, Any], List[Message]]]"
data,TrainingData
_length_of_common_action_prefix,"Callable[[List[Event], List[Event]],int]"
_add_default_nodes,"Callable[[networkx.MultiDiGraph, int],None]"
fontsize,int
_create_graph,"Callable[[int],networkx.MultiDiGraph]"
fontsize,int
_add_message_edge,"Callable[[networkx.MultiDiGraph, Dict[Text, Any], int, int, bool],_]"
current_node,int
next_node_idx,int
is_current,bool
visualize_neighborhood,"Callable[[Union[List[Event], None], List[List[Event]], Union[Text, None], int, NaturalLanguageInterpreter, Union[TrainingData, None], bool, int, int],_]"
current,"Union[List[Event], None]"
event_sequences,List[List[Event]]
max_history,int
interpreter,NaturalLanguageInterpreter
should_merge_nodes,bool
max_distance,int
fontsize,int
_remove_auxiliary_nodes,"Callable[[networkx.MultiDiGraph, int],None]"
special_node_idx,int
visualize_stories,"Callable[[List[StoryStep], Domain, Union[Text, None], int, NaturalLanguageInterpreter, Union[TrainingData, None], bool, int, bool],_]"
domain,Domain
max_history,int
interpreter,NaturalLanguageInterpreter
should_merge_nodes,bool
fontsize,int
silent,bool
_parse_item,"Callable[[_, Text],Union[Message, None]]"
line,Text
add_checkpoint,"Callable[[_, Text, Union[Dict[Text, Any], None]],None]"
name,Text
conditions,"Union[Dict[Text, Any], None]"
_parameters_from_json_string,"Callable[[Text, Text],Dict[Text, Any]]"
s,Text
line,Text
_clean_up_line,"Callable[[Text],Text]"
line,Text
add_checkpoint,"Callable[[_, Text, Union[Dict[Text, Any], None]],None]"
name,Text
conditions,"Union[Dict[Text, Any], None]"
__init__,"Callable[[_, Union[Text, None], Union[Dict[Text, Any], None]],None]"
conditions,"Union[Dict[Text, Any], None]"
__init__,"Callable[[_, Union[Text, None], Union[List[Checkpoint], None], Union[List[Checkpoint], None], Union[List[Event], None]],None]"
start_checkpoints,"Union[List[Checkpoint], None]"
end_checkpoints,"Union[List[Checkpoint], None]"
events,"Union[List[Event], None]"
explicit_events,"Callable[[_, Domain, bool],List[Event]]"
domain,Domain
should_append_final_listen,bool
__init__,"Callable[[_, List[StoryStep], Union[Text, None]],None]"
__init__,"Callable[[_, List[StoryStep], Union[Dict[Text, Text], None]],None]"
story_end_checkpoints,"Union[Dict[Text, Text], None]"
cyclic_edges,"Callable[[_],List[Tuple[Union[StoryStep, None], Union[StoryStep, None]]]]"
with_cycles_removed,"Callable[[_],StoryGraph]"
_remove_unused_generated_cps,"Callable[[_, Dict[Text, StoryStep], Set[Text], Dict[Text, Text]],None]"
_is_checkpoint_in_list,"Callable[[Text, Dict[Text, Any], List[Checkpoint]],bool]"
checkpoint_name,Text
get,"Callable[[_, Text],Union[StoryStep, None]]"
step_id,Text
as_story_string,"Callable[[_],Text]"
order_steps,"Callable[[List[StoryStep]],Tuple[deque, Set[Tuple[Text, Text]]]]"
_group_by_start_checkpoint,"Callable[[List[StoryStep]],Dict[Text, List[StoryStep]]]"
topological_sort,"Callable[[Dict[Text, Set[Text]]],Tuple[deque, Set[Tuple[Text, Text]]]]"
graph,"Dict[Text, Set[Text]]"
deserialise_events,"Callable[[List[Dict[Text, Any]]],List[Event]]"
serialized_events,"List[Dict[Text, Any]]"
from_story_string,"Callable[[Text, Dict[Text, Any], Union[Type[Event], None]],Union[List[Event], None]]"
event_name,Text
default,"Union[Type[Event], None]"
from_parameters,"Callable[[Dict[Text, Any], Union[Type[Event], None]],Union[Event, None]]"
default,"Union[Type[Event], None]"
_from_story_string,"Callable[[_, Dict[Text, Any]],Union[List[Event], None]]"
resolve_by_type,"Callable[[Text, Union[Text, None]],Union[Type[Event], None]]"
type_name,Text
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
_from_story_string,"Callable[[_, Dict[Text, Any]],Union[List[Event], None]]"
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
_from_story_string,"Callable[[_, Dict[Text, Any]],Union[List[Event], None]]"
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
_from_story_string,"Callable[[_, Dict[Text, Any]],Union[List[Event], None]]"
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
_from_story_string,"Callable[[_, Dict[Text, Any]],Union[List[Event], None]]"
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
_from_story_string,"Callable[[_, Dict[Text, Any]],Union[List[Event], None]]"
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
apply_to,"Callable[[_, DialogueStateTracker],None]"
tracker,DialogueStateTracker
ensure_action_name_uniqueness,"Callable[[List[Text]],None]"
action_from_name,"Callable[[Text, Union[EndpointConfig, None], List[Text]],Action]"
name,Text
run,"Callable[[_, Dispatcher, DialogueStateTracker, Domain],List[Event]]"
dispatcher,Dispatcher
tracker,DialogueStateTracker
domain,Domain
__init__,"Callable[[_, Text, Union[EndpointConfig, None]],None]"
name,Text
_action_call_format,"Callable[[_, DialogueStateTracker, Domain],Dict[Text, Any]]"
tracker,DialogueStateTracker
domain,Domain
_utter_responses,"Callable[[List[Dict[Text, Any]], Dispatcher, DialogueStateTracker],None]"
responses,"List[Dict[Text, Any]]"
dispatcher,Dispatcher
tracker,DialogueStateTracker
__init__,"Callable[[_, Union[TrackerFeaturizer, None]],None]"
_get_valid_params,"Callable[[Callable],Dict]"
func,Callable
kwargs,Any
featurize_for_training,"Callable[[_, List[DialogueStateTracker], Domain],DialogueTrainingData]"
domain,Domain
kwargs,Any
train,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
_training_data_for_continue_training,"Callable[[_, int, List[DialogueStateTracker], Domain],DialogueTrainingData]"
batch_size,int
domain,Domain
continue_training,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
predict_action_probabilities,"Callable[[_, DialogueStateTracker, Domain],List[float]]"
tracker,DialogueStateTracker
domain,Domain
persist,"Callable[[_, Text],None]"
path,Text
load,"Callable[[_, Text],Policy]"
path,Text
__init__,"Callable[[_, Union[MaxHistoryTrackerFeaturizer, None], sklearn.base.BaseEstimator, _, Union[int, None], _, LabelEncoder, bool],None]"
model,sklearn.base.BaseEstimator
label_encoder,LabelEncoder
shuffle,bool
train,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
predict_action_probabilities,"Callable[[_, DialogueStateTracker, Domain],List[float]]"
tracker,DialogueStateTracker
domain,Domain
persist,"Callable[[_, Text],None]"
path,Text
load,"Callable[[_, Text],Policy]"
path,Text
__init__,"Callable[[_, Union[FullDialogueTrackerFeaturizer, None], Union[np.ndarray, None], Union[tf.Graph, None], Union[tf.Session, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None], Union[tf.Tensor, None]],None]"
encoded_all_actions,"Union[np.ndarray, None]"
graph,"Union[tf.Graph, None]"
session,"Union[tf.Session, None]"
intent_placeholder,"Union[tf.Tensor, None]"
action_placeholder,"Union[tf.Tensor, None]"
slots_placeholder,"Union[tf.Tensor, None]"
prev_act_placeholder,"Union[tf.Tensor, None]"
dialogue_len,"Union[tf.Tensor, None]"
x_for_no_intent,"Union[tf.Tensor, None]"
y_for_no_action,"Union[tf.Tensor, None]"
y_for_action_listen,"Union[tf.Tensor, None]"
similarity_op,"Union[tf.Tensor, None]"
alignment_history,"Union[tf.Tensor, None]"
user_embed,"Union[tf.Tensor, None]"
bot_embed,"Union[tf.Tensor, None]"
slot_embed,"Union[tf.Tensor, None]"
dial_embed,"Union[tf.Tensor, None]"
rnn_embed,"Union[tf.Tensor, None]"
attn_embed,"Union[tf.Tensor, None]"
copy_attn_debug,"Union[tf.Tensor, None]"
all_time_masks,"Union[tf.Tensor, None]"
kwargs,Any
_load_nn_architecture_params,"Callable[[_, Dict[Text, Any]],None]"
_load_embedding_params,"Callable[[_, Dict[Text, Any]],None]"
_load_regularization_params,"Callable[[_, Dict[Text, Any]],None]"
_load_attn_params,"Callable[[_, Dict[Text, Any]],None]"
_load_visual_params,"Callable[[_, Dict[Text, Any]],None]"
_load_params,"Callable[[_],None]"
_create_X_slots_previous_actions,"Callable[[_, np.ndarray],Tuple[np.ndarray, np.ndarray, np.ndarray]]"
_create_y_for_action_listen,"Callable[[_, Domain],np.ndarray]"
domain,Domain
_create_all_Y_d,"Callable[[_, int],np.ndarray]"
dialogue_len,int
_create_tf_session_data,"Callable[[_, Domain, np.ndarray, Union[np.ndarray, None]],SessionData]"
domain,Domain
data_Y,"Union[np.ndarray, None]"
_create_tf_nn,"Callable[[_, tf.Tensor, List, float, Text],tf.Tensor]"
layer_sizes,List
droprate,float
layer_name_suffix,Text
_create_embed,"Callable[[_, tf.Tensor, Text],tf.Tensor]"
layer_name_suffix,Text
_num_units,"Callable[[tf.Tensor],int]"
_create_attn_mech,"Callable[[_, tf.Tensor, tf.Tensor],tf.contrib.seq2seq.AttentionMechanism]"
cell_input_fn,"Callable[[_, tf.Tensor, tf.Tensor, int],tf.Tensor]"
num_cell_input_memory_units,int
rnn_and_attn_inputs_fn,"Callable[[_, tf.Tensor, tf.Tensor],Tuple[tf.Tensor, tf.Tensor]]"
_create_attn_cell,"Callable[[_, tf.contrib.rnn.RNNCell, tf.Tensor, tf.Tensor, tf.Tensor, tf.Tensor, tf.Tensor, tf.Tensor],tf.contrib.rnn.RNNCell]"
cell,tf.contrib.rnn.RNNCell
_create_tf_dial_embed,"Callable[[_, tf.Tensor, tf.Tensor, tf.Tensor, tf.Tensor, tf.Tensor, tf.Tensor, tf.Tensor],Tuple[tf.Tensor, tf.Tensor]]"
_alignments_history_from,"Callable[[tf.contrib.seq2seq.AttentionWrapperState],tf.Tensor]"
final_state,tf.contrib.seq2seq.AttentionWrapperState
_all_time_masks_from,"Callable[[TimeAttentionWrapperState],tf.Tensor]"
final_state,TimeAttentionWrapperState
_sim_rnn_to_max_from,"Callable[[_, tf.Tensor],List[tf.Tensor]]"
_tf_sim,"Callable[[_, tf.Tensor, tf.Tensor, tf.Tensor],Tuple[tf.Tensor, tf.Tensor]]"
train,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
_linearly_increasing_batch_size,"Callable[[_, int],int]"
epoch,int
_scale_loss_by_count_actions,"Callable[[_, np.ndarray, np.ndarray, np.ndarray, np.ndarray],Union[np.ndarray, List[List]]]"
_train_tf,"Callable[[_, SessionData, tf.Tensor, tf.Tensor],None]"
session_data,SessionData
_calc_train_acc,"Callable[[_, SessionData, tf.Tensor],np.float32]"
session_data,SessionData
continue_training,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
predict_action_probabilities,"Callable[[_, DialogueStateTracker, Domain],List[float]]"
tracker,DialogueStateTracker
domain,Domain
_persist_tensor,"Callable[[_, Text, tf.Tensor],None]"
name,Text
persist,"Callable[[_, Text],None]"
path,Text
load_tensor,"Callable[[Text],Union[tf.Tensor, None]]"
name,Text
load,"Callable[[_, Text],EmbeddingPolicy]"
path,Text
__init__,"Callable[[_, Union[TrackerFeaturizer, None], Union[int, None], Union[Dict, None]],None]"
toggle,"Callable[[_, bool],None]"
activate,bool
train,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
continue_training,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
_recall_states,"Callable[[_, List[Dict[Text, float]]],Union[int, None]]"
states,"List[Dict[Text, float]]"
recall,"Callable[[_, List[Dict[Text, float]], DialogueStateTracker, Domain],Union[int, None]]"
states,"List[Dict[Text, float]]"
tracker,DialogueStateTracker
domain,Domain
predict_action_probabilities,"Callable[[_, DialogueStateTracker, Domain],List[float]]"
tracker,DialogueStateTracker
domain,Domain
persist,"Callable[[_, Text],None]"
path,Text
load,"Callable[[_, Text],MemoizationPolicy]"
path,Text
recall,"Callable[[_, List[Dict[Text, float]], DialogueStateTracker, Domain],Union[int, None]]"
states,"List[Dict[Text, float]]"
tracker,DialogueStateTracker
domain,Domain
__init__,"Callable[[_, float, float, Text],None]"
nlu_threshold,float
core_threshold,float
fallback_action_name,Text
train,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
should_fallback,"Callable[[_, float, Text],bool]"
nlu_confidence,float
last_action_name,Text
predict_action_probabilities,"Callable[[_, DialogueStateTracker, Domain],List[float]]"
tracker,DialogueStateTracker
domain,Domain
persist,"Callable[[_, Text],None]"
path,Text
load,"Callable[[_, Text],FallbackPolicy]"
path,Text
__init__,"Callable[[_, Union[TrackerFeaturizer, None], Union[tf.keras.models.Sequential, None], Union[tf.Graph, None], Union[tf.Session, None], int, Union[int, None]],None]"
model,"Union[tf.keras.models.Sequential, None]"
graph,"Union[tf.Graph, None]"
session,"Union[tf.Session, None]"
current_epoch,int
kwargs,Any
_load_params,"Callable[[_],None]"
model_architecture,"Callable[[_, Tuple[int, int], Tuple[int, Union[int, None]]],tf.keras.models.Sequential]"
output_shape,"Tuple[int, Union[int, None]]"
train,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
continue_training,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
predict_action_probabilities,"Callable[[_, DialogueStateTracker, Domain],List[float]]"
tracker,DialogueStateTracker
domain,Domain
persist,"Callable[[_, Text],None]"
path,Text
load,"Callable[[_, Text],KerasPolicy]"
path,Text
__init__,"Callable[[_, List[Policy], Union[Dict, None]],None]"
train,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
probabilities_using_best_policy,"Callable[[_, DialogueStateTracker, Domain],Tuple[List[float], Text]]"
tracker,DialogueStateTracker
domain,Domain
_persist_metadata,"Callable[[_, Text, bool],None]"
path,Text
dump_flattened_stories,bool
persist,"Callable[[_, Text, bool],None]"
path,Text
dump_flattened_stories,bool
load,"Callable[[_, Text],PolicyEnsemble]"
path,Text
continue_training,"Callable[[_, List[DialogueStateTracker], Domain],None]"
domain,Domain
kwargs,Any
probabilities_using_best_policy,"Callable[[_, DialogueStateTracker, Domain],Tuple[List[float], Text]]"
tracker,DialogueStateTracker
domain,Domain
__init__,"Callable[[_, Union[TrackerFeaturizer, None], Union[Dict, None]],None]"
recall,"Callable[[_, List[Dict[Text, float]], DialogueStateTracker, Domain],Union[int, None]]"
states,"List[Dict[Text, float]]"
tracker,DialogueStateTracker
domain,Domain
predict_action_probabilities,"Callable[[_, DialogueStateTracker, Domain],List[float]]"
tracker,DialogueStateTracker
domain,Domain
__init__,"Callable[[_, Union[Text, None], Union[OutputChannel, None], Text, Dict[Text, Any], Text],None]"
sender_id,Text
input_channel,Text
register,"Callable[[List[InputChannel], Flask, Callable[[UserMessage],None], Text],None]"
app,Flask
on_new_message,"Callable[[UserMessage],None]"
route,Text
blueprint,"Callable[[_, Callable[[UserMessage],None]],None]"
on_new_message,"Callable[[UserMessage],None]"
send_response,"Callable[[_, Text, Dict[Text, Any]],None]"
recipient_id,Text
send_text_message,"Callable[[_, Text, Text],None]"
recipient_id,Text
message,Text
send_image_url,"Callable[[_, Text, Text],None]"
recipient_id,Text
image_url,Text
send_attachment,"Callable[[_, Text, Text],None]"
recipient_id,Text
attachment,Text
send_text_with_buttons,"Callable[[_, Text, Text, List[Dict[Text, Any]]],None]"
recipient_id,Text
message,Text
buttons,"List[Dict[Text, Any]]"
kwargs,Any
send_custom_message,"Callable[[_, Text, Iterable[Dict[Text, Any]]],None]"
recipient_id,Text
elements,"Iterable[Dict[Text, Any]]"
send_image_url,"Callable[[_, Text, Text],None]"
recipient_id,Text
image_url,Text
send_attachment,"Callable[[_, Text, Text],None]"
recipient_id,Text
attachment,Text
__init__,"Callable[[_, Queue],None]"
message_queue,Queue
__init__,"Callable[[_, Text, Union[Text, None]],None]"
access_token,Text
__init__,"Callable[[_, Text, Text, Dict[Text, Any], Text, Text],None]"
app_id,Text
app_password,Text
bot_id,Text
service_url,Text
send,"Callable[[_, Text, Dict[Text, Any]],None]"
recipient_id,Text
__init__,"Callable[[_, Text, Text],None]"
app_id,Text
app_password,Text
__init__,"Callable[[_, Text, Callable[[UserMessage],None]],None]"
page_access_token,Text
on_new_message,"Callable[[UserMessage],None]"
_is_audio_message,"Callable[[Dict[Text, Any]],bool]"
_is_user_message,"Callable[[Dict[Text, Any]],bool]"
message,"Callable[[_, Dict[Text, Any]],None]"
postback,"Callable[[_, Dict[Text, Any]],None]"
_handle_user_message,"Callable[[_, Text, Text],None]"
text,Text
sender_id,Text
delivery,"Callable[[_, Dict[Text, Any]],None]"
read,"Callable[[_, Dict[Text, Any]],None]"
account_linking,"Callable[[_, Dict[Text, Any]],None]"
optin,"Callable[[_, Dict[Text, Any]],None]"
__init__,"Callable[[_, MessengerClient],None]"
messenger_client,MessengerClient
send,"Callable[[_, Text, Any],None]"
recipient_id,Text
element,Any
send_text_message,"Callable[[_, Text, Text],None]"
recipient_id,Text
message,Text
send_image_url,"Callable[[_, Text, Text],None]"
recipient_id,Text
image_url,Text
send_text_with_buttons,"Callable[[_, Text, Text, List[Dict[Text, Any]]],None]"
recipient_id,Text
text,Text
buttons,"List[Dict[Text, Any]]"
kwargs,Any
send_custom_message,"Callable[[_, Text, List[Dict[Text, Any]]],None]"
recipient_id,Text
elements,"List[Dict[Text, Any]]"
_add_postback_info,"Callable[[List[Dict[Text, Any]]],None]"
buttons,"List[Dict[Text, Any]]"
_recipient_json,"Callable[[Text],Dict[Text, Dict[Text, Text]]]"
recipient_id,Text
__init__,"Callable[[_, Text, Text, Text],None]"
fb_verify,Text
fb_secret,Text
fb_access_token,Text
__init__,"Callable[[_, Text, Text, Text],None]"
user,Text
password,Text
server_url,Text
__init__,"Callable[[_, Text, Text, Text, Text],None]"
url,Text
team,Text
user,Text
pw,Text
send,"Callable[[_, Text, Any],None]"
recipient_id,Text
message,Any
_send_message,"Callable[[_, Text, Any],None]"
recipient_id,Text
response,Any
send_text_message,"Callable[[_, Text, Text],None]"
recipient_id,Text
message,Text
send_image_url,"Callable[[_, Text, Text],None]"
recipient_id,Text
image_url,Text
send_text_with_buttons,"Callable[[_, Text, Text, List[Dict[Text, Any]]],None]"
recipient_id,Text
text,Text
buttons,"List[Dict[Text, Any]]"
kwargs,Any
send_custom_message,"Callable[[_, Text, List[Dict[Text, Any]]],None]"
recipient_id,Text
elements,"List[Dict[Text, Any]]"
__init__,"Callable[[_, Text, Text, Union[Text, None], _],_]"
user_message_evt,Text
bot_message_evt,Text
__init__,"Callable[[_, Text, Union[Text, None]],None]"
token,Text
__init__,"Callable[[_, Text, Union[Text, None], Union[List[Text], None]],None]"
slack_token,Text
errors_ignore_retry,"Union[List[Text], None]"
__init__,"Callable[[_, EndpointConfig],None]"
endpoint,EndpointConfig
create,"Callable[[Union[NaturalLanguageGenerator, EndpointConfig, None], Union[Domain, None]],NaturalLanguageGenerator]"
__init__,"Callable[[_, Dict[Text, List[Dict[Text, Any]]]],None]"
templates,"Dict[Text, List[Dict[Text, Any]]]"
_random_template_for,"Callable[[_, Text, Text],Union[Dict[Text, Any], None]]"
utter_action,Text
output_channel,Text
generate,"Callable[[_, Text, DialogueStateTracker, Text],Union[Dict[Text, Any], None]]"
template_name,Text
tracker,DialogueStateTracker
output_channel,Text
kwargs,Any
generate_from_slots,"Callable[[_, Text, Dict[Text, Any], Text],Union[Dict[Text, Any], None]]"
template_name,Text
output_channel,Text
kwargs,Any
_fill_template_text,"Callable[[_, Dict[Text, Any], Union[Dict[Text, Any], None]],Dict[Text, Any]]"
filled_slots,"Union[Dict[Text, Any], None]"
kwargs,Any
nlg_request_format,"Callable[[Text, DialogueStateTracker, Text],Dict[Text, Any]]"
template_name,Text
tracker,DialogueStateTracker
output_channel,Text
kwargs,Any
__init__,"Callable[[_, EndpointConfig],None]"
endpoint_config,EndpointConfig
generate,"Callable[[_, Text, DialogueStateTracker, Text],Dict[Text, Any]]"
template_name,Text
tracker,DialogueStateTracker
output_channel,Text
kwargs,Any
validate_response,"Callable[[Union[Dict[Text, Any], None]],bool]"
content,"Union[Dict[Text, Any], None]"
required_slots,"Callable[[Tracker],List[Text]]"
tracker,Tracker
is_int,"Callable[[Text],bool]"
string,Text
validate,"Callable[[_, CollectingDispatcher, Tracker, Dict[Text, Any]],List[Dict]]"
dispatcher,CollectingDispatcher
tracker,Tracker
submit,"Callable[[_, CollectingDispatcher, Tracker, Dict[Text, Any]],List[Dict]]"
dispatcher,CollectingDispatcher
tracker,Tracker
